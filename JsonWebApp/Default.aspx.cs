using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Text;
using System.Net;
using System.IO;

namespace JsonWebApp
{
    public partial class Default : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            //传智题库json转换
            string strjson = "{\"code\":0,\"data\":{\"total\":396,\"current\":1,\"hitCount\":false,\"pages\":1,\"size\":398,\"optimizeCountSql\":true,\"records\":[{\"questionLib\":null,\"origin\":1,\"editTime\":\"2022-03-14 11:28:11\",\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>B/S架构是Browser/Server的简写，也就是浏览器/服务器端的交互。</pre>\",\"options\":\"null\",\"optionTransferList\":null,\"id\":\"c0e3a09878f1403786f15735dfc25a16\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的知识讲解\",\"questionContent\":\"<pre>Browser/Server架构的简写是【】，也就是浏览器/服务器端的交互。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Browser/Server架构的简写是【】，也就是浏览器/服务器端的交互。\",\"difficulty\":\"B\",\"answer\":\"[\\\"B/S\\\"]\",\"createTime\":\"2022-03-14 11:28:11\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>cmd命令窗口中的发布输出目录后输入&ldquo;dotnet Order.dll&rdquo;命令，并按下&ldquo;Enter&rdquo;键，启动应用程序，启动成功后，在cmd命令窗口中会输出一些启动应用成功的信息。</pre>\",\"options\":\"[\\\"net Order.dll\\\", \\\"dotnet Orders.dll\\\", \\\"dotnet Order.dll\\\", \\\"dot Order.dll\\\"]\",\"optionTransferList\":[\"A、net Order.dll\",\"B、dotnet Orders.dll\",\"C、dotnet Order.dll\",\"D、dot Order.dll\"],\"id\":\"2c93869d790dcfce017a665920d10f82\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"发布应用程序的动手实践\",\"questionContent\":\"<pre>下列选项中，属于可以在cmd命令窗口中启动名为Order的应用程序的命令是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，属于可以在cmd命令窗口中启动名为Order的应用程序的命令是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":[\"net Order.dll\",\"dotnet Orders.dll\",\"dotnet Order.dll\",\"dot Order.dll\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>除了使用cmd命令方式启动应用程序之外，还可以直接在发布目录中，找到Order.exe文件，双击该文件也可以启动应用程序。</pre>\",\"options\":\"[\\\"Order.exe\\\", \\\"Order.cs\\\", \\\"Order.java\\\", \\\"Orders.exe\\\"]\",\"optionTransferList\":[\"A、Order.exe\",\"B、Order.cs\",\"C、Order.java\",\"D、Orders.exe\"],\"id\":\"2c93869d790dcfce017a665920d60f83\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"发布应用程序的动手实践\",\"questionContent\":\"<pre>下列选项中，（）文件被双击后可以启动名为Order的应用程序。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）文件被双击后可以启动名为Order的应用程序。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":[\"Order.exe\",\"Order.cs\",\"Order.java\",\"Orders.exe\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>应用程序启动成功后，可以通过浏览器访问https://localhost:5001来验证程序是否启动成功。</pre>\",\"options\":\"[\\\"https://localhost\\\", \\\"https://localhosts:5001\\\", \\\"https://localhost:5002\\\", \\\"https://localhost:5001\\\"]\",\"optionTransferList\":[\"A、https://localhost\",\"B、https://localhosts:5001\",\"C、https://localhost:5002\",\"D、https://localhost:5001\"],\"id\":\"2c93869d790dcfce017a665920da0f84\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"发布应用程序的动手实践\",\"questionContent\":\"<pre>下列选项中，（）可以验证程序是否启动成功。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）可以验证程序是否启动成功。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":[\"https://localhost\",\"https://localhosts:5001\",\"https://localhost:5002\",\"https://localhost:5001\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>cmd命令窗口中的发布输出目录后输入&ldquo;dotnet Order.dll&rdquo;命令，并按下&ldquo;Enter&rdquo;键，启动应用程序，启动成功后，在cmd命令窗口中会输出一些启动应用成功的信息。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665920de0f85\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"发布应用程序的动手实践\",\"questionContent\":\"<pre>在cmd命令窗口中输入【】命令可以启动名为Order的应用程序。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在cmd命令窗口中输入【】命令可以启动名为Order的应用程序。\",\"difficulty\":\"B\",\"answer\":\"[\\\"dotnet Order.dll\\\"]\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>除了使用cmd命令方式启动应用程序之外，还可以直接在发布目录中，找到Order.exe文件，双击该文件也可以启动应用程序。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665920e20f86\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"发布应用程序的动手实践\",\"questionContent\":\"<pre>程序发布目录中的【】文件被双击后可以启动名为Order的应用程序。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"程序发布目录中的【】文件被双击后可以启动名为Order的应用程序。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Order.exe\\\"]\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665920e70f87\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"发布应用程序的动手实践\",\"questionContent\":\"<pre>应用程序启动成功后，可以通过浏览器访问https://localhost:5001来验证程序是否启动成功。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"应用程序启动成功后，可以通过浏览器访问https://localhost:5001来验证程序是否启动成功。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665920eb0f88\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"发布应用程序的动手实践\",\"questionContent\":\"<pre>请简述如何验证程序是否发布成功。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述如何验证程序是否发布成功。\",\"difficulty\":\"D\",\"answer\":\"<pre>发布成功后可通过cmd命令窗口验证程序是否发布成功，在cmd命令窗口中的具体操作如下：\\n1.首先在cmd命令窗口中输入进入到发布目录publish下的命令，并按下&ldquo;Enter&rdquo;键，进入到发布输出目录publish目录下。\\n2.在cmd命令窗口中的发布输出目录后输入&ldquo;dotnet Order.dll&rdquo;命令，并按下&ldquo;Enter&rdquo;键，启动应用程序，启动成功后，在cmd命令窗口中会输出一些启动应用成功的信息。\\n3.除了使用cmd命令方式启动应用程序之外，还可以直接在发布目录中，找到Order.exe文件，双击该文件也可以启动应用程序。\\n4.应用程序启动成功后，可以通过浏览器访问https://localhost:5001来验证程序是否启动成功。如果浏览器页面上会显示应用程序的首页页面，则说明程序已经启动成功。</pre>\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665920ef0f89\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"发布应用程序的动手实践\",\"questionContent\":\"<pre>请简述程序中的哪些文件需要部署到服务器上。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述程序中的哪些文件需要部署到服务器上。\",\"difficulty\":\"D\",\"answer\":\"<pre>部署到服务器上的必要文件的具体介绍如下：\\n编写ASP.NET Core应用程序需要创建和编辑多个文件，但是如果将应用程序部署到生产服务器或暂存服务器，并不是所有文件都是必须有的。因此，部署ASP.NET Core应用程序的第一步是将应用程序发布到一个本地文件夹，编译必要的文件，并将这些需要移动到生产环境的文件单独保存。需要部署的文件通常包括源代码文件编译成的DLL文件，以及静态文件和配置文件，接着可以将这些文件部署到服务器上。</pre>\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665920f30f8a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"发布应用程序的拓展学习\",\"questionContent\":\"<pre>部署ASP.NET Core应用程序时，需要部署的文件包括源代码文件编译成的DLL文件，以及静态文件和配置文件。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"部署ASP.NET Core应用程序时，需要部署的文件包括源代码文件编译成的DLL文件，以及静态文件和配置文件。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>如果想要让发布成功的程序部署到IIS服务器上，首先需要在IIS服务器上安装.NET Core托管捆绑包。</pre>\",\"options\":\"[\\\"IIS站点\\\", \\\".NET托管捆绑包\\\", \\\".NET Cores\\\", \\\".NET Core托管捆绑包\\\"]\",\"optionTransferList\":[\"A、IIS站点\",\"B、.NET托管捆绑包\",\"C、.NET Cores\",\"D、.NET Core托管捆绑包\"],\"id\":\"2c93869d790dcfce017a665920f60f8b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"部署应用程序的动手实践\",\"questionContent\":\"<pre>下列选项中，（）安装在IIS服务器上可以让发布成功的程序部署到IIS服务器上。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）安装在IIS服务器上可以让发布成功的程序部署到IIS服务器上。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":[\"IIS站点\",\".NET托管捆绑包\",\".NET Cores\",\".NET Core托管捆绑包\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>.NET Core模块允许.NET Core应用程序在IIS服务器后台运行。</pre>\",\"options\":\"[\\\".NET Core运行时\\\", \\\".NET Core模块\\\", \\\".NET Core库\\\", \\\".NET托管捆绑包\\\"]\",\"optionTransferList\":[\"A、.NET Core运行时\",\"B、.NET Core模块\",\"C、.NET Core库\",\"D、.NET托管捆绑包\"],\"id\":\"2c93869d790dcfce017a665920fb0f8c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"部署应用程序的动手实践\",\"questionContent\":\"<pre>下列选项中，（）允许.NET Core应用程序在IIS服务器后台运行。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）允许.NET Core应用程序在IIS服务器后台运行。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":[\".NET Core运行时\",\".NET Core模块\",\".NET Core库\",\".NET托管捆绑包\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>为了让应用程序池的权限更大一些，需要设置进程模型中的标识值为&ldquo;LocalSystem&rdquo;。</pre>\",\"options\":\"[\\\"LocalService\\\", \\\"NetworkService\\\", \\\"ApplicationPoolIdentity\\\", \\\"LocalSystem\\\"]\",\"optionTransferList\":[\"A、LocalService\",\"B、NetworkService\",\"C、ApplicationPoolIdentity\",\"D、LocalSystem\"],\"id\":\"2c93869d790dcfce017a665920fe0f8d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"部署应用程序的动手实践\",\"questionContent\":\"<pre>下列选项中，（）作为进程模型中的标识值时，可以让应用程序池的权限更大一些。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）作为进程模型中的标识值时，可以让应用程序池的权限更大一些。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":[\"LocalService\",\"NetworkService\",\"ApplicationPoolIdentity\",\"LocalSystem\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>在IIS服务器上安装.NET Core托管捆绑包，该捆绑包可以安装.NET Core运行时、.NET Core库和.NET Core模块。</pre>\",\"options\":\"[\\\".NET Core运行时\\\", \\\".NET托管捆绑包\\\", \\\".NET Core库\\\", \\\".NET Core模块\\\"]\",\"optionTransferList\":[\"A、.NET Core运行时\",\"B、.NET托管捆绑包\",\"C、.NET Core库\",\"D、.NET Core模块\"],\"id\":\"2c93869d790dcfce017a665921030f8e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"部署应用程序的动手实践\",\"questionContent\":\"<pre>当在IIS服务器上安装.NET Core托管捆绑包时，会安装下列选项中的（）。</pre>\",\"answerTransferList\":[\"A\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当在IIS服务器上安装.NET Core托管捆绑包时，会安装下列选项中的（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":[\".NET Core运行时\",\".NET托管捆绑包\",\".NET Core库\",\".NET Core模块\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在IIS服务器上安装.NET Core托管捆绑包，该捆绑包可以安装.NET Core运行时、.NET Core库和.NET Core模块。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665921070f8f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"部署应用程序的动手实践\",\"questionContent\":\"<pre>在IIS服务器上安装.NET Core托管捆绑包，该捆绑包可以安装.NET Core运行时、.NET Core库和【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在IIS服务器上安装.NET Core托管捆绑包，该捆绑包可以安装.NET Core运行时、.NET Core库和【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\".NET Core模块\\\"]\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>为了让应用程序池的权限更大一些，需要设置进程模型中的标识值为&ldquo;LocalSystem&rdquo;。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6659210b0f90\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"部署应用程序的动手实践\",\"questionContent\":\"<pre>为了让应用程序池的权限更大一些，需要设置进程模型中的标识值为&ldquo;LocalService&rdquo;。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"为了让应用程序池的权限更大一些，需要设置进程模型中的标识值为“LocalService”。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>.NET Core模块允许.NET Core应用程序在IIS服务器后台运行。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6659210f0f91\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"部署应用程序的动手实践\",\"questionContent\":\"<pre>.NET Core运行时允许.NET Core应用程序在IIS服务器后台运行。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\".NET Core运行时允许.NET Core应用程序在IIS服务器后台运行。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665921140f92\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"部署应用程序的拓展学习\",\"questionContent\":\"<pre>微软为.Net Core框架也提供了IIS服务器的部署方式。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"微软为.Net Core框架也提供了IIS服务器的部署方式。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:32:31\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>ASP.Net Core Identity框架是一套用户管理系统，不仅可以提供注册登录的功能，还能在数据库中对存储的密码进行安全加密。\\nASP.NET Core Identity提供了许多用于保护应用安全的工具和库，但也可以使用第三方标志服务（如微信、Facebook、Twitter或LinkedIn）。</pre>\",\"options\":\"[\\\"ASP.Net Core Identity框架提供了身份验证（Authentication）和授权（Authorization）两个功能。\\\", \\\"ASP.Net Core Identity框架只能提供登录和注册功能。\\\", \\\"ASP.Net Core Identity框架在数据库中对存储的用户账号进行安全加密。\\\", \\\"ASP.Net Core Identity框架提供了许多用于保护应用安全的工具和库，但是不可以使用第三方标志服务。\\\"]\",\"optionTransferList\":[\"A、ASP.Net Core Identity框架提供了身份验证（Authentication）和授权（Authorization）两个功能。\",\"B、ASP.Net Core Identity框架只能提供登录和注册功能。\",\"C、ASP.Net Core Identity框架在数据库中对存储的用户账号进行安全加密。\",\"D、ASP.Net Core Identity框架提供了许多用于保护应用安全的工具和库，但是不可以使用第三方标志服务。\"],\"id\":\"2c93869d790dcfce017a66589b870f67\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的知识讲解\",\"questionContent\":\"<pre>下列关于ASP.Net Core Identity框架的描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于ASP.Net Core Identity框架的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"ASP.Net Core Identity框架提供了身份验证（Authentication）和授权（Authorization）两个功能。\",\"ASP.Net Core Identity框架只能提供登录和注册功能。\",\"ASP.Net Core Identity框架在数据库中对存储的用户账号进行安全加密。\",\"ASP.Net Core Identity框架提供了许多用于保护应用安全的工具和库，但是不可以使用第三方标志服务。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>身份验证的目的是让系统准确地分辨出哪个用户在登录网站。</pre>\",\"options\":\"[\\\"身份验证\\\", \\\"授权\\\", \\\"登录\\\", \\\"注册\\\"]\",\"optionTransferList\":[\"A、身份验证\",\"B、授权\",\"C、登录\",\"D、注册\"],\"id\":\"2c93869d790dcfce017a66589b8c0f68\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）功能的目的是让系统准确地分辨出哪个用户在登录网站。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）功能的目的是让系统准确地分辨出哪个用户在登录网站。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"身份验证\",\"授权\",\"登录\",\"注册\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>授权是来管理用户的权限。</pre>\",\"options\":\"[\\\"身份验证\\\", \\\"授权\\\", \\\"登录\\\", \\\"注册\\\"]\",\"optionTransferList\":[\"A、身份验证\",\"B、授权\",\"C、登录\",\"D、注册\"],\"id\":\"2c93869d790dcfce017a66589b900f69\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）功能的目的是管理用户的权限。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）功能的目的是管理用户的权限。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"身份验证\",\"授权\",\"登录\",\"注册\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>ASP.NET Core Identity框架中的功能包括管理身份验证、授权、数据保护、HTTPS强制、应用机密、请求防伪保护及CORS管理。</pre>\",\"options\":\"[\\\"管理身份验证\\\", \\\"管理身份授权\\\", \\\"数据保护\\\", \\\"HTTPS强制\\\"]\",\"optionTransferList\":[\"A、管理身份验证\",\"B、管理身份授权\",\"C、数据保护\",\"D、HTTPS强制\"],\"id\":\"2c93869d790dcfce017a66589b940f6a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）功能包含在ASP.Net Core Identity框架中。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）功能包含在ASP.Net Core Identity框架中。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"管理身份验证\",\"管理身份授权\",\"数据保护\",\"HTTPS强制\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>ASP.Net Core Identity框架是一套用户管理系统，不仅可以提供注册登录的功能，还能在数据库中对存储的密码进行安全加密。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589b980f6b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的知识讲解\",\"questionContent\":\"<pre>【】框架是一套用户管理系统，不仅可以提供注册登录的功能，还能在数据库中对存储的密码进行安全加密。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】框架是一套用户管理系统，不仅可以提供注册登录的功能，还能在数据库中对存储的密码进行安全加密。\",\"difficulty\":\"B\",\"answer\":\"[\\\" ASP.Net Core Identity\\\"]\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589b9c0f6c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的知识讲解\",\"questionContent\":\"<pre>ASP.Net Core Identity框架是一套用户管理系统，不仅可以提供注册登录的功能，还能在数据库中对存储的密码进行安全加密。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ASP.Net Core Identity框架是一套用户管理系统，不仅可以提供注册登录的功能，还能在数据库中对存储的密码进行安全加密。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>身份验证的目的是让系统准确地分辨出哪个用户在登录网站。授权是来管理用户的权限。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589ba10f6d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的知识讲解\",\"questionContent\":\"<pre>ASP.Net Core Identity框架中的身份验证功能的目的是来管理用户的权限。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ASP.Net Core Identity框架中的身份验证功能的目的是来管理用户的权限。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>IdentityDbContext类所在的包为Microsoft.AspNetCore.Identity.EntityFrameworkCore。</pre>\",\"options\":\"[\\\"Microsoft.EntityFrameworkCore\\\", \\\"Microsoft.AspNetCore.Identity\\\", \\\"Microsoft.AspNetCore.Identity.EntityFrameworkCore\\\", \\\"Microsoft.EntityFrameworkCore.Design\\\"]\",\"optionTransferList\":[\"A、Microsoft.EntityFrameworkCore\",\"B、Microsoft.AspNetCore.Identity\",\"C、Microsoft.AspNetCore.Identity.EntityFrameworkCore\",\"D、Microsoft.EntityFrameworkCore.Design\"],\"id\":\"2c93869d790dcfce017a66589ba40f6e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的动手实践\",\"questionContent\":\"<pre>下列选项中，（）包中存在IdentityDbContext类。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）包中存在IdentityDbContext类。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"Microsoft.EntityFrameworkCore\",\"Microsoft.AspNetCore.Identity\",\"Microsoft.AspNetCore.Identity.EntityFrameworkCore\",\"Microsoft.EntityFrameworkCore.Design\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>在StartUp.cs文件中找到Configure()方法，在该方法中的静态服务托管中间件后添加身份验证的中间件。</pre>\",\"options\":\"[\\\"Configure()\\\", \\\"ConfigureServices()\\\", \\\"Configures()\\\", \\\"ConfigureService()\\\"]\",\"optionTransferList\":[\"A、Configure()\",\"B、ConfigureServices()\",\"C、Configures()\",\"D、ConfigureService()\"],\"id\":\"2c93869d790dcfce017a66589ba90f6f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的动手实践\",\"questionContent\":\"<pre>下列选项中，（）方法中可以添加身份验证的中间件。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法中可以添加身份验证的中间件。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"Configure()\",\"ConfigureServices()\",\"Configures()\",\"ConfigureService()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在程序包管理器控制台中输入命令&ldquo;update-database&rdquo;可以更新数据库。</pre>\",\"options\":\"[\\\"databases\\\", \\\"update-database\\\", \\\"update-databases\\\", \\\"database\\\"]\",\"optionTransferList\":[\"A、databases\",\"B、update-database\",\"C、update-databases\",\"D、database\"],\"id\":\"2c93869d790dcfce017a66589bad0f70\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的动手实践\",\"questionContent\":\"<pre>下列选项中，可以更新数据库的命令是（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，可以更新数据库的命令是（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"databases\",\"update-database\",\"update-databases\",\"database\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>当在程序包管理器控制台中输出&ldquo; Build succeeded&rdquo;时，说明数据库已经更新完成。</pre>\",\"options\":\"[\\\"databases succeeded\\\", \\\"succeeded\\\", \\\"Build succeeded\\\", \\\"succeededs\\\"]\",\"optionTransferList\":[\"A、databases succeeded\",\"B、succeeded\",\"C、Build succeeded\",\"D、succeededs\"],\"id\":\"2c93869d790dcfce017a66589bb10f71\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的动手实践\",\"questionContent\":\"<pre>当在程序包管理器控制台中输出下列选项中的（），说明数据库已经更新完成。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当在程序包管理器控制台中输出下列选项中的（），说明数据库已经更新完成。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"databases succeeded\",\"succeeded\",\"Build succeeded\",\"succeededs\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在序包管理器控制台中输入 &ldquo;add-migration IdentityInit&rdquo;命令可以迁移数据。</pre>\",\"options\":\"[\\\" IdentityInit\\\", \\\" add-migration IdentityInit\\\", \\\" add-migration \\\", \\\"add-migrations\\\"]\",\"optionTransferList\":[\"A、 IdentityInit\",\"B、 add-migration IdentityInit\",\"C、 add-migration \",\"D、add-migrations\"],\"id\":\"2c93869d790dcfce017a66589bb50f72\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的动手实践\",\"questionContent\":\"<pre>在程序包管理器控制台中输入下列选项中的（）命令可以迁移数据。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序包管理器控制台中输入下列选项中的（）命令可以迁移数据。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\" IdentityInit\",\" add-migration IdentityInit\",\" add-migration \",\"add-migrations\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bb90f73\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的动手实践\",\"questionContent\":\"<pre>当迁移数据时，程序包管理器控制台中输出&ldquo; Build succeeded&rdquo;时，说明数据迁移成功。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当迁移数据时，程序包管理器控制台中输出“ Build succeeded”时，说明数据迁移成功。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>打开程序包管理器控制台，然后在命令行中输入&ldquo;add-migration IdentityInit&rdquo;命令可以迁移数据。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bbd0f74\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加ASP.Net Core Identity框架的动手实践\",\"questionContent\":\"<pre>打开程序包管理器控制台，然后在命令行中输入【】命令可以迁移数据。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"打开程序包管理器控制台，然后在命令行中输入【】命令可以迁移数据。\",\"difficulty\":\"B\",\"answer\":\"[\\\" add-migration IdentityInit\\\"]\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bc10f75\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"身份验证的知识讲解\",\"questionContent\":\"<pre>身份验证的过程是由用户提供需要对比的数据，接着将其与存储在操作系统、数据库、应用或资源中的数据进行比较。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"身份验证的过程是由用户提供需要对比的数据，接着将其与存储在操作系统、数据库、应用或资源中的数据进行比较。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在Startup.cs文件中的Configure()方法中启用中间件&ldquo;app.UseStaticFiles()&rdquo;来支持静态文件的托管。</pre>\",\"options\":\"[\\\"app.UseAuthentication();\\\", \\\"app.UseStaticFiles();\\\", \\\"app.UseRouting();\\\", \\\"app.UseHttpsRedirection();\\\"]\",\"optionTransferList\":[\"A、app.UseAuthentication();\",\"B、app.UseStaticFiles();\",\"C、app.UseRouting();\",\"D、app.UseHttpsRedirection();\"],\"id\":\"2c93869d790dcfce017a66589bc50f76\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"身份验证的动手实践\",\"questionContent\":\"<pre>下列选项中，（）可以启用静态服务托管中间件。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）可以启用静态服务托管中间件。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"app.UseAuthentication();\",\"app.UseStaticFiles();\",\"app.UseRouting();\",\"app.UseHttpsRedirection();\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>启用身份验证中间件和配置授权中间件可以完成身份验证请求。</pre>\",\"options\":\"[\\\"静态服务托管中间件\\\", \\\"身份验证中间件\\\", \\\"路由中间件\\\", \\\"配置授权中间件\\\"]\",\"optionTransferList\":[\"A、静态服务托管中间件\",\"B、身份验证中间件\",\"C、路由中间件\",\"D、配置授权中间件\"],\"id\":\"2c93869d790dcfce017a66589bc90f77\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"身份验证的动手实践\",\"questionContent\":\"<pre>下列选项中，启用（）中间件可以完成身份验证请求。</pre>\",\"answerTransferList\":[\"B\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，启用（）中间件可以完成身份验证请求。\",\"difficulty\":\"A\",\"answer\":\"[\\\"1\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"静态服务托管中间件\",\"身份验证中间件\",\"路由中间件\",\"配置授权中间件\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>app.UseAuthentication();用于启用身份验证中间件。</pre>\",\"options\":\"[\\\"app.UseAuthentication();\\\", \\\"app.UseStaticFiles();\\\", \\\"app.UseRouting();\\\", \\\"app.UseHttpsRedirection();\\\"]\",\"optionTransferList\":[\"A、app.UseAuthentication();\",\"B、app.UseStaticFiles();\",\"C、app.UseRouting();\",\"D、app.UseHttpsRedirection();\"],\"id\":\"2c93869d790dcfce017a66589bcd0f78\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"身份验证的动手实践\",\"questionContent\":\"<pre>下列选项中，（）方法可以启用身份验证中间件。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法可以启用身份验证中间件。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"app.UseAuthentication();\",\"app.UseStaticFiles();\",\"app.UseRouting();\",\"app.UseHttpsRedirection();\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bd10f79\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"身份验证的动手实践\",\"questionContent\":\"<pre>同时启用中间件&ldquo;app.UseAuthentication()&rdquo;与&ldquo;app.UseAuthorization()&rdquo;才可以完成身份验证请求。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"同时启用中间件“app.UseAuthentication()”与“app.UseAuthorization()”才可以完成身份验证请求。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>授权是指确认用户拥有足够的权限来访问请求的资源。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bd50f7a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"用户授权的知识讲解\",\"questionContent\":\"<pre>【】是指确认用户拥有足够的权限来访问请求的资源。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是指确认用户拥有足够的权限来访问请求的资源。\",\"difficulty\":\"B\",\"answer\":\"[\\\"授权\\\"]\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在授权过程中，如果用户提供的数据与存储的数据匹配，则用户身份验证成功。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bda0f7b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"用户授权的知识讲解\",\"questionContent\":\"<pre>在【】过程中，如果用户提供的数据与存储的数据匹配，则用户身份验证成功。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在【】过程中，如果用户提供的数据与存储的数据匹配，则用户身份验证成功。\",\"difficulty\":\"B\",\"answer\":\"[\\\"授权\\\"]\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bde0f7c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"用户授权的知识讲解\",\"questionContent\":\"<pre>请简述授权的概念。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述授权的概念。\",\"difficulty\":\"D\",\"answer\":\"<pre>授权是指确认用户拥有足够的权限来访问请求的资源，例如，允许用户创建文档库、添加文档、编辑文档和删除文档。在授权过程中，如果用户提供的数据与存储的数据匹配，则用户身份验证成功，可以执行已向其授权的操作。授权也可以看作是用户对该空间内的对象执行的操作。</pre>\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>在该控制器上方添加[Authorize]特性可以对指定的控制器进行授权。</pre>\",\"options\":\"[\\\"[Authorizes]\\\", \\\"[Auth]\\\", \\\"[Authorize]\\\", \\\"[Auths]\\\"]\",\"optionTransferList\":[\"A、[Authorizes]\",\"B、[Auth]\",\"C、[Authorize]\",\"D、[Auths]\"],\"id\":\"2c93869d790dcfce017a66589be20f7d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"用户授权的动手实践\",\"questionContent\":\"<pre>下列选项中，（）特性可以对控制器进行授权。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）特性可以对控制器进行授权。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"[Authorizes]\",\"[Auth]\",\"[Authorize]\",\"[Auths]\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>如果想要在程序中使用[Authorize]，则必须在程序中引入Microsoft.AspNetCore.Authorization。</pre>\",\"options\":\"[\\\"Microsoft.AspNetCore.Authorization\\\", \\\"Microsoft.AspNetCore.Authorizations\\\", \\\"Microsoft.AspNetCore.Auth\\\", \\\"Microsoft.Authorization\\\"]\",\"optionTransferList\":[\"A、Microsoft.AspNetCore.Authorization\",\"B、Microsoft.AspNetCore.Authorizations\",\"C、Microsoft.AspNetCore.Auth\",\"D、Microsoft.Authorization\"],\"id\":\"2c93869d790dcfce017a66589be60f7e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"用户授权的动手实践\",\"questionContent\":\"<pre>如果想要在程序中使用[Authorize]，则必须在程序中引入下列选项中的（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"如果想要在程序中使用[Authorize]，则必须在程序中引入下列选项中的（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":[\"Microsoft.AspNetCore.Authorization\",\"Microsoft.AspNetCore.Authorizations\",\"Microsoft.AspNetCore.Auth\",\"Microsoft.Authorization\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在程序中引入Authorzation框架，才可以使用[Authorize]对指定的对象进行授权。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bea0f7f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"用户授权的动手实践\",\"questionContent\":\"<pre>在程序中引入【】框架，才可以使用[Authorize]对指定的对象进行授权。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中引入【】框架，才可以使用[Authorize]对指定的对象进行授权。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Authorzation\\\"]\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在程序中使用[Authorize]可以对指定的对象进行授权。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bef0f80\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"用户授权的动手实践\",\"questionContent\":\"<pre>在程序中使用【】可以对指定的对象进行授权。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中使用【】可以对指定的对象进行授权。\",\"difficulty\":\"B\",\"answer\":\"[\\\"[Authorize]\\\"]\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66589bf30f81\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"用户授权的动手实践\",\"questionContent\":\"<pre>请简述如何对教材中的菜品详情页面的控制器进行授权。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述如何对教材中的菜品详情页面的控制器进行授权。\",\"difficulty\":\"D\",\"answer\":\"<pre>如果只能登录成功的用户才能访问菜品详情页面，则我们需要在菜品详情页面对应的控制器中进行用户授权。首先在菜品详情页面控制器FoodDetailController中引入Authorzation框架，然后在该控制器上方添加[Authorize]来进行授权，具体示例代码如下：\\n  ......\\n  using Microsoft.AspNetCore.Authorization;//引入Authorization框架\\n  namespace Order.Controllers\\n  {\\n      [Authorize]\\n      public class FoodDetailController : Controller\\n      {\\n          ......\\n      }\\n  }</pre>\",\"createTime\":\"2021-07-02 16:31:55\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>ASP.NET Core MVC中的视图默认是以.cshtml文件保存在应用程序的Views文件夹中。</pre>\",\"options\":\"[\\\".java\\\", \\\".cshtml\\\", \\\".html\\\", \\\".cs\\\"]\",\"optionTransferList\":[\"A、.java\",\"B、.cshtml\",\"C、.html\",\"D、.cs\"],\"id\":\"2c93869d790dcfce017a6657cba30f1c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是ASP.NET Core MVC中的视图文件的后缀名。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是ASP.NET Core MVC中的视图文件的后缀名。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\".java\",\".cshtml\",\".html\",\".cs\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>视图是用户与Web应用程序的接口。</pre>\",\"options\":\"[\\\"程序\\\", \\\"用户\\\", \\\"窗口\\\", \\\"视图\\\"]\",\"optionTransferList\":[\"A、程序\",\"B、用户\",\"C、窗口\",\"D、视图\"],\"id\":\"2c93869d790dcfce017a6657cba70f1d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是用户与Web应用程序的接口。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是用户与Web应用程序的接口。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"程序\",\"用户\",\"窗口\",\"视图\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>ASP.NET Core MVC中的视图默认是以.cshtml文件保存在应用程序的Views文件夹中。</pre>\",\"options\":\"[\\\"Views\\\", \\\"Models\\\", \\\"View\\\", \\\"Model\\\"]\",\"optionTransferList\":[\"A、Views\",\"B、Models\",\"C、View\",\"D、Model\"],\"id\":\"2c93869d790dcfce017a6657cbab0f1e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）文件夹用于存放ASP.NET Core MVC中的视图文件。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）文件夹用于存放ASP.NET Core MVC中的视图文件。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"Views\",\"Models\",\"View\",\"Model\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>Home文件夹：用于存放网站首页信息，程序默认在Home文件夹中创建了两个文件，分别是Index.cshtml文件与Privacy.cshtml文件，这2个文件分别用于显示网站首页视图与网站隐私信息视图。</pre>\",\"options\":\"[\\\"用于存放模板文件\\\", \\\"Home文件夹中包含3个文件\\\", \\\"Home文件夹中包含_ViewStart.cshtml文件与_ViewImports.cshtml文件\\\", \\\"用于存放网站首页信息\\\"]\",\"optionTransferList\":[\"A、用于存放模板文件\",\"B、Home文件夹中包含3个文件\",\"C、Home文件夹中包含_ViewStart.cshtml文件与_ViewImports.cshtml文件\",\"D、用于存放网站首页信息\"],\"id\":\"2c93869d790dcfce017a6657cbb00f1f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>下列关于Home文件夹的描述正确的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于Home文件夹的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"用于存放模板文件\",\"Home文件夹中包含3个文件\",\"Home文件夹中包含_ViewStart.cshtml文件与_ViewImports.cshtml文件\",\"用于存放网站首页信息\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>Shared文件夹用于存放模板文件，如页面布局、模板页等。</pre>\",\"options\":\"[\\\"Home\\\", \\\"Shared\\\", \\\"Models\\\", \\\"Views\\\"]\",\"optionTransferList\":[\"A、Home\",\"B、Shared\",\"C、Models\",\"D、Views\"],\"id\":\"2c93869d790dcfce017a6657cbb40f20\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）文件夹用于存放模板文件。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）文件夹用于存放模板文件。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"Home\",\"Shared\",\"Models\",\"Views\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>创建ASP.NET Core MVC程序时，程序默认会在Home文件夹中创建了两个文件，分别是Index.cshtml文件与Privacy.cshtml文件。</pre>\",\"options\":\"[\\\"Home\\\", \\\"Shared\\\", \\\"Models\\\", \\\"Views\\\"]\",\"optionTransferList\":[\"A、Home\",\"B、Shared\",\"C、Models\",\"D、Views\"],\"id\":\"2c93869d790dcfce017a6657cbb80f21\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）文件夹中包含Index.cshtml文件与Privacy.cshtml文件。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）文件夹中包含Index.cshtml文件与Privacy.cshtml文件。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"Home\",\"Shared\",\"Models\",\"Views\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\"],\"answerTransfer\":null,\"solution\":\"<pre>Shared文件夹：用于存放模板文件，如页面布局、模板页等，该文件夹中包含3个文件，分别是_Layout.cshtml文件、_ValidationScriptsPartial.cshtml文件、Error.cshtml文件，这3个文件分别用于显示视图的布局、提供对jQuery验证脚本的引用、显示错误信息视图的布局。</pre>\",\"options\":\"[\\\"用于存放模板文件\\\", \\\"Shared文件夹中的_Layout.cshtml文件用于显示视图的布局\\\", \\\"Shared文件夹中的Error.cshtml文件用于显示错误信息视图的布局\\\", \\\"用于存放网站首页信息\\\"]\",\"optionTransferList\":[\"A、用于存放模板文件\",\"B、Shared文件夹中的_Layout.cshtml文件用于显示视图的布局\",\"C、Shared文件夹中的Error.cshtml文件用于显示错误信息视图的布局\",\"D、用于存放网站首页信息\"],\"id\":\"2c93869d790dcfce017a6657cbbc0f22\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>下列关于Shared文件夹的描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于Shared文件夹的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"用于存放模板文件\",\"Shared文件夹中的_Layout.cshtml文件用于显示视图的布局\",\"Shared文件夹中的Error.cshtml文件用于显示错误信息视图的布局\",\"用于存放网站首页信息\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>Views文件夹中的_ViewStart.cshtml文件是网站的起始视图，也是整个网站的入口。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cbc00f23\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>Views文件夹中的【】文件是网站的起始视图，也是整个网站的入口。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Views文件夹中的【】文件是网站的起始视图，也是整个网站的入口。\",\"difficulty\":\"B\",\"answer\":\"[\\\"_ViewStart.cshtml\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>Views文件夹中的_ViewImports.cshtml文件包含导入到每个Razor页面的Razor指令。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cbc40f24\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>Views文件夹中的【】文件包含导入到每个Razor页面的Razor指令。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Views文件夹中的【】文件包含导入到每个Razor页面的Razor指令。\",\"difficulty\":\"B\",\"answer\":\"[\\\"_ViewImports.cshtml\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>ASP.NET Core MVC程序默认在Home文件夹中创建了两个文件，分别是Index.cshtml文件与Privacy.cshtml文件。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cbc80f25\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>ASP.NET Core MVC程序默认在Home文件夹中创建了两个文件，分别是Index.cshtml文件与【】文件。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ASP.NET Core MVC程序默认在Home文件夹中创建了两个文件，分别是Index.cshtml文件与【】文件。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Privacy.cshtml\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cbcc0f26\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>ASP.NET Core MVC中的视图默认是以.cshtml文件保存在应用程序的Views文件夹中。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ASP.NET Core MVC中的视图默认是以.cshtml文件保存在应用程序的Views文件夹中。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>Home文件夹用于存放网站首页信息。ASP.NET Core MVC程序中的Shared文件夹用于存放模板文件。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cbd00f27\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>ASP.NET Core MVC程序中的Home文件夹用于存放模板文件。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ASP.NET Core MVC程序中的Home文件夹用于存放模板文件。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cbd50f28\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的知识讲解\",\"questionContent\":\"<pre>请简述什么是视图。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述什么是视图。\",\"difficulty\":\"D\",\"answer\":\"<pre>视图是用户与Web应用程序的接口，用户通常会看到视图，然后在视图上进行交互，Web应用程序的视图通常是HTML格式。ASP.NET Core MVC中的视图默认是以.cshtml文件保存在应用程序的Views文件夹中。程序在创建视图时会默认在Views文件夹中创建控制器对应的文件夹（如，HomeController对应的文件夹为Views/Home），并将创建好的视图存放在控制器对应的文件夹中。</pre>\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cbd90f29\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识视图的拓展学习\",\"questionContent\":\"<pre>为了实现程序中的逻辑与界面分离，程序中的大段逻辑应该被放置在控制器或模型中，而不是视图中。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"为了实现程序中的逻辑与界面分离，程序中的大段逻辑应该被放置在控制器或模型中，而不是视图中。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>视图使用 Razor 语法，该语法允许以最少的代码或最低的复杂度与HTML进行交互。</pre>\",\"options\":\"[\\\" Razor \\\", \\\"Shared\\\", \\\"Models\\\", \\\"Views\\\"]\",\"optionTransferList\":[\"A、 Razor \",\"B、Shared\",\"C、Models\",\"D、Views\"],\"id\":\"2c93869d790dcfce017a6657cbdd0f2a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）语法可以允许视图以最少的代码或最低的复杂度与HTML进行交互。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）语法可以允许视图以最少的代码或最低的复杂度与HTML进行交互。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\" Razor \",\"Shared\",\"Models\",\"Views\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>Razor视图引擎是一个轻量级的、简单的视图引擎，最大限度地减少了语法和额外的字符。</pre>\",\"options\":\"[\\\"视图引擎  \\\", \\\"Razor\\\", \\\"Razor视图引擎\\\", \\\"Razors\\\"]\",\"optionTransferList\":[\"A、视图引擎  \",\"B、Razor\",\"C、Razor视图引擎\",\"D、Razors\"],\"id\":\"2c93869d790dcfce017a6657cbe10f2b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是一个轻量级的、简单的视图引擎，最大限度地减少了语法和额外的字符。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是一个轻量级的、简单的视图引擎，最大限度地减少了语法和额外的字符。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"视图引擎  \",\"Razor\",\"Razor视图引擎\",\"Razors\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>在页面中输出单一变量的值时使用&ldquo;@&rdquo;符号。</pre>\",\"options\":\"[\\\"@()  \\\", \\\"@{}\\\", \\\"@[]\\\", \\\"@\\\"]\",\"optionTransferList\":[\"A、@()  \",\"B、@{}\",\"C、@[]\",\"D、@\"],\"id\":\"2c93869d790dcfce017a6657cbe50f2c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）符号可以在页面中输出单一变量的值。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）符号可以在页面中输出单一变量的值。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"@()  \",\"@{}\",\"@[]\",\"@\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>在页面中输出一个表达式的值是需要使用&ldquo;@()&rdquo;格式。</pre>\",\"options\":\"[\\\"@()  \\\", \\\"@{}\\\", \\\"@[]\\\", \\\"@\\\"]\",\"optionTransferList\":[\"A、@()  \",\"B、@{}\",\"C、@[]\",\"D、@\"],\"id\":\"2c93869d790dcfce017a6657cbe90f2d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）格式可以在页面中输出一个表达式的值。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）格式可以在页面中输出一个表达式的值。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"@()  \",\"@{}\",\"@[]\",\"@\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在页面中执行多行C#代码时，需要使用&ldquo;@{}&rdquo;格式</pre>\",\"options\":\"[\\\"@()  \\\", \\\"@{}\\\", \\\"@[]\\\", \\\"@\\\"]\",\"optionTransferList\":[\"A、@()  \",\"B、@{}\",\"C、@[]\",\"D、@\"],\"id\":\"2c93869d790dcfce017a6657cbed0f2e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）格式可以在页面中执行多行C#代码。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）格式可以在页面中执行多行C#代码。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"@()  \",\"@{}\",\"@[]\",\"@\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>页面布局文件_Layout.cshtml是程序中所有页面的模板。</pre>\",\"options\":\"[\\\"_Lay.cshtml \\\", \\\"Layout.cshtml\\\", \\\"_Layout.cshtml\\\", \\\"_Layouts.cshtml\\\"]\",\"optionTransferList\":[\"A、_Lay.cshtml \",\"B、Layout.cshtml\",\"C、_Layout.cshtml\",\"D、_Layouts.cshtml\"],\"id\":\"2c93869d790dcfce017a6657cbf10f2f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>下列选项中，页面布局文件（）是程序中所有页面的模板。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，页面布局文件（）是程序中所有页面的模板。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"_Lay.cshtml \",\"Layout.cshtml\",\"_Layout.cshtml\",\"_Layouts.cshtml\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>引用_Layout.cshtml文件的页面被称为内容页面，内容页面不是完整的网页，它只包含页面主要的内容。</pre>\",\"options\":\"[\\\"_Lay.cshtml \\\", \\\"Layout.cshtml\\\", \\\"_out.cshtml\\\", \\\"_Layout.cshtml\\\"]\",\"optionTransferList\":[\"A、_Lay.cshtml \",\"B、Layout.cshtml\",\"C、_out.cshtml\",\"D、_Layout.cshtml\"],\"id\":\"2c93869d790dcfce017a6657cbf50f30\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>下列选项中，引用（）文件的页面被称为内容页面。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，引用（）文件的页面被称为内容页面。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"_Lay.cshtml \",\"Layout.cshtml\",\"_out.cshtml\",\"_Layout.cshtml\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>起始视图文件_ViewStart.cshtml非常简单，只有一行有效代码，这个文件是基于Razor语法格式书写的。</pre>\",\"options\":\"[\\\"_ViewStart.cshtml\\\", \\\"Layout.cshtml\\\", \\\"_Start.cshtml\\\", \\\"_Layout.cshtml\\\"]\",\"optionTransferList\":[\"A、_ViewStart.cshtml\",\"B、Layout.cshtml\",\"C、_Start.cshtml\",\"D、_Layout.cshtml\"],\"id\":\"2c93869d790dcfce017a6657cbf90f31\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）文件中只有一行有效代码，这个文件是基于Razor语法格式书写的。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）文件中只有一行有效代码，这个文件是基于Razor语法格式书写的。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"_ViewStart.cshtml\",\"Layout.cshtml\",\"_Start.cshtml\",\"_Layout.cshtml\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在页面中输出单一变量的值时使用&ldquo;@&rdquo;符号。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cbfd0f32\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>在视图页面中输出单一变量的值时使用【】符号。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在视图页面中输出单一变量的值时使用【】符号。\",\"difficulty\":\"B\",\"answer\":\"[\\\"&ldquo;@&rdquo;\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>页面中的代码@RenderBody()用于呈现子页的主体内容，表示以占位符的形式渲染当前页面。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc010f33\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>页面中的代码【】用于呈现子页的主体内容，表示以占位符的形式渲染当前页面。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"页面中的代码【】用于呈现子页的主体内容，表示以占位符的形式渲染当前页面。\",\"difficulty\":\"B\",\"answer\":\"[\\\"@RenderBody()\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>页面中的代码@RenderSection()用于呈现页面中特别的节点部分，表示将会渲染部分的视图和节点。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc050f34\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>页面中的代码【】用于呈现页面中特别的节点部分，表示将会渲染部分的视图和节点。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"页面中的代码【】用于呈现页面中特别的节点部分，表示将会渲染部分的视图和节点。\",\"difficulty\":\"B\",\"answer\":\"[\\\"@RenderSection()\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>页面中的代码@RenderBody()用于呈现子页的主体内容，表示以占位符的形式渲染当前页面。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc0a0f35\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>页面中的代码@RenderSection()用于呈现子页的主体内容，表示以占位符的形式渲染当前页面。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"页面中的代码@RenderSection()用于呈现子页的主体内容，表示以占位符的形式渲染当前页面。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>页面中的代码@RenderSection()用于呈现页面中特别的节点部分，表示将会渲染部分的视图和节点。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc0e0f36\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>页面中的代码@RenderSection()用于呈现页面中特别的节点部分，表示将会渲染部分的视图和节点。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"页面中的代码@RenderSection()用于呈现页面中特别的节点部分，表示将会渲染部分的视图和节点。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc120f37\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>请简述视图页面中的&ldquo;@&rdquo;符号作用及使用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述视图页面中的“@”符号作用及使用。\",\"difficulty\":\"D\",\"answer\":\"<pre>在页面中输出单一变量的值时使用&ldquo;@&rdquo;符号，具体示例如下所示：\\n&lt;span&gt;北京时间：@DateTime.Now&lt;/span&gt;\\n在上述代码中，&ldquo;@&rdquo;表示直接输出值，虽然&ldquo;@&rdquo;后为C#代码，但是当直接输出一个变量的值时，结尾处不需要使用&ldquo;;&rdquo;。</pre>\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc160f38\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的知识讲解\",\"questionContent\":\"<pre>请简述视图页面中&ldquo;@()&rdquo;格式的使用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述视图页面中“@()”格式的使用。\",\"difficulty\":\"D\",\"answer\":\"<pre>在页面中输出一个表达式的值是需要使用&ldquo;@()&rdquo;格式，具体示例代码如下所示：\\n&lt;span&gt;欢迎你\\n@(Session[&quot;user&quot;] == null ? &quot;&quot; : Session[&quot;user&quot;].ToString()) \\n&lt;/span&gt;\\n上述代码中，&ldquo;@()&rdquo;表示输出表达式的值，其中&ldquo;()&rdquo;括号中为C#代码。</pre>\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>项目中的Views/Shared文件夹中可以找到模板视图文件_Layout.cshtml。</pre>\",\"options\":\"[\\\"Models  \\\", \\\"Views/Shared\\\", \\\"Models/Shared\\\", \\\"Views\\\"]\",\"optionTransferList\":[\"A、Models  \",\"B、Views/Shared\",\"C、Models/Shared\",\"D、Views\"],\"id\":\"2c93869d790dcfce017a6657cc1a0f39\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的动手实践\",\"questionContent\":\"<pre>下列选项中，（）文件夹中存放模板视图文件_Layout.cshtml。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）文件夹中存放模板视图文件_Layout.cshtml。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"Models  \",\"Views/Shared\",\"Models/Shared\",\"Views\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>在程序的起始视图文件_ViewStart.cshtml中，可以通过&ldquo;Layout = &quot;_Layout&quot;;&rdquo;语句引用模板视图文件_Layout.cshtml。</pre>\",\"options\":\"[\\\"&ldquo;Lay = &quot;_Lay&quot;;&rdquo;  \\\", \\\"&ldquo;out = &quot;_out&quot;;&rdquo;\\\", \\\"&ldquo;Layout = &quot;_Layout&quot;;&rdquo;\\\", \\\"&ldquo;Layouts = &quot;_Layouts&quot;;&rdquo;\\\"]\",\"optionTransferList\":[\"A、&ldquo;Lay = &quot;_Lay&quot;;&rdquo;  \",\"B、&ldquo;out = &quot;_out&quot;;&rdquo;\",\"C、&ldquo;Layout = &quot;_Layout&quot;;&rdquo;\",\"D、&ldquo;Layouts = &quot;_Layouts&quot;;&rdquo;\"],\"id\":\"2c93869d790dcfce017a6657cc1e0f3a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的动手实践\",\"questionContent\":\"<pre>在起始视图文件_ViewStart.cshtml中，可以通过以下（）语句引用模板视图文件_Layout.cshtml。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在起始视图文件_ViewStart.cshtml中，可以通过以下（）语句引用模板视图文件_Layout.cshtml。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"&ldquo;Lay = &quot;_Lay&quot;;&rdquo;  \",\"&ldquo;out = &quot;_out&quot;;&rdquo;\",\"&ldquo;Layout = &quot;_Layout&quot;;&rdquo;\",\"&ldquo;Layouts = &quot;_Layouts&quot;;&rdquo;\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在程序的起始视图文件_ViewStart.cshtml中，可以通过&ldquo;Layout = &quot;_Layout&quot;;&rdquo;语句引用模板视图文件_Layout.cshtml。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc220f3b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的动手实践\",\"questionContent\":\"<pre>在起始视图文件_ViewStart.cshtml中，可以通过&ldquo;Layout = &quot;_Layout&quot;;&rdquo;语句引用模板视图文件【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在起始视图文件_ViewStart.cshtml中，可以通过“Layout = \\\"_Layout\\\";”语句引用模板视图文件【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"_Layout.cshtml\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在项目中的Views/Shared文件夹中，可以找到_Layout.cshtml文件。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc270f3c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的动手实践\",\"questionContent\":\"<pre>在项目中的【】文件夹中，可以找到_Layout.cshtml文件。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在项目中的【】文件夹中，可以找到_Layout.cshtml文件。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Views/Shared\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc2b0f3d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的动手实践\",\"questionContent\":\"<pre>在程序的起始视图文件_ViewStart.cshtml中，可以通过&ldquo;Layout = &quot;_Layout&quot;;&rdquo;语句引用模板视图_Layout.cshtml。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序的起始视图文件_ViewStart.cshtml中，可以通过“Layout = \\\"_Layout\\\";”语句引用模板视图_Layout.cshtml。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>可以在_Layout.cshtml文件中的&lt;title&gt;&lt;/title&gt;标签中添加&ldquo;使用模板&rdquo;的文字信息，来验证其他页面是否成功地调用模板页面。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc2f0f3e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的动手实践\",\"questionContent\":\"<pre>可以在_Layout.cshtml文件中的&lt;title&gt;&lt;/title&gt;标签中添加&ldquo;使用模板&rdquo;的文字信息，来验证其他页面是否成功地调用模板页面。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"可以在_Layout.cshtml文件中的标签中添加“使用模板”的文字信息，来验证其他页面是否成功地调用模板页面。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在Razor页面中引用命名空间使用@using。</pre>\",\"options\":\"[\\\"using  \\\", \\\"@using\\\", \\\"@model\\\", \\\"model\\\"]\",\"optionTransferList\":[\"A、using  \",\"B、@using\",\"C、@model\",\"D、model\"],\"id\":\"2c93869d790dcfce017a6657cc330f3f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）可以在Razor页面中引用命名空间。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）可以在Razor页面中引用命名空间。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"using  \",\"@using\",\"@model\",\"model\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>Razor模板引擎页面文件的后缀名为.cshtml。</pre>\",\"options\":\"[\\\".cshtml  \\\", \\\".cs\\\", \\\".html\\\", \\\".java\\\"]\",\"optionTransferList\":[\"A、.cshtml  \",\"B、.cs\",\"C、.html\",\"D、.java\"],\"id\":\"2c93869d790dcfce017a6657cc370f40\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）是Razor模板引擎页面文件的后缀名。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是Razor模板引擎页面文件的后缀名。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\".cshtml  \",\".cs\",\".html\",\".java\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在Razor页面的最上方通过@model语法可以设定一组View页面的强类型数据模型。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc3b0f41\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的拓展学习\",\"questionContent\":\"<pre>在Razor页面的最上方通过【】语法可以设定一组View页面的强类型数据模型。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在Razor页面的最上方通过【】语法可以设定一组View页面的强类型数据模型。\",\"difficulty\":\"B\",\"answer\":\"[\\\"@model\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在Razor页面中引用命名空间使用@using。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc3f0f42\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的拓展学习\",\"questionContent\":\"<pre>在Razor页面中可以使用【】引用命名空间。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在Razor页面中可以使用【】引用命名空间。\",\"difficulty\":\"B\",\"answer\":\"[\\\"@using\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc430f43\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的拓展学习\",\"questionContent\":\"<pre>除了在Views文件夹中存在_ViewStart.cshtml文件外，在Views/Home文件夹中也存在一个_ViewStart.cshtml文件。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"除了在Views文件夹中存在_ViewStart.cshtml文件外，在Views/Home文件夹中也存在一个_ViewStart.cshtml文件。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc480f44\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"Razor视图引擎的拓展学习\",\"questionContent\":\"<pre>如果控制器中的Action方法以PowerView()方法来返回视图时，则程序不会执行_ViewStart.cshtml文件中的视图内容。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"如果控制器中的Action方法以PowerView()方法来返回视图时，则程序不会执行_ViewStart.cshtml文件中的视图内容。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>模板视图文件存放在项目中的Views/Shared文件夹中。</pre>\",\"options\":\"[\\\"Views  \\\", \\\"Views/Shared\\\", \\\"Models/Shared\\\", \\\"View/Shared\\\"]\",\"optionTransferList\":[\"A、Views  \",\"B、Views/Shared\",\"C、Models/Shared\",\"D、View/Shared\"],\"id\":\"2c93869d790dcfce017a6657cc4c0f45\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建视图的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）文件夹中存放模板视图文件。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）文件夹中存放模板视图文件。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"Views  \",\"Views/Shared\",\"Models/Shared\",\"View/Shared\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>视图的名称与控制器中对应的Action方法的名称一致。</pre>\",\"options\":\"[\\\"控制器中对应的Action方法 \\\", \\\"控制器\\\", \\\"模型\\\", \\\"方法\\\"]\",\"optionTransferList\":[\"A、控制器中对应的Action方法 \",\"B、控制器\",\"C、模型\",\"D、方法\"],\"id\":\"2c93869d790dcfce017a6657cc4f0f46\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建视图的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）名称与视图文件的名称一致。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）名称与视图文件的名称一致。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"控制器中对应的Action方法 \",\"控制器\",\"模型\",\"方法\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>Razor视图文件中可以通过@符号直接对数据进行操作文件。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc530f47\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建视图的知识讲解\",\"questionContent\":\"<pre>Razor视图文件中可以通过【】符号直接对数据进行操作文件。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Razor视图文件中可以通过【】符号直接对数据进行操作文件。\",\"difficulty\":\"B\",\"answer\":\"[\\\"@\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc570f48\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建视图的知识讲解\",\"questionContent\":\"<pre>项目中创建的视图文件都存放在Views/[ControllerName]文件夹中。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"项目中创建的视图文件都存放在Views/[ControllerName]文件夹中。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>模板视图存放在项目中的Views/Shared文件夹中。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cc5b0f49\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建视图的知识讲解\",\"questionContent\":\"<pre>模板视图文件存放在项目中的Models/Shared文件夹中。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"模板视图文件存放在项目中的Models/Shared文件夹中。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>将光标放在Hello()方法上或选中该方法，可以创建控制器中Hello()方法对应的页面视图。</pre>\",\"options\":\"[\\\"将光标放在Hello()方法上  \\\", \\\"选中Hello()方法所在的控制器\\\", \\\"选中控制器\\\", \\\"选中Hello()方法\\\"]\",\"optionTransferList\":[\"A、将光标放在Hello()方法上  \",\"B、选中Hello()方法所在的控制器\",\"C、选中控制器\",\"D、选中Hello()方法\"],\"id\":\"2c93869d790dcfce017a6657cc5f0f4a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建视图的动手实践\",\"questionContent\":\"<pre>下列选项中，（）可以创建控制器中Hello()方法对应的页面视图。</pre>\",\"answerTransferList\":[\"A\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）可以创建控制器中Hello()方法对应的页面视图。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"将光标放在Hello()方法上  \",\"选中Hello()方法所在的控制器\",\"选中控制器\",\"选中Hello()方法\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>ASP.NET MVC中控制器向视图传递数据有四种方式，分别是ViewData方式、ViewBag方式、Model方式以及TempData方式。</pre>\",\"options\":\"[\\\"ViewData方式  \\\", \\\"ViewBag方式\\\", \\\"Model方式\\\", \\\"TempData方式\\\"]\",\"optionTransferList\":[\"A、ViewData方式  \",\"B、ViewBag方式\",\"C、Model方式\",\"D、TempData方式\"],\"id\":\"2c93869d790dcfce017a6657cc630f4b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）属于ASP.NET MVC中控制器向视图传递数据的方式。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）属于ASP.NET MVC中控制器向视图传递数据的方式。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"ViewData方式  \",\"ViewBag方式\",\"Model方式\",\"TempData方式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>在控制器中，用ViewData类以键值对的形式存储控制器向视图传递数据的实例化对象。</pre>\",\"options\":\"[\\\"ViewData方式  \\\", \\\"ViewBag方式\\\", \\\"Model方式\\\", \\\"TempData方式\\\"]\",\"optionTransferList\":[\"A、ViewData方式  \",\"B、ViewBag方式\",\"C、Model方式\",\"D、TempData方式\"],\"id\":\"2c93869d790dcfce017a6657cc670f4c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）方式是以键值对的形式存储控制器向视图传递数据的实例化对象。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方式是以键值对的形式存储控制器向视图传递数据的实例化对象。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"ViewData方式  \",\"ViewBag方式\",\"Model方式\",\"TempData方式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>通过ViewBag动态表达式的形式存储控制器中创建的实例化对象。</pre>\",\"options\":\"[\\\"ViewData方式  \\\", \\\"ViewBag方式\\\", \\\"Model方式\\\", \\\"TempData方式\\\"]\",\"optionTransferList\":[\"A、ViewData方式  \",\"B、ViewBag方式\",\"C、Model方式\",\"D、TempData方式\"],\"id\":\"2c93869d790dcfce017a6657cc6b0f4d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）方式是通过动态表达式的形式存储控制器中创建的实例化对象。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方式是通过动态表达式的形式存储控制器中创建的实例化对象。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"ViewData方式  \",\"ViewBag方式\",\"Model方式\",\"TempData方式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>通过TempData方式可以将控制器向视图传递的数据保存在Session中。</pre>\",\"options\":\"[\\\"ViewData方式  \\\", \\\"ViewBag方式\\\", \\\"Model方式\\\", \\\"TempData方式\\\"]\",\"optionTransferList\":[\"A、ViewData方式  \",\"B、ViewBag方式\",\"C、Model方式\",\"D、TempData方式\"],\"id\":\"2c93869d790dcfce017a6657cd100f4e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）方式可以将控制器向视图传递的数据保存在Session中。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方式可以将控制器向视图传递的数据保存在Session中。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"ViewData方式  \",\"ViewBag方式\",\"Model方式\",\"TempData方式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>TempData类中的值只能经过一次传递，之后会被系统自动清除。</pre>\",\"options\":\"[\\\"ViewData类 \\\", \\\"ViewBag类\\\", \\\"Model类\\\", \\\"TempData类\\\"]\",\"optionTransferList\":[\"A、ViewData类 \",\"B、ViewBag类\",\"C、Model类\",\"D、TempData类\"],\"id\":\"2c93869d790dcfce017a6657cd140f4f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）类中的值只能经过一次传递，之后会被系统自动清除。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）类中的值只能经过一次传递，之后会被系统自动清除。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"ViewData类 \",\"ViewBag类\",\"Model类\",\"TempData类\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>由于TempData中的值可以保存在Session中，所以该值可以通过跳转后继续使用。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd180f50\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的知识讲解\",\"questionContent\":\"<pre>由于【】类中的值可以保存在Session中，所以该值可以通过跳转后继续使用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"由于【】类中的值可以保存在Session中，所以该值可以通过跳转后继续使用。\",\"difficulty\":\"B\",\"answer\":\"[\\\"TempData\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>ASP.NET MVC中控制器向视图传递数据有四种方式，分别是ViewData方式、ViewBag方式、Model方式以及TempData方式。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd1c0f51\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的知识讲解\",\"questionContent\":\"<pre>ASP.NET MVC中控制器向视图传递数据有三种方式。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ASP.NET MVC中控制器向视图传递数据有三种方式。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd200f52\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的知识讲解\",\"questionContent\":\"<pre>在控制器中，ViewData类是以键值对的形式存储控制器中实例化的对象。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在控制器中，ViewData类是以键值对的形式存储控制器中实例化的对象。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd240f53\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的知识讲解\",\"questionContent\":\"<pre>请简述如何通过ViewBag方式向视图传递数据。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述如何通过ViewBag方式向视图传递数据。\",\"difficulty\":\"D\",\"answer\":\"<pre>通过ViewBag动态表达式的形式存储控制器中创建的实例化对象stu，具体代码如下所示。\\nViewBag._Student = stu;\\n在视图中获取ViewBag中的值，并将该值转换为对象，具体代码如下所示。\\n@{\\n    var stu = (Student)ViewBag._Student;\\n}</pre>\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>在视图文件中，可以通过通过&ldquo;@model&rdquo;引入数据模型。</pre>\",\"options\":\"[\\\"@() \\\", \\\"@{}\\\", \\\"@model\\\", \\\"@\\\"]\",\"optionTransferList\":[\"A、@() \",\"B、@{}\",\"C、@model\",\"D、@\"],\"id\":\"2c93869d790dcfce017a6657cd280f54\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的动手实践\",\"questionContent\":\"<pre>在视图文件中，可以通过下列（）代码引入数据模型。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在视图文件中，可以通过下列（）代码引入数据模型。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"@() \",\"@{}\",\"@model\",\"@\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在视图文件中，需要通过@model来引入传递的数据。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd2c0f55\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的动手实践\",\"questionContent\":\"<pre>在视图文件中，需要通过【】来引入传递的数据。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在视图文件中，需要通过【】来引入传递的数据。\",\"difficulty\":\"B\",\"answer\":\"[\\\"@model\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在视图文件中需要通过@model来引入传递的数据，集合数据的引入代码格式具体如下所示：\\n@model IEnumerable&lt;Order.Models.实体类&gt;;</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd300f56\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"向视图传递数据的拓展学习\",\"questionContent\":\"<pre>在视图文件中，集合数据的引入代码格式为&ldquo;@model IEnumerable&lt;Order.Models.实体类&gt;;&rdquo;。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在视图文件中，集合数据的引入代码格式为“@model IEnumerable;”。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>通过前端管理工具LibraryManager添加Bootstrap框架。</pre>\",\"options\":\"[\\\"Library  \\\", \\\"Manager\\\", \\\"LibraryManagers\\\", \\\"LibraryManager\\\"]\",\"optionTransferList\":[\"A、Library  \",\"B、Manager\",\"C、LibraryManagers\",\"D、LibraryManager\"],\"id\":\"2c93869d790dcfce017a6657cd340f57\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的知识讲解\",\"questionContent\":\"<pre>下列选项中，通过前端管理工具（）可以添加Bootstrap框架。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，通过前端管理工具（）可以添加Bootstrap框架。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"Library  \",\"Manager\",\"LibraryManagers\",\"LibraryManager\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>Visual Studio开发工具给我们提供了一个非常强大的前端管理工具LibraryManager，简称LibMan。</pre>\",\"options\":\"[\\\"Library  \\\", \\\"Manager\\\", \\\"LibMan\\\", \\\"LibraryManager\\\"]\",\"optionTransferList\":[\"A、Library  \",\"B、Manager\",\"C、LibMan\",\"D、LibraryManager\"],\"id\":\"2c93869d790dcfce017a6657cd390f58\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是前端管理工具LibraryManager的简称。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是前端管理工具LibraryManager的简称。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"Library  \",\"Manager\",\"LibMan\",\"LibraryManager\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>Visual Studio的版本至少在15.8以上才可以使用LibMan管理工具。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd3c0f59\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的知识讲解\",\"questionContent\":\"<pre>Visual Studio的版本至少在【】以上才可以使用LibMan管理工具。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Visual Studio的版本至少在【】以上才可以使用LibMan管理工具。\",\"difficulty\":\"B\",\"answer\":\"[\\\"15.8\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在项目中引入第三方的UI框架Bootstrap，通过该框架来美化网站中的页面。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd400f5a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的知识讲解\",\"questionContent\":\"<pre>在项目中引入第三方的UI框架Bootstrap，通过该框架可以美化网站中的页面。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在项目中引入第三方的UI框架Bootstrap，通过该框架可以美化网站中的页面。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在超链接标签&lt;a&gt;中的属性asp-controller的值表示要运行的控制器名称。</pre>\",\"options\":\"[\\\"asp \\\", \\\"asp-controller\\\", \\\"asps-controller\\\", \\\"asp-action\\\"]\",\"optionTransferList\":[\"A、asp \",\"B、asp-controller\",\"C、asps-controller\",\"D、asp-action\"],\"id\":\"2c93869d790dcfce017a6657cd440f5b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的动手实践\",\"questionContent\":\"<pre>下列选项中，属性（）的值表示要运行的控制器名称。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，属性（）的值表示要运行的控制器名称。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"asp \",\"asp-controller\",\"asps-controller\",\"asp-action\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>在超链接标签&lt;a&gt;中的属性asp-action的值表示要运行的控制器中的方法名称。</pre>\",\"options\":\"[\\\"asp \\\", \\\"asp-controller\\\", \\\"asps-controller\\\", \\\"asp-action\\\"]\",\"optionTransferList\":[\"A、asp \",\"B、asp-controller\",\"C、asps-controller\",\"D、asp-action\"],\"id\":\"2c93869d790dcfce017a6657cd490f5c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的动手实践\",\"questionContent\":\"<pre>下列选项中，属性（）的值表示要运行的控制器中的方法名称。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，属性（）的值表示要运行的控制器中的方法名称。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"asp \",\"asp-controller\",\"asps-controller\",\"asp-action\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在视图文件的&lt;a&gt;标签中，属性asp-route-id的值表示控制器中的方法传递的参数值。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd4d0f5d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的动手实践\",\"questionContent\":\"<pre>在视图文件的&lt;a&gt;标签中，属性【】的值表示控制器中的方法传递的参数值。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在视图文件的标签中，属性【】的值表示控制器中的方法传递的参数值。\",\"difficulty\":\"B\",\"answer\":\"[\\\"asp-route-id\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在视图文件的&lt;a&gt;标签中，属性asp-action的值表示要运行的控制器中的方法名称。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd510f5e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的动手实践\",\"questionContent\":\"<pre>在视图文件的&lt;a&gt;标签中，属性asp-action的值表示要运行的控制器的名称。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在视图文件的标签中，属性asp-action的值表示要运行的控制器的名称。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>&lt;div&gt;标签是HTML标签之一，具有分割内容的作用。</pre>\",\"options\":\"[\\\"&lt;div&gt; \\\", \\\"&lt;divs&gt;\\\", \\\"&lt;p&gt;\\\", \\\"&lt;h1&gt;\\\"]\",\"optionTransferList\":[\"A、&lt;div&gt; \",\"B、&lt;divs&gt;\",\"C、&lt;p&gt;\",\"D、&lt;h1&gt;\"],\"id\":\"2c93869d790dcfce017a6657cd550f5f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）标签是HTML标签之一，具有分割内容的作用。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）标签是HTML标签之一，具有分割内容的作用。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"&lt;div&gt; \",\"&lt;divs&gt;\",\"&lt;p&gt;\",\"&lt;h1&gt;\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>&lt;h1&gt;、&lt;h2&gt;、&lt;h3&gt;、&lt;h4&gt;标签通常用于在一个网页中显示唯一标题、重要栏目、重要标题等信息。</pre>\",\"options\":\"[\\\"&lt;h1&gt; \\\", \\\"&lt;h2&gt;\\\", \\\"&lt;h3&gt;\\\", \\\"&lt;h4&gt;\\\"]\",\"optionTransferList\":[\"A、&lt;h1&gt; \",\"B、&lt;h2&gt;\",\"C、&lt;h3&gt;\",\"D、&lt;h4&gt;\"],\"id\":\"2c93869d790dcfce017a6657cd580f60\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）标签通常用于在一个网页中显示唯一标题、重要栏目、重要标题等信息。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）标签通常用于在一个网页中显示唯一标题、重要栏目、重要标题等信息。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"&lt;h1&gt; \",\"&lt;h2&gt;\",\"&lt;h3&gt;\",\"&lt;h4&gt;\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>当我们需要分段换行时，在内容前加上&lt;p&gt;标签，内容后加&lt;/p&gt;标签即可实现文章换段落。</pre>\",\"options\":\"[\\\"&lt;div&gt;&lt;/div&gt; \\\", \\\"&lt;p&gt;&lt;/p&gt;\\\", \\\"&lt;a&gt;&lt;/a&gt;\\\", \\\"&lt;h1&gt;&lt;/h1&gt;\\\"]\",\"optionTransferList\":[\"A、&lt;div&gt;&lt;/div&gt; \",\"B、&lt;p&gt;&lt;/p&gt;\",\"C、&lt;a&gt;&lt;/a&gt;\",\"D、&lt;h1&gt;&lt;/h1&gt;\"],\"id\":\"2c93869d790dcfce017a6657cd5c0f61\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）标签可实现文章换段落。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）标签可实现文章换段落。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"&lt;div&gt;&lt;/div&gt; \",\"&lt;p&gt;&lt;/p&gt;\",\"&lt;a&gt;&lt;/a&gt;\",\"&lt;h1&gt;&lt;/h1&gt;\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\"],\"answerTransfer\":null,\"solution\":\"<pre>Razor视图除了支持代码表达式以外，还可以支持代码块。</pre>\",\"options\":\"[\\\"代码表达式\\\", \\\"代码块\\\", \\\"&lt;as&gt;&lt;/as&gt;\\\", \\\"&lt;h&gt;&lt;/h&gt;\\\"]\",\"optionTransferList\":[\"A、代码表达式\",\"B、代码块\",\"C、&lt;as&gt;&lt;/as&gt;\",\"D、&lt;h&gt;&lt;/h&gt;\"],\"id\":\"2c93869d790dcfce017a6657cd600f62\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）可以在Razor视图中使用。</pre>\",\"answerTransferList\":[\"A\",\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）可以在Razor视图中使用。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":[\"代码表达式\",\"代码块\",\"&lt;as&gt;&lt;/as&gt;\",\"&lt;h&gt;&lt;/h&gt;\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>当我们需要分段换行时，在内容前加上&lt;p&gt;标签，内容后加&lt;/p&gt;标签即可实现文章换段落。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd640f63\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的拓展学习\",\"questionContent\":\"<pre>当我们需要分段换行时，在内容前加上&lt;p&gt;标签，内容后加【】标签即可实现文章换段落。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当我们需要分段换行时，在内容前加上标签，内容后加【】标签即可实现文章换段落。\",\"difficulty\":\"B\",\"answer\":\"[\\\"&lt;/p&gt;\\\"]\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd680f64\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的拓展学习\",\"questionContent\":\"<pre>通常未设置任何样式的&lt;div&gt;&lt;/div&gt;标签，在网页中显示时独占一行。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"通常未设置任何样式的标签，在网页中显示时独占一行。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd6c0f65\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的拓展学习\",\"questionContent\":\"<pre>请简述&lt;h1&gt;、&lt;h2&gt;、&lt;h3&gt;、&lt;h4&gt;标签的作用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述、、、标签的作用。\",\"difficulty\":\"D\",\"answer\":\"<pre>&lt;h1&gt;、&lt;h2&gt;、&lt;h3&gt;、&lt;h4&gt;标题标签通常用于在一个网页中显示唯一标题、重要栏目、重要标题等信息。当这4个标签没有被设置任何CSS样式时，字体从大到小依次是&lt;h1&gt;、&lt;h2&gt;、&lt;h3&gt;、&lt;h4&gt;。&lt;h1&gt;标签在网页中最好只使用一次，如一个网页中只有一个标题。&lt;h2&gt;、&lt;h3&gt;、&lt;h4&gt;标签则可以在一个网页中出现多次，但是不要在网页中随意添加或过度添加。</pre>\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6657cd700f66\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"美化网站的拓展学习\",\"questionContent\":\"<pre>请简述&lt;p&gt;标签的使用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述标签的使用。\",\"difficulty\":\"D\",\"answer\":\"<pre>通常当我们需要分段换行时，在内容前加上&lt;p&gt;标签，内容后加&lt;/p&gt;标签即可实现文章换段落。接下来我们以一个示例来演示一下，具体示例代码如下所示：\\n&lt;p&gt;我是div css!&lt;/p&gt;\\n&lt;p&gt;我是第一段落,网址www.baidu.com&lt;/p&gt;</pre>\",\"createTime\":\"2021-07-02 16:30:51\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>从成本方面分析出的模型优势：\\n良好的数据模型能够极大地减少不必要的数据冗余，也能实现计算结果复用，极大地降低大数据系统中的存储和计算成本。</pre>\",\"options\":\"[\\\"性能\\\", \\\"成本\\\", \\\"效率\\\", \\\"质量\\\"]\",\"optionTransferList\":[\"A、性能\",\"B、成本\",\"C、效率\",\"D、质量\"],\"id\":\"2c93869d790dcfce017a6654ef610edd\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的知识讲解\",\"questionContent\":\"<pre>良好的数据模型能够极大地减少不必要的数据冗余的优势是从以下（）方面来分析模型的。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"良好的数据模型能够极大地减少不必要的数据冗余的优势是从以下（）方面来分析模型的。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"性能\",\"成本\",\"效率\",\"质量\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>从性能方面分析出的模型优势：\\n良好的数据模型能帮助我们快速查询所需要的数据，减少数据I/O流的输入与输出。</pre>\",\"options\":\"[\\\"良好的数据模型能帮助我们快速查询所需要的数据。\\\", \\\"良好的数据模型能够极大地减少不必要的数据冗余。\\\", \\\"良好的数据模型能极大地改善用户使用数据的体验，提高数据使用效率。\\\", \\\"良好的数据模型能改善数据统计口径的不一致性，减少数据计算错误的可能性。\\\"]\",\"optionTransferList\":[\"A、良好的数据模型能帮助我们快速查询所需要的数据。\",\"B、良好的数据模型能够极大地减少不必要的数据冗余。\",\"C、良好的数据模型能极大地改善用户使用数据的体验，提高数据使用效率。\",\"D、良好的数据模型能改善数据统计口径的不一致性，减少数据计算错误的可能性。\"],\"id\":\"2c93869d790dcfce017a6654ef650ede\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是从性能方面分析出的模型优势。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是从性能方面分析出的模型优势。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"良好的数据模型能帮助我们快速查询所需要的数据。\",\"良好的数据模型能够极大地减少不必要的数据冗余。\",\"良好的数据模型能极大地改善用户使用数据的体验，提高数据使用效率。\",\"良好的数据模型能改善数据统计口径的不一致性，减少数据计算错误的可能性。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>从效率方面分析出的模型优势：\\n良好的数据模型能极大地改善用户使用数据的体验，提高数据使用效率。</pre>\",\"options\":\"[\\\"良好的数据模型能帮助我们快速查询所需要的数据。\\\", \\\"良好的数据模型能够极大地减少不必要的数据冗余。\\\", \\\"良好的数据模型能极大地改善用户使用数据的体验，提高数据使用效率。\\\", \\\"良好的数据模型能改善数据统计口径的不一致性，减少数据计算错误的可能性。\\\"]\",\"optionTransferList\":[\"A、良好的数据模型能帮助我们快速查询所需要的数据。\",\"B、良好的数据模型能够极大地减少不必要的数据冗余。\",\"C、良好的数据模型能极大地改善用户使用数据的体验，提高数据使用效率。\",\"D、良好的数据模型能改善数据统计口径的不一致性，减少数据计算错误的可能性。\"],\"id\":\"2c93869d790dcfce017a6654ef690edf\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是从效率方面分析出的模型优势。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是从效率方面分析出的模型优势。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"良好的数据模型能帮助我们快速查询所需要的数据。\",\"良好的数据模型能够极大地减少不必要的数据冗余。\",\"良好的数据模型能极大地改善用户使用数据的体验，提高数据使用效率。\",\"良好的数据模型能改善数据统计口径的不一致性，减少数据计算错误的可能性。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>根据模型的性能、成本、效率、质量等方面来分析模型的优势。</pre>\",\"options\":\"[\\\"性能\\\", \\\"成本\\\", \\\"效率\\\", \\\"质量\\\"]\",\"optionTransferList\":[\"A、性能\",\"B、成本\",\"C、效率\",\"D、质量\"],\"id\":\"2c93869d790dcfce017a6654ef6d0ee0\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的知识讲解\",\"questionContent\":\"<pre>从以下（）方面可以体现出模型的优势。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"从以下（）方面可以体现出模型的优势。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"性能\",\"成本\",\"效率\",\"质量\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>从用途方面来说，模型的主要操作可划分为获取数据、更新数据、传递数据以及保存数据。</pre>\",\"options\":\"[\\\"获取数据\\\", \\\"更新数据\\\", \\\"传递数据\\\", \\\"保存数据\\\"]\",\"optionTransferList\":[\"A、获取数据\",\"B、更新数据\",\"C、传递数据\",\"D、保存数据\"],\"id\":\"2c93869d790dcfce017a6654ef710ee1\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的知识讲解\",\"questionContent\":\"<pre>从用途方面来说，模型的主要操作划分为（）。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"从用途方面来说，模型的主要操作划分为（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"获取数据\",\"更新数据\",\"传递数据\",\"保存数据\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654ef760ee2\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的知识讲解\",\"questionContent\":\"<pre>在实体数据模型中可以存放一些数据的属性用于映射数据库表中的字段。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在实体数据模型中可以存放一些数据的属性用于映射数据库表中的字段。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>从用途方面来说，模型的主要操作可划分为获取数据、更新数据、传递数据以及保存数据。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654ef7a0ee3\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的知识讲解\",\"questionContent\":\"<pre>从用途方面来说，模型的主要操作可划分为获取数据、更新数据、传递数据以及修改数据。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"从用途方面来说，模型的主要操作可划分为获取数据、更新数据、传递数据以及修改数据。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654ef7e0ee4\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的知识讲解\",\"questionContent\":\"<pre>请简述模型的优势。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述模型的优势。\",\"difficulty\":\"D\",\"answer\":\"<pre>根据模型的性能、成本、效率、质量等方面来介绍一下模型的优势，具体如下：\\n（1） 性能\\n良好的数据模型能帮助我们快速查询所需要的数据，减少数据I/O流的输入与输出。\\n（2） 成本\\n良好的数据模型能够极大地减少不必要的数据冗余，也能实现计算结果复用，极大地降低大数据系统中的存储和计算成本。\\n（3） 效率\\n良好的数据模型能极大地改善用户使用数据的体验，提高数据使用效率。\\n（4） 质量\\n良好的数据模型能改善数据统计口径的不一致性，减少数据计算错误的可能性。</pre>\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>实体数据模型中具备指定对象的一些属性和方法。</pre>\",\"options\":\"[\\\"字段\\\", \\\"实体数据模型\\\", \\\"属性\\\", \\\"实体数据\\\"]\",\"optionTransferList\":[\"A、字段\",\"B、实体数据模型\",\"C、属性\",\"D、实体数据\"],\"id\":\"2c93869d790dcfce017a6654ef830ee5\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的动手实践\",\"questionContent\":\"<pre>下列选项中，（）中存在指定对象的一些属性和方法。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）中存在指定对象的一些属性和方法。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"字段\",\"实体数据模型\",\"属性\",\"实体数据\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>实体数据模型中具备指定对象的一些属性和方法（设置与获取字段的方法）。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654ef870ee6\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的动手实践\",\"questionContent\":\"<pre>实体数据模型中只存在设置与获取字段的方法。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"实体数据模型中只存在设置与获取字段的方法。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>实体数据模型中除了有模型属性外，还可以有业务逻辑。</pre>\",\"options\":\"[\\\"实体数据模型中除了有模型属性外，还可以有业务逻辑。\\\", \\\"实体数据模型中只有模型属性\\\", \\\"实体数据模型中只有业务逻辑。\\\", \\\"实体数据模型中没有模型属性，也没有业务逻辑。\\\"]\",\"optionTransferList\":[\"A、实体数据模型中除了有模型属性外，还可以有业务逻辑。\",\"B、实体数据模型中只有模型属性\",\"C、实体数据模型中只有业务逻辑。\",\"D、实体数据模型中没有模型属性，也没有业务逻辑。\"],\"id\":\"2c93869d790dcfce017a6654ef8b0ee7\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的拓展学习\",\"questionContent\":\"<pre>下列关于实体数据模型的描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于实体数据模型的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"实体数据模型中除了有模型属性外，还可以有业务逻辑。\",\"实体数据模型中只有模型属性\",\"实体数据模型中只有业务逻辑。\",\"实体数据模型中没有模型属性，也没有业务逻辑。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>实体数据模型中除了有模型属性外，还可以有业务逻辑。</pre>\",\"options\":\"[\\\"字段\\\", \\\"方法\\\", \\\"业务逻辑\\\", \\\"模型\\\"]\",\"optionTransferList\":[\"A、字段\",\"B、方法\",\"C、业务逻辑\",\"D、模型\"],\"id\":\"2c93869d790dcfce017a6654ef8f0ee8\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的拓展学习\",\"questionContent\":\"<pre>实体数据模型中除了有模型属性外，还有以下（）内容。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"实体数据模型中除了有模型属性外，还有以下（）内容。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"字段\",\"方法\",\"业务逻辑\",\"模型\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>实体数据模型中除了有模型属性外，还可以有业务逻辑。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654ef930ee9\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的拓展学习\",\"questionContent\":\"<pre>【】中除了有模型属性外，还可以有业务逻辑。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】中除了有模型属性外，还可以有业务逻辑。\",\"difficulty\":\"B\",\"answer\":\"[\\\"实体数据模型\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>实体数据模型中除了有模型属性外，还可以有业务逻辑。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654ef970eea\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建实体数据模型的拓展学习\",\"questionContent\":\"<pre>实体数据模型中只存在业务逻辑。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"实体数据模型中只存在业务逻辑。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>Microsoft.EntityFrameworkCore.Tool为EF框架提供合并、更新、删除数据的工具。</pre>\",\"options\":\"[\\\"为EF Core框架提供设计时的工具\\\", \\\"为EF Core框架提供合并、更新、删除数据的工具\\\", \\\"为EF Core框架提供SQL Server驱动\\\", \\\"为EF Core框架提供创建数据库的工具\\\"]\",\"optionTransferList\":[\"A、为EF Core框架提供设计时的工具\",\"B、为EF Core框架提供合并、更新、删除数据的工具\",\"C、为EF Core框架提供SQL Server驱动\",\"D、为EF Core框架提供创建数据库的工具\"],\"id\":\"2c93869d790dcfce017a6654ef9b0eeb\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的知识讲解\",\"questionContent\":\"<pre>下列关于Microsoft.EntityFrameworkCore.Tool描述正确的是（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于Microsoft.EntityFrameworkCore.Tool描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"为EF Core框架提供设计时的工具\",\"为EF Core框架提供合并、更新、删除数据的工具\",\"为EF Core框架提供SQL Server驱动\",\"为EF Core框架提供创建数据库的工具\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>Microsoft.EntityFrameworkCore.SqlServer为EF框架提供SQL Server驱动。</pre>\",\"options\":\"[\\\"为EF框架提供设计时的工具\\\", \\\"为EF框架提供合并、更新、删除数据的工具\\\", \\\"为EF框架提供SQL Server驱动\\\", \\\"为EF框架提供创建数据库的工具\\\"]\",\"optionTransferList\":[\"A、为EF框架提供设计时的工具\",\"B、为EF框架提供合并、更新、删除数据的工具\",\"C、为EF框架提供SQL Server驱动\",\"D、为EF框架提供创建数据库的工具\"],\"id\":\"2c93869d790dcfce017a6654efa00eec\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的知识讲解\",\"questionContent\":\"<pre>下列关于Microsoft.EntityFrameworkCore.SqlServer描述正确的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于Microsoft.EntityFrameworkCore.SqlServer描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"为EF框架提供设计时的工具\",\"为EF框架提供合并、更新、删除数据的工具\",\"为EF框架提供SQL Server驱动\",\"为EF框架提供创建数据库的工具\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>Entity Framework Core（EFCore）框架有以下几个特点：\\n1.跨平台 2.建模 3.查询、更改、保存数据 4.并发 5.事务 6.缓存 7.数据迁移</pre>\",\"options\":\"[\\\"跨平台\\\", \\\"建模\\\", \\\"查询、更改、保存数据\\\", \\\"创建数据库\\\"]\",\"optionTransferList\":[\"A、跨平台\",\"B、建模\",\"C、查询、更改、保存数据\",\"D、创建数据库\"],\"id\":\"2c93869d790dcfce017a6654efa40eed\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）不是Entity Framework Core（EFCore）框架的特点。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）不是Entity Framework Core（EFCore）框架的特点。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"跨平台\",\"建模\",\"查询、更改、保存数据\",\"创建数据库\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\"],\"answerTransfer\":null,\"solution\":\"<pre>Entity Framework Core框架主要用于连接、创建、初始化数据库，并通过程序包管理器控制台（Package Manager Console）工具对数据库进行变更，完成数据迁移。</pre>\",\"options\":\"[\\\"Entity Framework Core框架主要用于连接、创建、初始化数据库。\\\", \\\"Entity Framework Core框架可以完成数据迁移\\\", \\\"Entity Framework Core框架主要用于连接数据库。\\\", \\\"Entity Framework Core框架主要用于创建数据库。\\\"]\",\"optionTransferList\":[\"A、Entity Framework Core框架主要用于连接、创建、初始化数据库。\",\"B、Entity Framework Core框架可以完成数据迁移\",\"C、Entity Framework Core框架主要用于连接数据库。\",\"D、Entity Framework Core框架主要用于创建数据库。\"],\"id\":\"2c93869d790dcfce017a6654efa80eee\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的知识讲解\",\"questionContent\":\"<pre>下列关于Entity Framework Core的描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\",\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于Entity Framework Core的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"Entity Framework Core框架主要用于连接、创建、初始化数据库。\",\"Entity Framework Core框架可以完成数据迁移\",\"Entity Framework Core框架主要用于连接数据库。\",\"Entity Framework Core框架主要用于创建数据库。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>Entity Framework Core框架的跨平台特点：Entity Framework Core框架可以跨平台，可以运行在Windows、Linux、Mac系统上。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654efad0eef\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的知识讲解\",\"questionContent\":\"<pre>Entity Framework Core框架可以运行在Windows、Linux、Mac系统上是该框架的【】特点。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Entity Framework Core框架可以运行在Windows、Linux、Mac系统上是该框架的【】特点。\",\"difficulty\":\"B\",\"answer\":\"[\\\"跨平台\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654efb10ef0\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的知识讲解\",\"questionContent\":\"<pre>Microsoft.EntityFrameworkCore.Tool包为EF框架提供合并、更新、删除数据的工具。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Microsoft.EntityFrameworkCore.Tool包为EF框架提供合并、更新、删除数据的工具。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>EFCore框架的数据迁移特点：可以在程序包管理器控制台（Package Manager Console）中通过执行命令来创建或者管理底层的数据库。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654efb50ef1\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的知识讲解\",\"questionContent\":\"<pre>Entity Framework Core（EFCore）框架的数据迁移特点是可以运行在Windows、Linux、Mac系统上。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Entity Framework Core（EFCore）框架的数据迁移特点是可以运行在Windows、Linux、Mac系统上。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654efb90ef2\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的知识讲解\",\"questionContent\":\"<pre>请简述Entity Framework Core（EFCore）框架的特点。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述Entity Framework Core（EFCore）框架的特点。\",\"difficulty\":\"D\",\"answer\":\"<pre>Entity Framework Core（EFCore）框架有以下几个特点：\\n1. 跨平台：Entity Framework Core框架可以跨平台，可以运行在Windows、Linux、Mac系统上。\\n2. 建模：EFCore框架可以创建具有不同数据类型的属性的实体数据模型，它将会使用我们自己创建的模型查询或保存底层的数据。\\n3. 查询、更改、保存数据： EFCore框架允许我们使用LINQ语言（是一门查询语言，与SQL类似）从底层检索数据，它也会跟踪提交到数据库中的数据，最后EFCore框架还可以调用SafeChange()方法与SafeChangeasync()方法异步对数据进行提交和保存。\\n4. 并发：在默认情况下EFCore框架将会使用乐观锁（在拓展深化中有简介）来避免我们做的操作被其他用户所覆盖。\\n5.事务：EFCore框架在查询或保存数据时，将会自动执行事务管理。\\n6. 缓存：EFCore框架会提供第一级的缓存，所以重复查询将会从缓存中查询数据，而不是再次访问数据库。\\n7.数据迁移：EFCore框架还提供了强大的数据迁移工具，我们可以在程序包管理器控制台（Package Manager Console）中通过执行命令来创建或者管理底层的数据库。</pre>\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>项目的appsettings.json文件中可以设置数据库的配置信息。</pre>\",\"options\":\"[\\\"program.cs\\\", \\\"appsettings.json\\\", \\\"Startup.cs\\\", \\\"AppDbContext .cs\\\"]\",\"optionTransferList\":[\"A、program.cs\",\"B、appsettings.json\",\"C、Startup.cs\",\"D、AppDbContext .cs\"],\"id\":\"2c93869d790dcfce017a6654efbd0ef3\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的动手实践\",\"questionContent\":\"<pre>下列（）文件中可以设置数据库的配置信息。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列（）文件中可以设置数据库的配置信息。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"program.cs\",\"appsettings.json\",\"Startup.cs\",\"AppDbContext .cs\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>在程序中调用GetConnectionString()方法可以获取数据库的配置信息。</pre>\",\"options\":\"[\\\"ConfigureServices()\\\", \\\"Configure()\\\", \\\"GetConnectionString()\\\", \\\"Connection()\\\"]\",\"optionTransferList\":[\"A、ConfigureServices()\",\"B、Configure()\",\"C、GetConnectionString()\",\"D、Connection()\"],\"id\":\"2c93869d790dcfce017a6654efc20ef4\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的动手实践\",\"questionContent\":\"<pre>在程序中，调用以下（）方法可以获取数据库的配置信息。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中，调用以下（）方法可以获取数据库的配置信息。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"ConfigureServices()\",\"Configure()\",\"GetConnectionString()\",\"Connection()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>在程序包管理器控制台中输入&ldquo;add-migration InitMigration&rdquo;命令，单击回车键几秒后，控制台会提示&ldquo;Build started&rdquo;表示开始构建程序，接着提示Build succeeded表示构建成功。</pre>\",\"options\":\"[\\\"update-database\\\", \\\"update-databases\\\", \\\"add-migration InitMigrations\\\", \\\"add-migration InitMigration\\\"]\",\"optionTransferList\":[\"A、update-database\",\"B、update-databases\",\"C、add-migration InitMigrations\",\"D、add-migration InitMigration\"],\"id\":\"2c93869d790dcfce017a6654efc60ef5\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的动手实践\",\"questionContent\":\"<pre>下列选项中，（）命令可以构建ASP.NET Core MVC程序。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）命令可以构建ASP.NET Core MVC程序。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"update-database\",\"update-databases\",\"add-migration InitMigrations\",\"add-migration InitMigration\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>在程序包管理器控制台中输入&ldquo;update-database&rdquo;命令，然后单击回车键，此时程序包管理器就会执行程序中创建的20200513035810_InitMigration.cs文件中的Up()函数来执行数据迁移并创建数据库。</pre>\",\"options\":\"[\\\"update-database\\\", \\\"update-databases\\\", \\\"add-migration InitMigrations\\\", \\\"add-migration InitMigration\\\"]\",\"optionTransferList\":[\"A、update-database\",\"B、update-databases\",\"C、add-migration InitMigrations\",\"D、add-migration InitMigration\"],\"id\":\"2c93869d790dcfce017a6654efca0ef6\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的动手实践\",\"questionContent\":\"<pre>下列选项中，（）命令可以创建数据库。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）命令可以创建数据库。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"update-database\",\"update-databases\",\"add-migration InitMigrations\",\"add-migration InitMigration\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在程序包管理器控制台中输入&ldquo;update-database&rdquo;命令，可以创建数据库与数据库的表。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654efce0ef7\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的动手实践\",\"questionContent\":\"<pre>在程序包管理器控制台中输入【】命令，可以创建数据库与数据库的表。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序包管理器控制台中输入【】命令，可以创建数据库与数据库的表。\",\"difficulty\":\"B\",\"answer\":\"[\\\"&ldquo;update-database&rdquo;\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>当执行数据迁移代码后，如果程序包管理器控制台中出现Done英文单词，说明数据库创建或更新完毕，此时的数据库可以进行使用。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654efd30ef8\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的动手实践\",\"questionContent\":\"<pre>当执行完数据迁移代码后，如果程序包管理器控制台中出现英文单词【】，说明数据库创建或更新完毕。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当执行完数据迁移代码后，如果程序包管理器控制台中出现英文单词【】，说明数据库创建或更新完毕。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Done\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654efd70ef9\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的动手实践\",\"questionContent\":\"<pre>在ASP.NET Core MVC项目中通过Entity Framework Core框架可以创建与初始化数据库。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在ASP.NET Core MVC项目中通过Entity Framework Core框架可以创建与初始化数据库。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>LINQ叫做语言集成查询，全拼是Language INtegrated Query，是一门查询语言，与SQL类似。</pre>\",\"options\":\"[\\\"LINQ叫做语言集成查询\\\", \\\"LINQ全拼是Language INtegrated Query\\\", \\\"LINQ是一门查询语言\\\", \\\"LINQ是SQL语言\\\"]\",\"optionTransferList\":[\"A、LINQ叫做语言集成查询\",\"B、LINQ全拼是Language INtegrated Query\",\"C、LINQ是一门查询语言\",\"D、LINQ是SQL语言\"],\"id\":\"2c93869d790dcfce017a6654efdc0efa\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>下列关于LINQ的描述错误的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于LINQ的描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"LINQ叫做语言集成查询\",\"LINQ全拼是Language INtegrated Query\",\"LINQ是一门查询语言\",\"LINQ是SQL语言\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>using关键字不仅具有添加命名空间的作用，而且还有释放非托管资源的作用。为了保证数据处理的安全性，通常在使用using关键字时都会加入try-catch异常处理。</pre>\",\"options\":\"[\\\"using关键字具有添加命名空间的作用\\\", \\\"using关键字具有释放非托管资源的作用\\\", \\\"using关键字具有添加方法的作用\\\", \\\"使用using关键字时都会加入try-catch异常处理\\\"]\",\"optionTransferList\":[\"A、using关键字具有添加命名空间的作用\",\"B、using关键字具有释放非托管资源的作用\",\"C、using关键字具有添加方法的作用\",\"D、使用using关键字时都会加入try-catch异常处理\"],\"id\":\"2c93869d790dcfce017a6654efe00efb\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>下列关于using关键字的描述错误的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于using关键字的描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"using关键字具有添加命名空间的作用\",\"using关键字具有释放非托管资源的作用\",\"using关键字具有添加方法的作用\",\"使用using关键字时都会加入try-catch异常处理\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>在修改数据之前先锁定数据再修改数据的方式称为悲观并发控制（又称悲观锁，Pessimistic Concurrency Control，缩写&ldquo;PCC&rdquo;）。</pre>\",\"options\":\"[\\\"悲观锁\\\", \\\"乐观锁\\\", \\\"引入锁\\\", \\\"退出锁\\\"]\",\"optionTransferList\":[\"A、悲观锁\",\"B、乐观锁\",\"C、引入锁\",\"D、退出锁\"],\"id\":\"2c93869d790dcfce017a6654efe40efc\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）方式是在修改数据之前先锁定数据再修改数据的。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方式是在修改数据之前先锁定数据再修改数据的。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"悲观锁\",\"乐观锁\",\"引入锁\",\"退出锁\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>乐观锁是相对于悲观锁而言的，乐观锁是假设数据在一般情况下不会造成数据并发冲突。</pre>\",\"options\":\"[\\\"悲观锁\\\", \\\"乐观锁\\\", \\\"引入锁\\\", \\\"退出锁\\\"]\",\"optionTransferList\":[\"A、悲观锁\",\"B、乐观锁\",\"C、引入锁\",\"D、退出锁\"],\"id\":\"2c93869d790dcfce017a6654efe90efd\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）方式是假设数据在一般情况下不会造成数据的并发冲突。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方式是假设数据在一般情况下不会造成数据的并发冲突。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"悲观锁\",\"乐观锁\",\"引入锁\",\"退出锁\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\"],\"answerTransfer\":null,\"solution\":\"<pre>实现并发控制的主要手段大致可以分为乐观并发控制（乐观锁）与悲观并发控制（悲观锁）两种。</pre>\",\"options\":\"[\\\"悲观锁\\\", \\\"乐观锁\\\", \\\"引入锁\\\", \\\"退出锁\\\"]\",\"optionTransferList\":[\"A、悲观锁\",\"B、乐观锁\",\"C、引入锁\",\"D、退出锁\"],\"id\":\"2c93869d790dcfce017a6654efed0efe\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）是实现并发控制的主要手段。</pre>\",\"answerTransferList\":[\"A\",\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是实现并发控制的主要手段。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"悲观锁\",\"乐观锁\",\"引入锁\",\"退出锁\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>using关键字不仅具有添加命名空间的作用，而且还有释放非托管资源的作用。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654eff10eff\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>【】关键字不仅具有添加命名空间的作用，而且还有释放非托管资源的作用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】关键字不仅具有添加命名空间的作用，而且还有释放非托管资源的作用。\",\"difficulty\":\"B\",\"answer\":\"[\\\"using\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>实现并发控制的主要手段大致可以分为乐观并发控制（乐观锁）与悲观并发控制（悲观锁）两种。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654eff60f00\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>实现并发控制的主要手段大致可以分为乐观并发控制与【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"实现并发控制的主要手段大致可以分为乐观并发控制与【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"悲观并发控制或悲观锁\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654effb0f01\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>LINQ叫做语言集成查询，全拼是Language INtegrated Query，是一门查询语言。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"LINQ叫做语言集成查询，全拼是Language INtegrated Query，是一门查询语言。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>这种借助的是数据库锁的机制，在修改数据之前先锁定数据再修改数据的方式称为悲观并发控制。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654efff0f02\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>这种借助数据库锁的机制，在修改数据之前先锁定数据再修改数据的方式称为乐观并发控制。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"这种借助数据库锁的机制，在修改数据之前先锁定数据再修改数据的方式称为乐观并发控制。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f0040f03\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建数据库的拓展学习\",\"questionContent\":\"<pre>请简述并发控制的主要手段。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述并发控制的主要手段。\",\"difficulty\":\"D\",\"answer\":\"<pre>实现并发控制的主要手段大致可以分为乐观并发控制（乐观锁）与悲观并发控制（悲观锁）两种，具体介绍如下：\\n（1）悲观锁\\n当要对数据库中的一条数据进行修改时，为了避免同时被其他人修改，最好的办法就是直接对该数据进行加锁以防止并发情况。这种借助的是数据库锁的机制，在修改数据之前先锁定数据再修改数据的方式称为悲观并发控制（又称悲观锁，Pessimistic Concurrency Control，缩写&ldquo;PCC&rdquo;）。\\n（2）乐观锁\\n乐观锁是相对于悲观锁而言的，乐观锁是假设数据在一般情况下不会造成数据并发冲突。在数据进行提交更新时，才会正式对数据的冲突与否进行检测，如果发现了冲突，则返回给用户错误的信息，让用户选择如何操作。</pre>\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>Repository仓库模式可以通过使用对象化的模式来获取数据，而不用知道数据是如何保存的。</pre>\",\"options\":\"[\\\"仓库模式\\\", \\\"Repository仓库模式\\\", \\\"实体数据模型\\\", \\\"MVC模式\\\"]\",\"optionTransferList\":[\"A、仓库模式\",\"B、Repository仓库模式\",\"C、实体数据模型\",\"D、MVC模式\"],\"id\":\"2c93869d790dcfce017a6654f0080f04\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）可以通过使用对象化的模式来获取数据，而不用知道数据是如何保存的。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）可以通过使用对象化的模式来获取数据，而不用知道数据是如何保存的。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"仓库模式\",\"Repository仓库模式\",\"实体数据模型\",\"MVC模式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>使用仓库模式的具体步骤如下：\\n（1） 创建实体类\\n（2）创建仓库接口\\n（3）实现仓库接口</pre>\",\"options\":\"[\\\"创建实体类\\\", \\\"创建仓库接口\\\", \\\"实现实体类\\\", \\\"实现仓库接口\\\"]\",\"optionTransferList\":[\"A、创建实体类\",\"B、创建仓库接口\",\"C、实现实体类\",\"D、实现仓库接口\"],\"id\":\"2c93869d790dcfce017a6654f00c0f05\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）不是使用仓库模式的步骤。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）不是使用仓库模式的步骤。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"创建实体类\",\"创建仓库接口\",\"实现实体类\",\"实现仓库接口\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>模型与数据仓库有以下三个优势，具体如下：\\n（1） 业务逻辑与数据模型紧密耦合，减少分层、降低代码数量。\\n（2） 完全剥离数据库业务，程序员可以更专注于实现业务逻辑。\\n（3） 面向对象编程，数据转化为对象，更符合程序员的思考方式。</pre>\",\"options\":\"[\\\"面向过程编程，数据转化为对象。\\\", \\\"业务逻辑与数据模型紧密耦合，减少分层、降低代码数量。\\\", \\\"完全剥离数据库业务，程序员可以更专注于实现业务逻辑。\\\", \\\"面向对象编程，数据转化为对象，更符合程序员的思考方式。\\\"]\",\"optionTransferList\":[\"A、面向过程编程，数据转化为对象。\",\"B、业务逻辑与数据模型紧密耦合，减少分层、降低代码数量。\",\"C、完全剥离数据库业务，程序员可以更专注于实现业务逻辑。\",\"D、面向对象编程，数据转化为对象，更符合程序员的思考方式。\"],\"id\":\"2c93869d790dcfce017a6654f0110f06\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是模型与数据仓库的优势。</pre>\",\"answerTransferList\":[\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是模型与数据仓库的优势。\",\"difficulty\":\"A\",\"answer\":\"[\\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"面向过程编程，数据转化为对象。\",\"业务逻辑与数据模型紧密耦合，减少分层、降低代码数量。\",\"完全剥离数据库业务，程序员可以更专注于实现业务逻辑。\",\"面向对象编程，数据转化为对象，更符合程序员的思考方式。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>如果想要使用仓库模式，首先需要创建一个实体数据模型，其次创建仓库接口，然后实现仓库接口。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f0150f07\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的知识讲解\",\"questionContent\":\"<pre>如果想要使用仓库模式，首先需要创建一个实体数据模型，其次创建仓库接口，然后【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"如果想要使用仓库模式，首先需要创建一个实体数据模型，其次创建仓库接口，然后【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"实现仓库接口\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f01a0f08\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的知识讲解\",\"questionContent\":\"<pre>模型与数据仓库的优势包括业务逻辑与数据模型紧密耦合，减少分层、降低代码数量。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"模型与数据仓库的优势包括业务逻辑与数据模型紧密耦合，减少分层、降低代码数量。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f01e0f09\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的知识讲解\",\"questionContent\":\"<pre>请简述模型与数据仓库的优势。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述模型与数据仓库的优势。\",\"difficulty\":\"D\",\"answer\":\"<pre>模型与数据仓库有以下三个优势，具体如下：\\n（1） 业务逻辑与数据模型紧密耦合，减少分层、降低代码数量。\\n（2） 完全剥离数据库业务，程序员可以更专注于实现业务逻辑。\\n（3） 面向对象编程，数据转化为对象，更符合程序员的思考方式。</pre>\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>在ConfigureServices()方法中通过调用AddTransient()方法将页面数据注册到系统的依赖注入容器中。</pre>\",\"options\":\"[\\\"AddTransient()\\\", \\\"Configures()\\\", \\\"Startup()\\\", \\\"ConfigureServices()\\\"]\",\"optionTransferList\":[\"A、AddTransient()\",\"B、Configures()\",\"C、Startup()\",\"D、ConfigureServices()\"],\"id\":\"2c93869d790dcfce017a6654f0220f0a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的动手实践\",\"questionContent\":\"<pre>在下列（）方法中可以将页面数据注册到系统的依赖注入容器中。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在下列（）方法中可以将页面数据注册到系统的依赖注入容器中。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"AddTransient()\",\"Configures()\",\"Startup()\",\"ConfigureServices()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在ASP.NET Core MVC程序中调用AddTransient()方法可以将页面数据注册到系统的依赖注入容器中。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f0270f0b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的动手实践\",\"questionContent\":\"<pre>在ASP.NET Core MVC程序中调用【】方法可以将页面数据注册到系统的依赖注入容器中。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在ASP.NET Core MVC程序中调用【】方法可以将页面数据注册到系统的依赖注入容器中。\",\"difficulty\":\"B\",\"answer\":\"[\\\"AddTransient()\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在Startup.cs文件的ConfigureServices()方法中通过调用AddTransient()方法可以将页面数据注册到系统的依赖注入容器中。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f02b0f0c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的动手实践\",\"questionContent\":\"<pre>在Startup.cs文件的Configure()方法中通过调用AddTransient()方法可以将页面数据注册到系统的依赖注入容器中。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在Startup.cs文件的Configure()方法中通过调用AddTransient()方法可以将页面数据注册到系统的依赖注入容器中。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>使用ViewModel模型来组合不同的数据，将数据显示在同一个页面上。</pre>\",\"options\":\"[\\\"实体数据模型\\\", \\\"Model模型\\\", \\\"ViewModel模型\\\", \\\"View模型\\\"]\",\"optionTransferList\":[\"A、实体数据模型\",\"B、Model模型\",\"C、ViewModel模型\",\"D、View模型\"],\"id\":\"2c93869d790dcfce017a6654f0300f0d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）可以将不同的数据经过组合显示在同一个页面上。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）可以将不同的数据经过组合显示在同一个页面上。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"实体数据模型\",\"Model模型\",\"ViewModel模型\",\"View模型\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f0340f0e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"添加Repository仓库模式的拓展学习\",\"questionContent\":\"<pre>ViewModel视图模型可以与视图进行数据绑定。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ViewModel视图模型可以与视图进行数据绑定。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>模型数据的验证是通过对数据的注解来验证的。</pre>\",\"options\":\"[\\\"数据的注解\\\", \\\"数据的模型\\\", \\\"数据的注释\\\", \\\"数据的逻辑\\\"]\",\"optionTransferList\":[\"A、数据的注解\",\"B、数据的模型\",\"C、数据的注释\",\"D、数据的逻辑\"],\"id\":\"2c93869d790dcfce017a6654f0de0f0f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）可以验证模型数据。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）可以验证模型数据。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"数据的注解\",\"数据的模型\",\"数据的注释\",\"数据的逻辑\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>内置验证特性[StringLength]用于验证字符串属性值是否不超过指定长度限制。</pre>\",\"options\":\"[\\\"内置验证特性[CreditCard]用于验证属性是否具有信用卡格式，此验证需要JQuery 验证其他方法。\\\", \\\"内置验证特性[Phone]用于验证属性是否具有电话号码格式。\\\", \\\"内置验证特性[Range]用于验证属性值是否在指定的范围内。\\\", \\\"内置验证特性[StringLength]用于验证字符串的长度。\\\"]\",\"optionTransferList\":[\"A、内置验证特性[CreditCard]用于验证属性是否具有信用卡格式，此验证需要JQuery 验证其他方法。\",\"B、内置验证特性[Phone]用于验证属性是否具有电话号码格式。\",\"C、内置验证特性[Range]用于验证属性值是否在指定的范围内。\",\"D、内置验证特性[StringLength]用于验证字符串的长度。\"],\"id\":\"2c93869d790dcfce017a6654f0e20f10\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>下列关于内置验证特性的描述错误的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于内置验证特性的描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"内置验证特性[CreditCard]用于验证属性是否具有信用卡格式，此验证需要JQuery 验证其他方法。\",\"内置验证特性[Phone]用于验证属性是否具有电话号码格式。\",\"内置验证特性[Range]用于验证属性值是否在指定的范围内。\",\"内置验证特性[StringLength]用于验证字符串的长度。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>当需要指定某个字段的值是必需时，需要使用内置验证特性[Required]。</pre>\",\"options\":\"[\\\"[StringLength]\\\", \\\"[Required]\\\", \\\"[Compare]\\\", \\\"[RegularExpression]\\\"]\",\"optionTransferList\":[\"A、[StringLength]\",\"B、[Required]\",\"C、[Compare]\",\"D、[RegularExpression]\"],\"id\":\"2c93869d790dcfce017a6654f0e60f11\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>下列内置验证特性中，（）用于指定某个字段的值是必填项。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列内置验证特性中，（）用于指定某个字段的值是必填项。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"[StringLength]\",\"[Required]\",\"[Compare]\",\"[RegularExpression]\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>当需要验证某个字段值的正则表达式时，需要使用内置验证特性[RegularExpression]。</pre>\",\"options\":\"[\\\"[StringLength]\\\", \\\"[Required]\\\", \\\"[RegularExpression]\\\", \\\"[Compare]\\\"]\",\"optionTransferList\":[\"A、[StringLength]\",\"B、[Required]\",\"C、[RegularExpression]\",\"D、[Compare]\"],\"id\":\"2c93869d790dcfce017a6654f0eb0f12\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>下列内置验证特性中，（）用于验证某个字段值的正则表达式。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列内置验证特性中，（）用于验证某个字段值的正则表达式。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"[StringLength]\",\"[Required]\",\"[RegularExpression]\",\"[Compare]\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>当需要指定某个字段的长度时，需要使用内置验证特性[StringLength]。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f0f10f13\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>当需要指定某个字段的长度时，需要使用内置验证特性【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当需要指定某个字段的长度时，需要使用内置验证特性【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"[StringLength]\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>如果需要验证属性是否具有URL格式时，则需要使用内置验证特性[Url]。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f0f60f14\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>如果需要验证属性是否具有URL格式时，则需要使用内置验证特性【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"如果需要验证属性是否具有URL格式时，则需要使用内置验证特性【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"[Url]\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>如果需要验证属性值是否在指定的范围内，则需要使用内置验证特性[Range]。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f0fa0f15\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>如果需要验证属性值是否在指定的范围内，则需要使用内置验证特性【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"如果需要验证属性值是否在指定的范围内，则需要使用内置验证特性【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"[Range]\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f0fe0f16\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>模型数据的验证是通过对数据的注解来验证的。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"模型数据的验证是通过对数据的注解来验证的。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f1020f17\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>请简述什么是内置验证特性[Required]。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述什么是内置验证特性[Required]。\",\"difficulty\":\"D\",\"answer\":\"<pre>当需要指定某个字段的值是必需时，需要使用内置验证特性[Required]，也就是在验证的属性上面用中括号（[]）将Required括起来，然后添加上错误信息，该错误信息是由参数ErrorMessage的值来设置的，具体示例代码如下：\\n[Required(ErrorMessage =&quot;*必填项&quot;)]\\npublic string userName { get; set; }\\n 当字段userName的值为空时，程序会提示用户此项为必填项。</pre>\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f1070f18\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>请简述什么是内置验证特性[StringLength]。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述什么是内置验证特性[StringLength]。\",\"difficulty\":\"D\",\"answer\":\"<pre>当需要指定某个字段的长度时，需要使用内置验证特性[StringLength]，也就是在验证的属性上面用中括号（[]）将StringLength括起来，然后在该特性中添加限制的长度参数与错误提示信息，具体示例代码如下：\\n[StringLength(5,ErrorMessage =&quot;*用户名不能超过5个字符&quot;)]\\n public string userName { get; set; }</pre>\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6654f10b0f19\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的知识讲解\",\"questionContent\":\"<pre>请简述什么是内置验证特性[RegularExpression]。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述什么是内置验证特性[RegularExpression]。\",\"difficulty\":\"D\",\"answer\":\"<pre>当需要验证某个字段的值的正则表达式时，需要使用内置验证特性[RegularExpression]，也就是在验证的属性上面用中括号（[]）将RegularExpression括起来，然后在该特性中添加正则表达式与错误提示信息，具体示例代码如下：\\n[RegularExpression(@&quot;^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\\\.[a-zA-Z0-9-]+)*\\\\.\\n[a-zA-Z0-9]{2,6}$&quot;, ErrorMessage = &quot;*邮箱格式错误&quot;)] //正则表达式\\npublic string Email { get; set; }</pre>\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>元数据反映了数据的交易、事件、对象和关系等。</pre>\",\"options\":\"[\\\"元数据的定义是&ldquo;关于数据的数据&rdquo;\\\", \\\"元数据反映了数据的交易、事件、对象和关系等。\\\", \\\"元数据反映了真实世界的交易、事件、对象和关系。\\\", \\\"只要能够用来描述某个数据的，都可以认为是元数据。\\\"]\",\"optionTransferList\":[\"A、元数据的定义是&ldquo;关于数据的数据&rdquo;\",\"B、元数据反映了数据的交易、事件、对象和关系等。\",\"C、元数据反映了真实世界的交易、事件、对象和关系。\",\"D、只要能够用来描述某个数据的，都可以认为是元数据。\"],\"id\":\"2c93869d790dcfce017a6654f10f0f1a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的拓展学习\",\"questionContent\":\"<pre>下列关于元数据的描述，错误的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于元数据的描述，错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"元数据的定义是&ldquo;关于数据的数据&rdquo;\",\"元数据反映了数据的交易、事件、对象和关系等。\",\"元数据反映了真实世界的交易、事件、对象和关系。\",\"只要能够用来描述某个数据的，都可以认为是元数据。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\"],\"answerTransfer\":null,\"solution\":\"<pre>TagHelper标签也可以在cshtml文件中调用。\\n@addTagHelper后面除了使用*之外还可以指定特定的TagHelper。</pre>\",\"options\":\"[\\\"TagHelper标签可以标记帮助程序在Razor文件中使用服务器端代码参与创建和呈现HTML元素。\\\", \\\"TagHelper标签也可以在cshtml文件中调用。\\\", \\\"TagHelper标签也可以在java文件中调用。\\\", \\\"@addTagHelper后面只能使用*。\\\"]\",\"optionTransferList\":[\"A、TagHelper标签可以标记帮助程序在Razor文件中使用服务器端代码参与创建和呈现HTML元素。\",\"B、TagHelper标签也可以在cshtml文件中调用。\",\"C、TagHelper标签也可以在java文件中调用。\",\"D、@addTagHelper后面只能使用*。\"],\"id\":\"2c93869d790dcfce017a6654f1130f1b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"验证模型数据的拓展学习\",\"questionContent\":\"<pre>下列关于TagHelper标签助手的描述，正确的是（）。</pre>\",\"answerTransferList\":[\"A\",\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于TagHelper标签助手的描述，正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\"]\",\"createTime\":\"2021-07-02 16:27:46\",\"optionsList\":[\"TagHelper标签可以标记帮助程序在Razor文件中使用服务器端代码参与创建和呈现HTML元素。\",\"TagHelper标签也可以在cshtml文件中调用。\",\"TagHelper标签也可以在java文件中调用。\",\"@addTagHelper后面只能使用*。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>MVC模式中的控制器主要负责响应用户的输入，并且在响应时修改模型。</pre>\",\"options\":\"[\\\"控制器是包含必要的处理请求的.NET类。\\\", \\\"控制器是MVC应用程序的指挥员，它精心紧密地编排用户、模块对象和视图的交互。\\\", \\\"MVC模式中的控制器主要负责响应用户的输出。\\\", \\\"MVC模式中的控制器主要负责响应用户的输入，并且在响应时修改模型。\\\"]\",\"optionTransferList\":[\"A、控制器是包含必要的处理请求的.NET类。\",\"B、控制器是MVC应用程序的指挥员，它精心紧密地编排用户、模块对象和视图的交互。\",\"C、MVC模式中的控制器主要负责响应用户的输出。\",\"D、MVC模式中的控制器主要负责响应用户的输入，并且在响应时修改模型。\"],\"id\":\"2c93869d790dcfce017a665340ba0e91\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>下列关于控制器的描述错误的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于控制器的描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"控制器是包含必要的处理请求的.NET类。\",\"控制器是MVC应用程序的指挥员，它精心紧密地编排用户、模块对象和视图的交互。\",\"MVC模式中的控制器主要负责响应用户的输出。\",\"MVC模式中的控制器主要负责响应用户的输入，并且在响应时修改模型。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>控制器的中转作用：\\n控制器在MVC模式中起着承上启下的作用，根据用户的输入，需要执行响应行为（动作方法），同时在行为中调用模型的业务逻辑，返回给用户结果（视图）。</pre>\",\"options\":\"[\\\"中转作用\\\", \\\"中介作用\\\", \\\"传递作用\\\", \\\"转换作用\\\"]\",\"optionTransferList\":[\"A、中转作用\",\"B、中介作用\",\"C、传递作用\",\"D、转换作用\"],\"id\":\"2c93869d790dcfce017a665340bf0e92\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）的含义是控制器在MVC模式中起着承上启下的作用。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）的含义是控制器在MVC模式中起着承上启下的作用。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"中转作用\",\"中介作用\",\"传递作用\",\"转换作用\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>控制器的中介作用：\\n控制器在MVC模式中分离了视图和模型，让视图与模型各司其职，控制器只负责数据传送，不负责处理。</pre>\",\"options\":\"[\\\"中转作用\\\", \\\"中介作用\\\", \\\"传递作用\\\", \\\"转换作用\\\"]\",\"optionTransferList\":[\"A、中转作用\",\"B、中介作用\",\"C、传递作用\",\"D、转换作用\"],\"id\":\"2c93869d790dcfce017a665340c30e93\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）的含义是控制器只负责数据传送，不负责处理。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）的含义是控制器只负责数据传送，不负责处理。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"中转作用\",\"中介作用\",\"传递作用\",\"转换作用\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>控制器的中转作用：\\n控制器在MVC模式中起着承上启下的作用，根据用户的输入，需要执行响应行为（动作方法），同时在行为中调用模型的业务逻辑，返回给用户结果（视图）。</pre>\",\"options\":\"[\\\"根据用户的输出，需要执行响应行为（动作方法）\\\", \\\"在动作方法中调用控制器的业务逻辑\\\", \\\"返回给用户结果（视图）\\\", \\\"控制器在MVC模式中起着承上启下的作用\\\"]\",\"optionTransferList\":[\"A、根据用户的输出，需要执行响应行为（动作方法）\",\"B、在动作方法中调用控制器的业务逻辑\",\"C、返回给用户结果（视图）\",\"D、控制器在MVC模式中起着承上启下的作用\"],\"id\":\"2c93869d790dcfce017a665340c70e94\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>下列关于控制器的中转作用描述正确的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于控制器的中转作用描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"根据用户的输出，需要执行响应行为（动作方法）\",\"在动作方法中调用控制器的业务逻辑\",\"返回给用户结果（视图）\",\"控制器在MVC模式中起着承上启下的作用\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>控制器的中介作用：\\n控制器在MVC模式中分离了视图和模型，让视图与模型各司其职，控制器只负责数据传送，不负责处理。</pre>\",\"options\":\"[\\\"控制器在MVC模式中分离了视图和代码。\\\", \\\"让视图与模型联系起来。\\\", \\\"控制器只负责数据传送，不负责处理。\\\", \\\"控制器不负责数据传送。\\\"]\",\"optionTransferList\":[\"A、控制器在MVC模式中分离了视图和代码。\",\"B、让视图与模型联系起来。\",\"C、控制器只负责数据传送，不负责处理。\",\"D、控制器不负责数据传送。\"],\"id\":\"2c93869d790dcfce017a665340cb0e95\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>下列关于控制器的中介作用描述正确的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于控制器的中介作用描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"控制器在MVC模式中分离了视图和代码。\",\"让视图与模型联系起来。\",\"控制器只负责数据传送，不负责处理。\",\"控制器不负责数据传送。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\"],\"answerTransfer\":null,\"solution\":\"<pre>控制器的作用有两个，分别是中转作用与中介作用。</pre>\",\"options\":\"[\\\"中转作用\\\", \\\"中介作用\\\", \\\"传递作用\\\", \\\"转换作用\\\"]\",\"optionTransferList\":[\"A、中转作用\",\"B、中介作用\",\"C、传递作用\",\"D、转换作用\"],\"id\":\"2c93869d790dcfce017a665340cf0e96\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>下列关于控制器的作用描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\",\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于控制器的作用描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"中转作用\",\"中介作用\",\"传递作用\",\"转换作用\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>创建控制器的方式有三种，分别是在类名后添加Controller、在类的上方添加[Controller]、继承Controller基类，也就是在类的后面添加&ldquo;：Controller&rdquo;。</pre>\",\"options\":\"[\\\"在类名后添加Controllers\\\", \\\"在类名后添加Controller\\\", \\\"在类上方添加[Controller]\\\", \\\"将一个类继承Controller类\\\"]\",\"optionTransferList\":[\"A、在类名后添加Controllers\",\"B、在类名后添加Controller\",\"C、在类上方添加[Controller]\",\"D、将一个类继承Controller类\"],\"id\":\"2c93869d790dcfce017a665340d30e97\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）方式可以创建控制器。</pre>\",\"answerTransferList\":[\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方式可以创建控制器。\",\"difficulty\":\"A\",\"answer\":\"[\\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"在类名后添加Controllers\",\"在类名后添加Controller\",\"在类上方添加[Controller]\",\"将一个类继承Controller类\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>MVC模式中的控制器主要负责响应用户的输入，并且在响应时修改模型（Model）。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340d70e98\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>MVC模式中的【】主要负责响应用户的输入，并且在响应时修改模型（Model）。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"MVC模式中的【】主要负责响应用户的输入，并且在响应时修改模型（Model）。\",\"difficulty\":\"B\",\"answer\":\"[\\\"控制器\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>控制器的作用有两个，分别是中转作用与中介作用。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340db0e99\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>控制器的作用有两个，分别是中转作用与【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"控制器的作用有两个，分别是中转作用与【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"中介作用\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>控制器的中介作用：\\n控制器在MVC模式中分离了视图和模型，让视图与模型各司其职，控制器只负责数据传送，不负责处理。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340df0e9a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>控制器让视图与模型各司其职，并且只负责数据传送，不负责处理数据，这个作用属于控制器的【】作用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"控制器让视图与模型各司其职，并且只负责数据传送，不负责处理数据，这个作用属于控制器的【】作用。\",\"difficulty\":\"B\",\"answer\":\"[\\\"中介\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>控制器是MVC应用程序的指挥员，它精心紧密地编排用户、模块对象和视图的交互。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340e30e9b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>【】是MVC应用程序的指挥员，它精心紧密地编排用户、模块对象和视图的交互。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是MVC应用程序的指挥员，它精心紧密地编排用户、模块对象和视图的交互。\",\"difficulty\":\"B\",\"answer\":\"[\\\"控制器\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>创建控制器的方式有三种，分别是在类名后添加Controller、在类的上方添加[Controller]、继承Controller基类，也就是在类的后面添加&ldquo;：Controller&rdquo;。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340e80e9c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>通过在类名后添加Controller的方式可以创建一个控制器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"通过在类名后添加Controller的方式可以创建一个控制器。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>控制器的中转作用：\\n控制器在MVC模式中起着承上启下的作用，根据用户的输入，需要执行响应行为（动作方法），同时在行为中调用模型的业务逻辑，返回给用户结果（视图）。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340eb0e9d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>控制器在MVC模式中起着承上启下的作用，这个作用属于控制器的中介作用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"控制器在MVC模式中起着承上启下的作用，这个作用属于控制器的中介作用。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340ef0e9e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>控制器让视图与模型各司其职，控制器只负责数据传送，不负责处理数据的作用属于控制器的中介作用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"控制器让视图与模型各司其职，控制器只负责数据传送，不负责处理数据的作用属于控制器的中介作用。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在类名后添加Controller可以创建一个控制器。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340f30e9f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>在类名后添加Controllers可以创建一个控制器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在类名后添加Controllers可以创建一个控制器。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340f70ea0\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>请简述什么是控制器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述什么是控制器。\",\"difficulty\":\"D\",\"answer\":\"<pre>控制器的简单介绍如下：\\n控制器（Controller）是包含必要的处理请求的.NET类，用于对一组操作进行定义和分组，此处的操作是控制器上一种用来处理请求的方法。MVC模式中的控制器主要负责响应用户的输入，并且在响应时修改模型（Model）。</pre>\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340fb0ea1\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>请简述控制器的作用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述控制器的作用。\",\"difficulty\":\"D\",\"answer\":\"<pre>控制器的作用有两个，分别是中转作用与中介角色作用，具体内容如下所示。\\n（1） 中转作用\\n 通过前面学习的MVC模式可知，控制器在MVC模式中起着承上启下的作用，根据用户的输入，需要执行响应行为（动作方法），同时在行为中调用模型的业务逻辑，返回给用户结果（视图）。\\n（2） 中介作用\\n 控制器在MVC模式中分离了视图和模型，让视图与模型各司其职，控制器只负责数据传送，不负责处理。</pre>\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665340ff0ea2\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的知识讲解\",\"questionContent\":\"<pre>请简述创建控制器的三种方式。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述创建控制器的三种方式。\",\"difficulty\":\"D\",\"answer\":\"<pre>创建控制器的方式有三种，这三种方式的具体实现如下所示。\\n第一种方式：在类名后添加Controller，具体代码如下所示。\\npublic class HomeController{}\\n第二种方式：在类上方添加[Controller]，具体代码如下所示。\\n[Controller]\\npublic class Home { }\\n第三种方式：继承Controller类，具体代码如下所示。\\npublic class Home:Controller { }</pre>\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>创建控制器的方式有三种，具体如下：\\n第一种方式：在类名后添加Controller，具体代码如下所示。\\npublic class HomeController{}\\n第二种方式：在类上方添加[Controller]，具体代码如下所示。\\n[Controller]\\npublic class Home { }\\n第三种方式：继承Controller类，具体代码如下所示。\\npublic class Home:Controller { }</pre>\",\"options\":\"[\\\"public class HomeController{}\\\", \\\"[Controller]public class Home { }\\\", \\\"public class Home:Controller { }\\\", \\\"public class HomeControllers{}\\\"]\",\"optionTransferList\":[\"A、public class HomeController{}\",\"B、[Controller]public class Home { }\",\"C、public class Home:Controller { }\",\"D、public class HomeControllers{}\"],\"id\":\"2c93869d790dcfce017a665341030ea3\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的动手实践\",\"questionContent\":\"<pre>下列选项中，创建控制器的代码编写错误的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，创建控制器的代码编写错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"public class HomeController{}\",\"[Controller]public class Home { }\",\"public class Home:Controller { }\",\"public class HomeControllers{}\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>第三种方式：继承Controller类创建控制器的具体代码如下所示。\\npublic class Home:Controller { }</pre>\",\"options\":\"[\\\"public class HomeController{}\\\", \\\"[Controller]public class Home { }\\\", \\\"public class Home:Controller { }\\\", \\\"public class HomeControllers{}\\\"]\",\"optionTransferList\":[\"A、public class HomeController{}\",\"B、[Controller]public class Home { }\",\"C、public class Home:Controller { }\",\"D、public class HomeControllers{}\"],\"id\":\"2c93869d790dcfce017a665341070ea4\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的动手实践\",\"questionContent\":\"<pre>下列选项中，（）选项是通过继承Controller类的方式来创建控制器的。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）选项是通过继承Controller类的方式来创建控制器的。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"public class HomeController{}\",\"[Controller]public class Home { }\",\"public class Home:Controller { }\",\"public class HomeControllers{}\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>第一种方式：在类名后添加Controller，具体代码如下所示。\\npublic class HomeController{}</pre>\",\"options\":\"[\\\"public class HomeController{}\\\", \\\"[Controller]public class Home { }\\\", \\\"public class Home:Controller { }\\\", \\\"public class HomeControllers{}\\\"]\",\"optionTransferList\":[\"A、public class HomeController{}\",\"B、[Controller]public class Home { }\",\"C、public class Home:Controller { }\",\"D、public class HomeControllers{}\"],\"id\":\"2c93869d790dcfce017a6653410b0ea5\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的动手实践\",\"questionContent\":\"<pre>下列选项中，（）选项是通过在类名后添加Controller的方式创建控制器的。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）选项是通过在类名后添加Controller的方式创建控制器的。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"public class HomeController{}\",\"[Controller]public class Home { }\",\"public class Home:Controller { }\",\"public class HomeControllers{}\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在MVC中传递数据给View的方式有很多种，其中包括用ViewBag属性来传递，该属性的类型是dynamic动态类型。</pre>\",\"options\":\"[\\\"Lambda \\\", \\\"ViewBag\\\", \\\"View\\\", \\\"Bag\\\"]\",\"optionTransferList\":[\"A、Lambda \",\"B、ViewBag\",\"C、View\",\"D、Bag\"],\"id\":\"2c93869d790dcfce017a6653410f0ea6\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）属性用于Model与View之间进行数据传递，该属性的类型是dynamic动态类型。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）属性用于Model与View之间进行数据传递，该属性的类型是dynamic动态类型。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"Lambda \",\"ViewBag\",\"View\",\"Bag\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>Lambda 表达式本质上是一个匿名方法。</pre>\",\"options\":\"[\\\"Lambda \\\", \\\"ViewBag\\\", \\\"三元\\\", \\\"Bag\\\"]\",\"optionTransferList\":[\"A、Lambda \",\"B、ViewBag\",\"C、三元\",\"D、Bag\"],\"id\":\"2c93869d790dcfce017a665341130ea7\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）表达式本质上是一个匿名方法。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）表达式本质上是一个匿名方法。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"Lambda \",\"ViewBag\",\"三元\",\"Bag\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>Lambda表达式的运算符&ldquo;=&gt;&rdquo;读做&ldquo;goes to&rdquo;。</pre>\",\"options\":\"[\\\"&ldquo;=&rdquo; \\\", \\\"&ldquo;&gt;&rdquo;\\\", \\\"&ldquo;=&gt;&gt;&rdquo;\\\", \\\"&ldquo;=&gt;&rdquo;\\\"]\",\"optionTransferList\":[\"A、&ldquo;=&rdquo; \",\"B、&ldquo;&gt;&rdquo;\",\"C、&ldquo;=&gt;&gt;&rdquo;\",\"D、&ldquo;=&gt;&rdquo;\"],\"id\":\"2c93869d790dcfce017a665341170ea8\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）运算符读作&ldquo;goes to&rdquo;。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）运算符读作“goes to”。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"&ldquo;=&rdquo; \",\"&ldquo;&gt;&rdquo;\",\"&ldquo;=&gt;&gt;&rdquo;\",\"&ldquo;=&gt;&rdquo;\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>Lambda表达式的运算符&ldquo;=&gt;&rdquo;读做&ldquo;goes to&rdquo;，并且该运算符与赋值运算符具有相同的优先级。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653411c0ea9\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的拓展学习\",\"questionContent\":\"<pre>Lambda表达式的运算符【】与赋值运算符具有相同的优先级。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Lambda表达式的运算符【】与赋值运算符具有相同的优先级。\",\"difficulty\":\"B\",\"answer\":\"[\\\"&quot;=&gt;&quot;\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665341200eaa\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建控制器的拓展学习\",\"questionContent\":\"<pre>负责协调Model与View之间数据传递的属性是ViewBag，该属性的类型是dynamic动态类型。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"负责协调Model与View之间数据传递的属性是ViewBag，该属性的类型是dynamic动态类型。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>动作（Action）是控制器中的一个方法，用于处理一些相应的操作。</pre>\",\"options\":\"[\\\"模型（Model） \\\", \\\"控制器（Controller）\\\", \\\"视图（View）\\\", \\\"动作（Action）\\\"]\",\"optionTransferList\":[\"A、模型（Model） \",\"B、控制器（Controller）\",\"C、视图（View）\",\"D、动作（Action）\"],\"id\":\"2c93869d790dcfce017a665341240eab\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是控制器中的一个方法，用于处理一些相应的操作。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是控制器中的一个方法，用于处理一些相应的操作。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"模型（Model） \",\"控制器（Controller）\",\"视图（View）\",\"动作（Action）\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>URL为&ldquo;/home/index&rdquo;时，该URL映射的控制器的名称为HomeController ，操作方法的名称为index。</pre>\",\"options\":\"[\\\"HomeController \\\", \\\"index()\\\", \\\"Controller \\\", \\\"homes\\\"]\",\"optionTransferList\":[\"A、HomeController \",\"B、index()\",\"C、Controller \",\"D、homes\"],\"id\":\"2c93869d790dcfce017a665341280eac\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的知识讲解\",\"questionContent\":\"<pre>假设我们有一个URL为&ldquo;/home/index&rdquo;，则下列选项中，（）是该URL映射的控制器名称。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"假设我们有一个URL为“/home/index”，则下列选项中，（）是该URL映射的控制器名称。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"HomeController \",\"index()\",\"Controller \",\"homes\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>URL为&ldquo;/add/home&rdquo;时，该URL映射的控制器的名称为AddController ，操作方法的名称为home。</pre>\",\"options\":\"[\\\"add \\\", \\\"index\\\", \\\"home \\\", \\\"homes\\\"]\",\"optionTransferList\":[\"A、add \",\"B、index\",\"C、home \",\"D、homes\"],\"id\":\"2c93869d790dcfce017a6653412d0ead\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的知识讲解\",\"questionContent\":\"<pre>假设我们有一个URL为&ldquo;/add/home&rdquo;，则下列选项中，（）是该URL映射的操作方法名称。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"假设我们有一个URL为“/add/home”，则下列选项中，（）是该URL映射的操作方法名称。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"add \",\"index\",\"home \",\"homes\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>当Action方法没有任何声明时，默认的HTTP请求方式为GET。</pre>\",\"options\":\"[\\\"GETS \\\", \\\"GET\\\", \\\"POST \\\", \\\"POSTS\\\"]\",\"optionTransferList\":[\"A、GETS \",\"B、GET\",\"C、POST \",\"D、POSTS\"],\"id\":\"2c93869d790dcfce017a665341310eae\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是Action方法默认的HTTP请求方式。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是Action方法默认的HTTP请求方式。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"GETS \",\"GET\",\"POST \",\"POSTS\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>如果想要处理POST请求时，则必须在方法上方标注[HttpPost]。</pre>\",\"options\":\"[\\\"[HttpGet] \\\", \\\"HttpGet\\\", \\\"HttpPost \\\", \\\"[HttpPost]\\\"]\",\"optionTransferList\":[\"A、[HttpGet] \",\"B、HttpGet\",\"C、HttpPost \",\"D、[HttpPost]\"],\"id\":\"2c93869d790dcfce017a665341350eaf\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）标注在方法上方可以让程序处理POST请求。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）标注在方法上方可以让程序处理POST请求。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"[HttpGet] \",\"HttpGet\",\"HttpPost \",\"[HttpPost]\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665341390eb0\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的知识讲解\",\"questionContent\":\"<pre>当Action方法没有任何声明时，默认的HTTP请求方式为【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当Action方法没有任何声明时，默认的HTTP请求方式为【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"GET\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>如果想要处理POST请求时，则必须在方法上方标注[HttpPost]。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653413e0eb1\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的知识讲解\",\"questionContent\":\"<pre>如果想要处理POST请求时，则必须在方法上方标注【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"如果想要处理POST请求时，则必须在方法上方标注【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"[HttpPost]\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665341420eb2\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的知识讲解\",\"questionContent\":\"<pre>作为控制器动作来使用的方法不能重载，控制器动作不能为静态方法。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"作为控制器动作来使用的方法不能重载，控制器动作不能为静态方法。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>定义一个名为Index的动作方法的具体代码如下：\\npublic string Index(string name){\\n       return &quot;Hello &quot;+name;\\n}</pre>\",\"options\":\"[\\\"Index(string name){} \\\", \\\"public Index(string name){}\\\", \\\"public string Index(string name){} \\\", \\\"public string Index(string name){return &quot;Hello &quot;+name;}\\\"]\",\"optionTransferList\":[\"A、Index(string name){} \",\"B、public Index(string name){}\",\"C、public string Index(string name){} \",\"D、public string Index(string name){return &quot;Hello &quot;+name;}\"],\"id\":\"2c93869d790dcfce017a665341460eb3\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的动手实践\",\"questionContent\":\"<pre>下列选项中，定义的动作方法正确的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，定义的动作方法正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"Index(string name){} \",\"public Index(string name){}\",\"public string Index(string name){} \",\"public string Index(string name){return &quot;Hello &quot;+name;}\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>由于Index()方法没有特殊标记请求的类型，所以默认为HTTP的GET请求。</pre>\",\"options\":\"[\\\"GETS \\\", \\\"GET\\\", \\\"POST \\\", \\\"POSTS\\\"]\",\"optionTransferList\":[\"A、GETS \",\"B、GET\",\"C、POST \",\"D、POSTS\"],\"id\":\"2c93869d790dcfce017a6653414a0eb4\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的动手实践\",\"questionContent\":\"<pre>请认真阅读下面的代码，\\npublic string Index(string name){\\n      return &quot;Hello &quot;+name;\\n}\\n上述代码中，Index()方法的HTTP请求方式是（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请认真阅读下面的代码，\\npublic string Index(string name){\\n      return \\\"Hello \\\"+name;\\n}\\n上述代码中，Index()方法的HTTP请求方式是（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"GETS \",\"GET\",\"POST \",\"POSTS\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>当控制器中的方法没有特殊标记HTTP请求的类型时，该类型默认为GET类型的请求。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653414e0eb5\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的动手实践\",\"questionContent\":\"<pre>当控制器中的方法没有特殊标记HTTP请求的类型时，该类型默认为POST类型的请求。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当控制器中的方法没有特殊标记HTTP请求的类型时，该类型默认为POST类型的请求。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665341530eb6\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"定义动作方法的拓展学习\",\"questionContent\":\"<pre>如果Index()方法上方没有添加任何信息，则程序默认使用的是HTTP请求的GET方式。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"如果Index()方法上方没有添加任何信息，则程序默认使用的是HTTP请求的GET方式。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>过滤器是围绕操作方法运行的一段代码，可用于修改和扩展方法本身的行为。</pre>\",\"options\":\"[\\\"过滤器 \\\", \\\"模型\\\", \\\"视图 \\\", \\\"动作\\\"]\",\"optionTransferList\":[\"A、过滤器 \",\"B、模型\",\"C、视图 \",\"D、动作\"],\"id\":\"2c93869d790dcfce017a665341570eb7\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是围绕操作方法运行的一段代码，可用于修改和扩展方法本身的行为。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是围绕操作方法运行的一段代码，可用于修改和扩展方法本身的行为。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"过滤器 \",\"模型\",\"视图 \",\"动作\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>授权过滤器（AuthorizationFilter）首先运行，在任何其它过滤器或动作方法之前运行。</pre>\",\"options\":\"[\\\"在动作方法之前或之后运行。 \\\", \\\"在动作结果被执行之前或之后运行。\\\", \\\"首先运行，在任何其它过滤器或动作方法之前运行。 \\\", \\\"只在另一个过滤器、动作方法、动作结果弹出异常时运行。\\\"]\",\"optionTransferList\":[\"A、在动作方法之前或之后运行。 \",\"B、在动作结果被执行之前或之后运行。\",\"C、首先运行，在任何其它过滤器或动作方法之前运行。 \",\"D、只在另一个过滤器、动作方法、动作结果弹出异常时运行。\"],\"id\":\"2c93869d790dcfce017a6653415b0eb8\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>下列关于过滤器AuthorizationFilter的描述正确的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于过滤器AuthorizationFilter的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"在动作方法之前或之后运行。 \",\"在动作结果被执行之前或之后运行。\",\"首先运行，在任何其它过滤器或动作方法之前运行。 \",\"只在另一个过滤器、动作方法、动作结果弹出异常时运行。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>无</pre>\",\"options\":\"[\\\"在动作方法之前或之后运行。 \\\", \\\"动作过滤器的属性提供了2个事件，分别是OnActionExecuting事件与OnActionExecuted事件。\\\", \\\"首先运行，在任何其它过滤器或动作方法之前运行。 \\\", \\\"动作过滤器在实现IActionFilter接口时，必须要实现OnActionExecuting事件与OnActionExecuted事件。\\\"]\",\"optionTransferList\":[\"A、在动作方法之前或之后运行。 \",\"B、动作过滤器的属性提供了2个事件，分别是OnActionExecuting事件与OnActionExecuted事件。\",\"C、首先运行，在任何其它过滤器或动作方法之前运行。 \",\"D、动作过滤器在实现IActionFilter接口时，必须要实现OnActionExecuting事件与OnActionExecuted事件。\"],\"id\":\"2c93869d790dcfce017a6653415f0eb9\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>下列关于动作过滤器（ActionFilter）的描述错误的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于动作过滤器（ActionFilter）的描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"在动作方法之前或之后运行。 \",\"动作过滤器的属性提供了2个事件，分别是OnActionExecuting事件与OnActionExecuted事件。\",\"首先运行，在任何其它过滤器或动作方法之前运行。 \",\"动作过滤器在实现IActionFilter接口时，必须要实现OnActionExecuting事件与OnActionExecuted事件。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>使用异常过滤器后，我们可以不用在Action方法中通过try-catch-finally代码块来捕获异常，而这个捕获异常的工作可以交给HandleError来做。</pre>\",\"options\":\"[\\\"异常 \\\", \\\"动作\\\", \\\"授权 \\\", \\\"结果\\\"]\",\"optionTransferList\":[\"A、异常 \",\"B、动作\",\"C、授权 \",\"D、结果\"],\"id\":\"2c93869d790dcfce017a665341630eba\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>在程序中使用以下（）过滤器后，Action方法中的捕获异常工作可以交给HandleError来做。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中使用以下（）过滤器后，Action方法中的捕获异常工作可以交给HandleError来做。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"异常 \",\"动作\",\"授权 \",\"结果\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>MVC中的四种过滤器的执行顺序是：授权过滤器&rarr;动作过滤器&rarr;结果过滤器&rarr;异常过滤器。</pre>\",\"options\":\"[\\\"授权过滤器&rarr;异常过滤器&rarr;结果过滤器&rarr;动作过滤器 \\\", \\\"授权过滤器&rarr;动作过滤器&rarr;结果过滤器&rarr;异常过滤器\\\", \\\"授权过滤器&rarr;动作过滤器&rarr;异常过滤器&rarr;结果过滤器 \\\", \\\"授权过滤器&rarr;结果过滤器&rarr;动作过滤器&rarr;异常过滤器\\\"]\",\"optionTransferList\":[\"A、授权过滤器&rarr;异常过滤器&rarr;结果过滤器&rarr;动作过滤器 \",\"B、授权过滤器&rarr;动作过滤器&rarr;结果过滤器&rarr;异常过滤器\",\"C、授权过滤器&rarr;动作过滤器&rarr;异常过滤器&rarr;结果过滤器 \",\"D、授权过滤器&rarr;结果过滤器&rarr;动作过滤器&rarr;异常过滤器\"],\"id\":\"2c93869d790dcfce017a665341680ebb\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>下列关于MVC模式中的四种过滤器的执行顺序正确的是（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于MVC模式中的四种过滤器的执行顺序正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"授权过滤器&rarr;异常过滤器&rarr;结果过滤器&rarr;动作过滤器 \",\"授权过滤器&rarr;动作过滤器&rarr;结果过滤器&rarr;异常过滤器\",\"授权过滤器&rarr;动作过滤器&rarr;异常过滤器&rarr;结果过滤器 \",\"授权过滤器&rarr;结果过滤器&rarr;动作过滤器&rarr;异常过滤器\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>Action的过滤器分为四种不同类型，分别是授权过滤器（AuthorizationFilter）、动作过滤器（ActionFilter）、结果过滤器（ResultFilter）、异常过滤器（ExceptionFilter）。</pre>\",\"options\":\"[\\\"授权过滤器 \\\", \\\"动作过滤器\\\", \\\"结果过滤器 \\\", \\\"异常过滤器\\\"]\",\"optionTransferList\":[\"A、授权过滤器 \",\"B、动作过滤器\",\"C、结果过滤器 \",\"D、异常过滤器\"],\"id\":\"2c93869d790dcfce017a6653416c0ebc\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）属于过滤器的类型。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）属于过滤器的类型。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"授权过滤器 \",\"动作过滤器\",\"结果过滤器 \",\"异常过滤器\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":\"[\\\"可通过创建一个类实现IActionFilter接口来定义自定义过滤器 \\\", \\\"可通过创建一个类继承Attribute类，并实现IActionFilter接口来定义自定义过滤器\\\", \\\"自定义过滤器可以不实现微软提供的接口。 \\\", \\\"自定义过滤器需要实现微软提供的接口，从而实现指定的业务需求。\\\"]\",\"optionTransferList\":[\"A、可通过创建一个类实现IActionFilter接口来定义自定义过滤器 \",\"B、可通过创建一个类继承Attribute类，并实现IActionFilter接口来定义自定义过滤器\",\"C、自定义过滤器可以不实现微软提供的接口。 \",\"D、自定义过滤器需要实现微软提供的接口，从而实现指定的业务需求。\"],\"id\":\"2c93869d790dcfce017a665341700ebd\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>下列关于自定义过滤器的描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于自定义过滤器的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"可通过创建一个类实现IActionFilter接口来定义自定义过滤器 \",\"可通过创建一个类继承Attribute类，并实现IActionFilter接口来定义自定义过滤器\",\"自定义过滤器可以不实现微软提供的接口。 \",\"自定义过滤器需要实现微软提供的接口，从而实现指定的业务需求。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>授权过滤器是在运行Controller与Action之前最早运行的过滤器。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665341740ebe\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>【】是在运行Controller与Action之前最早运行的过滤器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是在运行Controller与Action之前最早运行的过滤器。\",\"difficulty\":\"B\",\"answer\":\"[\\\"授权过滤器\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>动作过滤器在实现IActionFilter接口时，必须要实现OnActionExecuting事件与OnActionExecuted事件。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665341780ebf\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>【】在实现IActionFilter接口时，必须要实现OnActionExecuting事件与OnActionExecuted事件。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】在实现IActionFilter接口时，必须要实现OnActionExecuting事件与OnActionExecuted事件。\",\"difficulty\":\"B\",\"answer\":\"[\\\"动作过滤器\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在动作结果被执行之前或之后运行的过滤器是结果过滤器。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653417c0ec0\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>在动作结果被执行之前或之后运行的过滤器是【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在动作结果被执行之前或之后运行的过滤器是【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"结果过滤器\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>过滤器是围绕操作方法运行的一段代码，可用于修改和扩展方法本身的行为。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665341800ec1\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>【】是围绕操作方法运行的一段代码，可用于修改和扩展方法本身的行为。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是围绕操作方法运行的一段代码，可用于修改和扩展方法本身的行为。\",\"difficulty\":\"B\",\"answer\":\"[\\\"过滤器\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665341840ec2\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>MVC模式中的四种过滤器的执行顺序是：授权过滤器&rarr;动作过滤器&rarr;结果过滤器&rarr;异常过滤器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"MVC模式中的四种过滤器的执行顺序是：授权过滤器→动作过滤器→结果过滤器→异常过滤器。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>Action的过滤器分为四种不同类型，分别是授权过滤器（AuthorizationFilter）、动作过滤器（ActionFilter）、结果过滤器（ResultFilter）、异常过滤器（ExceptionFilter）。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665342290ec3\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>Action的过滤器类型分别是授权过滤器、动作过滤器、结果过滤器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Action的过滤器类型分别是授权过滤器、动作过滤器、结果过滤器。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653422d0ec4\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>通过Attribute特性可以标识到具体想要过滤的方法或控制器上，从而实现局部过滤。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"通过Attribute特性可以标识到具体想要过滤的方法或控制器上，从而实现局部过滤。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665342310ec5\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>Order值较低的过滤器会在Order值较高的过滤器前面执行。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Order值较低的过滤器会在Order值较高的过滤器前面执行。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665342350ec6\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>请简述什么是过滤器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述什么是过滤器。\",\"difficulty\":\"D\",\"answer\":\"<pre>过滤器的简单介绍如下：\\n过滤器是围绕操作方法运行的一段代码，可用于修改和扩展方法本身的行为。通常在项目中我们会遇到Action（操作方法）执行前或结束时，需要去执行日志记录或错误处理等功能，也会遇到在访问过滤器中的Index()方法之前，我们需要做一个权限认证，认证某个用户是否有权限访问Index()方法。此时，ASP.NET MVC中提供的过滤器在很大程度上方便了.NET程序的开发。</pre>\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653423a0ec7\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>请简述Action过滤器的四种类型。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述Action过滤器的四种类型。\",\"difficulty\":\"D\",\"answer\":\"<pre>Action过滤器的四种类型的具体介绍如下：\\n（1） 授权过滤器（AuthorizationFilter）\\nAuthorizationFilter俗称认证和授权过滤器，授权过滤器是在运行Controller与Action之前最早运行的过滤器，可用于在Action运行之前做一些额外的判断。\\n（2） 动作过滤器（ActionFilter）\\n动作过滤器的属性提供了2个事件，分别是OnActionExecuting事件与OnActionExecuted事件，这2个事件会在Action函数的前后运行。\\n（3） 结果过滤器（ResultFilter）\\n结果过滤器（ResultFilter）提供了两个事件在视图的前后运行，分别是OnResultExecuting与OnResultExecuted事件。\\n（4） 异常过滤器（ExceptionFilter）\\nMVC提供了异常过滤器来捕获程序中的异常。使用异常过滤器后，我们可以不用在Action方法中通过try-catch-finally代码块来捕获异常，而这个捕获异常的工作可以交给HandleError来做，这个异常过滤器可以应用在控制器与操作方法中。</pre>\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653423e0ec8\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的知识讲解\",\"questionContent\":\"<pre>请简述如何通过两种方式来自定义一个动作过滤器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述如何通过两种方式来自定义一个动作过滤器。\",\"difficulty\":\"D\",\"answer\":\"<pre>通过两种方式来自定义一个动作过滤器，具体介绍如下：\\n（1）实现IActionFilter接口\\n在ASP.NET Core MVC项目的Controllers文件夹中创建一个类ActionFilter，该类实现了IActionFilter接口。具体代码如下：\\npublic class ActionFilter : IActionFilter{\\n   public void OnActionExecuting(ActionExecutingContext context){\\n       Console.WriteLine(&quot;Action执行之前&quot;);\\n   }\\n   public void OnActionExecuted(ActionExecutedContext context){\\n       Console.WriteLine(&quot;Action执行之后&quot;);\\n   }\\n}\\n（2）继承Attribute类，并实现IActionFilter接口\\n在ASP.NET Core MVC项目的Controllers文件夹中创建一个类MyActionFilter，该类继承Attribute类，并实现IActionFilter接口。具体代码如下：\\npublic class MyActionFilter : Attribute, IActionFilter{\\n    public void OnActionExecuting(ActionExecutingContext context){\\n        Console.WriteLine(&quot;Action执行之前&quot;);\\n    }\\n    public void OnActionExecuted(ActionExecutedContext context){\\n        Console.WriteLine(&quot;Action执行之后&quot;);\\n    }\\n}</pre>\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>OnActionExecuting()方法是控制器中Action方法执行之前执行的方法。</pre>\",\"options\":\"[\\\"Attribute() \\\", \\\"OnActionExecuting()\\\", \\\"OnActionExecuted() \\\", \\\"ContentResult()\\\"]\",\"optionTransferList\":[\"A、Attribute() \",\"B、OnActionExecuting()\",\"C、OnActionExecuted() \",\"D、ContentResult()\"],\"id\":\"2c93869d790dcfce017a665342420ec9\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的动手实践\",\"questionContent\":\"<pre>下列选项中，（）方法是控制器中Action方法执行之前执行的方法。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法是控制器中Action方法执行之前执行的方法。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"Attribute() \",\"OnActionExecuting()\",\"OnActionExecuted() \",\"ContentResult()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>OnActionExecuted()方法是控制器中Action方法执行之后执行的方法。</pre>\",\"options\":\"[\\\"Attribute() \\\", \\\"OnActionExecuting()\\\", \\\"OnActionExecuted() \\\", \\\"ContentResult()\\\"]\",\"optionTransferList\":[\"A、Attribute() \",\"B、OnActionExecuting()\",\"C、OnActionExecuted() \",\"D、ContentResult()\"],\"id\":\"2c93869d790dcfce017a665342460eca\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的动手实践\",\"questionContent\":\"<pre>下列选项中，（）方法是控制器中Action方法执行之后执行的方法。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法是控制器中Action方法执行之后执行的方法。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"Attribute() \",\"OnActionExecuting()\",\"OnActionExecuted() \",\"ContentResult()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>只要在过滤器的方法中返回ContentResult，程序就会短路，后面的所有逻辑都不会再处理。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653424a0ecb\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的动手实践\",\"questionContent\":\"<pre>只要在过滤器的方法中返回【】，程序就会短路，程序后面的所有逻辑都不会再处理。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"只要在过滤器的方法中返回【】，程序就会短路，程序后面的所有逻辑都不会再处理。\",\"difficulty\":\"B\",\"answer\":\"[\\\"ContentResult\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>OnActionExecuting()方法是控制器中Action方法执行之前执行的方法。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653424f0ecc\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的动手实践\",\"questionContent\":\"<pre>OnActionExecuting()方法是控制器中Action方法执行之后执行的方法。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"OnActionExecuting()方法是控制器中Action方法执行之后执行的方法。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>过滤器有三种不同级别的作用域，分别是在操作方法上方添加过滤器，在控制器上方添加过滤器，在Startup.cs文件中添加过滤器。</pre>\",\"options\":\"[\\\"在操作方法上方添加过滤器 \\\", \\\"在控制器上方添加过滤器\\\", \\\"在Startup.cs文件中添加过滤器 \\\", \\\"在方法中添加过滤器\\\"]\",\"optionTransferList\":[\"A、在操作方法上方添加过滤器 \",\"B、在控制器上方添加过滤器\",\"C、在Startup.cs文件中添加过滤器 \",\"D、在方法中添加过滤器\"],\"id\":\"2c93869d790dcfce017a665342530ecd\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的拓展学习\",\"questionContent\":\"<pre>下列关于不同级别作用域的过滤器描述错误的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于不同级别作用域的过滤器描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"在操作方法上方添加过滤器 \",\"在控制器上方添加过滤器\",\"在Startup.cs文件中添加过滤器 \",\"在方法中添加过滤器\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>过滤器执行的默认顺序由作用域确定，也就是全局过滤器优先于控制器过滤器，控制器过滤器优先于Action方法过滤器。</pre>\",\"options\":\"[\\\"全局过滤器优先于控制器过滤器，控制器过滤器优先于方法过滤器 \\\", \\\"方法过滤器优先于全局过滤器\\\", \\\"方法过滤器优先于控制器过滤器 \\\", \\\"控制器过滤器优先于全局过滤器\\\"]\",\"optionTransferList\":[\"A、全局过滤器优先于控制器过滤器，控制器过滤器优先于方法过滤器 \",\"B、方法过滤器优先于全局过滤器\",\"C、方法过滤器优先于控制器过滤器 \",\"D、控制器过滤器优先于全局过滤器\"],\"id\":\"2c93869d790dcfce017a665342570ece\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的拓展学习\",\"questionContent\":\"<pre>下列关于全局过滤器、控制器过滤器与方法过滤器的默认执行顺序描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于全局过滤器、控制器过滤器与方法过滤器的默认执行顺序描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"全局过滤器优先于控制器过滤器，控制器过滤器优先于方法过滤器 \",\"方法过滤器优先于全局过滤器\",\"方法过滤器优先于控制器过滤器 \",\"控制器过滤器优先于全局过滤器\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>在Startup.cs文件中添加的过滤器属于全局过滤器。</pre>\",\"options\":\"[\\\"控制器 \\\", \\\"方法\\\", \\\"局部 \\\", \\\"全局\\\"]\",\"optionTransferList\":[\"A、控制器 \",\"B、方法\",\"C、局部 \",\"D、全局\"],\"id\":\"2c93869d790dcfce017a6653425c0ecf\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的拓展学习\",\"questionContent\":\"<pre>在Startup.cs文件中添加的过滤器属于以下（）过滤器。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在Startup.cs文件中添加的过滤器属于以下（）过滤器。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"控制器 \",\"方法\",\"局部 \",\"全局\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>全局过滤器将作用于整个MVC应用程序中的每一个操作。</pre>\",\"options\":\"[\\\"控制器 \\\", \\\"全局\\\", \\\"局部 \\\", \\\"方法\\\"]\",\"optionTransferList\":[\"A、控制器 \",\"B、全局\",\"C、局部 \",\"D、方法\"],\"id\":\"2c93869d790dcfce017a665342600ed0\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）过滤器作用于整个MVC应用程序中的每一个操作。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）过滤器作用于整个MVC应用程序中的每一个操作。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"控制器 \",\"全局\",\"局部 \",\"方法\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>当一个控制器中存在多个过滤器时，过滤器执行的默认顺序由作用域确定。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665342640ed1\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的拓展学习\",\"questionContent\":\"<pre>当一个控制器中存在多个过滤器时，过滤器执行的默认顺序由【】确定。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当一个控制器中存在多个过滤器时，过滤器执行的默认顺序由【】确定。\",\"difficulty\":\"B\",\"answer\":\"[\\\"作用域\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在Startup.cs文件中添加的过滤器属于全局过滤器。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665342690ed2\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的拓展学习\",\"questionContent\":\"<pre>在【】文件中添加的过滤器属于全局过滤器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在【】文件中添加的过滤器属于全局过滤器。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Startup.cs\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>当一个控制器中存在多个过滤器时，过滤器执行的默认顺序由作用域确定，也就是全局过滤器优先于控制器过滤器，控制器过滤器优先于Action方法过滤器。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653426d0ed3\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"设置过滤器的拓展学习\",\"questionContent\":\"<pre>当一个控制器中存在多个过滤器时，过滤器执行的默认顺序为全局过滤器&rarr;控制器过滤器&rarr;Action方法过滤器。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当一个控制器中存在多个过滤器时，过滤器执行的默认顺序为全局过滤器→控制器过滤器→Action方法过滤器。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>ActionResult是控制器方法执行后返回的结果类型。</pre>\",\"options\":\"[\\\"ActionResult \\\", \\\"ContentResult\\\", \\\"FileResult \\\", \\\"ViewResult\\\"]\",\"optionTransferList\":[\"A、ActionResult \",\"B、ContentResult\",\"C、FileResult \",\"D、ViewResult\"],\"id\":\"2c93869d790dcfce017a665342720ed4\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"动作执行结果的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）控制器方法执行后返回的结果类型。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）控制器方法执行后返回的结果类型。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"ActionResult \",\"ContentResult\",\"FileResult \",\"ViewResult\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>JsonResult类用于返回JSON格式的数据。</pre>\",\"options\":\"[\\\"ViewResult类用于返回一个视图 \\\", \\\"RedirectResult类用于重定向URL\\\", \\\"ContentResult类用于返回string类型的字符串 \\\", \\\"JsonResult类用于返回int类型的数据\\\"]\",\"optionTransferList\":[\"A、ViewResult类用于返回一个视图 \",\"B、RedirectResult类用于重定向URL\",\"C、ContentResult类用于返回string类型的字符串 \",\"D、JsonResult类用于返回int类型的数据\"],\"id\":\"2c93869d790dcfce017a665342760ed5\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"动作执行结果的知识讲解\",\"questionContent\":\"<pre>下列关于ActionResult类的派生类的描述错误的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于ActionResult类的派生类的描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"ViewResult类用于返回一个视图 \",\"RedirectResult类用于重定向URL\",\"ContentResult类用于返回string类型的字符串 \",\"JsonResult类用于返回int类型的数据\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>ContentResult类用于返回string类型的字符串</pre>\",\"options\":\"[\\\"用于返回string类型的字符串 \\\", \\\"用于返回JSON格式的数据\\\", \\\"用于返回一个Object类型的数据\\\", \\\"用于返回JavaScript类型的字符串\\\"]\",\"optionTransferList\":[\"A、用于返回string类型的字符串 \",\"B、用于返回JSON格式的数据\",\"C、用于返回一个Object类型的数据\",\"D、用于返回JavaScript类型的字符串\"],\"id\":\"2c93869d790dcfce017a6653427a0ed6\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"动作执行结果的知识讲解\",\"questionContent\":\"<pre>下列关于ContentResult类的描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于ContentResult类的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"用于返回string类型的字符串 \",\"用于返回JSON格式的数据\",\"用于返回一个Object类型的数据\",\"用于返回JavaScript类型的字符串\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6653427f0ed7\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"动作执行结果的知识讲解\",\"questionContent\":\"<pre>如果控制器中的方法返回的是非ActionResult类型，控制器会将结果转换为一个ContentResult类型的数据信息。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"如果控制器中的方法返回的是非ActionResult类型，控制器会将结果转换为一个ContentResult类型的数据信息。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>ActionResult是控制器中的方法执行后返回的结果类型。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665342830ed8\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"动作执行结果的知识讲解\",\"questionContent\":\"<pre>Result是控制器中的方法执行后返回的结果类型。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Result是控制器中的方法执行后返回的结果类型。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665342870ed9\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"动作执行结果的知识讲解\",\"questionContent\":\"<pre>请简述动作执行结果ActionResult类。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述动作执行结果ActionResult类。\",\"difficulty\":\"D\",\"answer\":\"<pre>ActionResult类的简单介绍如下：\\nActionResult是控制器方法执行后返回的结果类型，控制器方法可以返回一个直接或间接继承抽象类ActionResult的类型，该结果类型是一个描述动作结果的对象，通过该对象可以实现显示一个视图、重定向到不同URL以及不同类型的数据。</pre>\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>无</pre>\",\"options\":\"[\\\"public ContentResult Index(){            return Content(&quot;发送一条消息&quot;);        } \\\", \\\"public  Index(){            return Content(&quot;发送一条消息&quot;);        }\\\", \\\"public ContentResult Index(){            return &quot;发送一条消息&quot;;        }\\\", \\\"public Result Index(){            return &quot;发送一条消息&quot;;        }\\\"]\",\"optionTransferList\":[\"A、public ContentResult Index(){            return Content(&quot;发送一条消息&quot;);        } \",\"B、public  Index(){            return Content(&quot;发送一条消息&quot;);        }\",\"C、public ContentResult Index(){            return &quot;发送一条消息&quot;;        }\",\"D、public Result Index(){            return &quot;发送一条消息&quot;;        }\"],\"id\":\"2c93869d790dcfce017a6653428b0eda\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"动作执行结果的动手实践\",\"questionContent\":\"<pre>下列关于定义一个返回值为ContentResult类型的方法正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于定义一个返回值为ContentResult类型的方法正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"public ContentResult Index(){            return Content(&quot;发送一条消息&quot;);        } \",\"public  Index(){            return Content(&quot;发送一条消息&quot;);        }\",\"public ContentResult Index(){            return &quot;发送一条消息&quot;;        }\",\"public Result Index(){            return &quot;发送一条消息&quot;;        }\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\",\"2\"],\"answerTransfer\":null,\"solution\":\"<pre>题中Index()方法的返回值类型为ContentResult，返回值为一个文本信息。</pre>\",\"options\":\"[\\\"返回值类型为Content\\\", \\\"返回值类型为ContentResult\\\", \\\"返回值为一个文本信息\\\", \\\"返回值是一个JSON格式的数据\\\"]\",\"optionTransferList\":[\"A、返回值类型为Content\",\"B、返回值类型为ContentResult\",\"C、返回值为一个文本信息\",\"D、返回值是一个JSON格式的数据\"],\"id\":\"2c93869d790dcfce017a6653428f0edb\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"动作执行结果的动手实践\",\"questionContent\":\"<pre>假设定义一个方法如下所示，\\n public ContentResult Index(){\\n        return Content(&quot;这条消息来自HomeController&quot;);\\n  }\\n关于上述代码描述正确的是（）。</pre>\",\"answerTransferList\":[\"B\",\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"假设定义一个方法如下所示，\\n public ContentResult Index(){\\n        return Content(\\\"这条消息来自HomeController\\\");\\n  }\\n关于上述代码描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"1\\\", \\\"2\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":[\"返回值类型为Content\",\"返回值类型为ContentResult\",\"返回值为一个文本信息\",\"返回值是一个JSON格式的数据\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>ASP.NET MVC给我们提供了一个非常强大的Response（响应）处理类是ActionResult。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665342940edc\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"动作执行结果的拓展学习\",\"questionContent\":\"<pre>ASP.NET MVC给我们提供了一个非常强大的Response（响应）处理类是【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ASP.NET MVC给我们提供了一个非常强大的Response（响应）处理类是【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"ActionResult\\\"]\",\"createTime\":\"2021-07-02 16:25:53\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>路由的中间件可以在管道中的下一个组件前后执行对应的工作。</pre>\",\"options\":\"[\\\"路由中间件是一种装配到应用管道用于处理请求和响应的软件。\\\", \\\"路由中间件中的每个组件可以选择是否将请求传递到管道中的下一个组件。\\\", \\\"路由的中间件可以在管道中的下一个组件前后执行对应的工作。\\\", \\\"路由的中间件可以在管道中的下一个组件中执行对应的工作。\\\"]\",\"optionTransferList\":[\"A、路由中间件是一种装配到应用管道用于处理请求和响应的软件。\",\"B、路由中间件中的每个组件可以选择是否将请求传递到管道中的下一个组件。\",\"C、路由的中间件可以在管道中的下一个组件前后执行对应的工作。\",\"D、路由的中间件可以在管道中的下一个组件中执行对应的工作。\"],\"id\":\"2c93869d790dcfce017a665241ce0e60\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的知识讲解\",\"questionContent\":\"<pre>下列关于路由中间件的说法错误的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于路由中间件的说法错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"路由中间件是一种装配到应用管道用于处理请求和响应的软件。\",\"路由中间件中的每个组件可以选择是否将请求传递到管道中的下一个组件。\",\"路由的中间件可以在管道中的下一个组件前后执行对应的工作。\",\"路由的中间件可以在管道中的下一个组件中执行对应的工作。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>1.通过Run()方法注册中间件时，该方法会直接返回一个Response响应。\\n2.通过Run()方法注册中间件的代码需要在Configure()方法中编写。\\n3.程序中调用了通过Run()方法注册的中间件时，后续的中间件不会继续被执行。</pre>\",\"options\":\"[\\\"通过Run()方法注册中间件时，该方法会直接返回一个Response响应。\\\", \\\"通过Run()方法注册中间件的代码需要在Configures()方法中编写。\\\", \\\"程序中调用了通过Run()方法注册的中间件时，后续的中间件也会继续被执行。\\\", \\\"通过Run()方法注册中间件时，该方法会直接返回一个void。\\\"]\",\"optionTransferList\":[\"A、通过Run()方法注册中间件时，该方法会直接返回一个Response响应。\",\"B、通过Run()方法注册中间件的代码需要在Configures()方法中编写。\",\"C、程序中调用了通过Run()方法注册的中间件时，后续的中间件也会继续被执行。\",\"D、通过Run()方法注册中间件时，该方法会直接返回一个void。\"],\"id\":\"2c93869d790dcfce017a665241d20e61\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的知识讲解\",\"questionContent\":\"<pre>下列关于通过Run()方法注册中间件的说法正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于通过Run()方法注册中间件的说法正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"通过Run()方法注册中间件时，该方法会直接返回一个Response响应。\",\"通过Run()方法注册中间件的代码需要在Configures()方法中编写。\",\"程序中调用了通过Run()方法注册的中间件时，后续的中间件也会继续被执行。\",\"通过Run()方法注册中间件时，该方法会直接返回一个void。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>ASP.NET Core项目中中间件的注册方式有3种，分别是通过Run()方法注册中间件、通过Use()方法注册中间件、通过Map()方法注册中间件。</pre>\",\"options\":\"[\\\"通过Run()方法注册中间件\\\", \\\"通过Maps()方法注册中间件\\\", \\\"通过Use()方法注册中间件\\\", \\\"通过Map()方法注册中间件\\\"]\",\"optionTransferList\":[\"A、通过Run()方法注册中间件\",\"B、通过Maps()方法注册中间件\",\"C、通过Use()方法注册中间件\",\"D、通过Map()方法注册中间件\"],\"id\":\"2c93869d790dcfce017a665241d60e62\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的知识讲解\",\"questionContent\":\"<pre>下列关于注册中间件的3种方式说法正确的是（）。</pre>\",\"answerTransferList\":[\"A\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于注册中间件的3种方式说法正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"通过Run()方法注册中间件\",\"通过Maps()方法注册中间件\",\"通过Use()方法注册中间件\",\"通过Map()方法注册中间件\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>通过Run()方法注册中间件时，该方法会直接返回一个Response响应。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665241da0e63\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的知识讲解\",\"questionContent\":\"<pre>在程序中，通过【】方法注册中间件时，该方法会直接返回一个Response响应。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中，通过【】方法注册中间件时，该方法会直接返回一个Response响应。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Run()\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665241de0e64\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的知识讲解\",\"questionContent\":\"<pre>在程序中，通过Map()方法注册中间件时，它会将请求重新指定到其他中间件路径上。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中，通过Map()方法注册中间件时，它会将请求重新指定到其他中间件路径上。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665241e20e65\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的知识讲解\",\"questionContent\":\"<pre>请简述注册中间件的3种方式。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述注册中间件的3种方式。\",\"difficulty\":\"D\",\"answer\":\"<pre>中间件的注册方式有以下3种：\\n第1种方式：通过Run()方法注册中间件\\n通过Run()方法注册中间件时，该方法会直接返回一个Response响应，此时后续的中间件将不会被执行。\\n第2种方式：通过Use()方法注册中间件\\n通过Use()方法注册中间件时，该方法会对请求做一些工作或处理，例如在请求上添加一些上下文数据。Use()方法也可以不对请求做任何处理，直接将请求交给下一个中间件。\\n第3种方式：通过Map()方法注册中间件\\n通过Map()方法注册中间件时，它会将请求重新指定到其他中间件路径上。</pre>\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>在Startup.cs文件的Configure()方法中注册中间件。</pre>\",\"options\":\"[\\\"Configure()\\\", \\\"Run()\\\", \\\"Use()\\\", \\\"Map()\\\"]\",\"optionTransferList\":[\"A、Configure()\",\"B、Run()\",\"C、Use()\",\"D、Map()\"],\"id\":\"2c93869d790dcfce017a665241e60e66\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的动手实践\",\"questionContent\":\"<pre>下列选项中，（）方法中可以注册中间件。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法中可以注册中间件。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"Configure()\",\"Run()\",\"Use()\",\"Map()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>ASP.NET Core项目中中间件的注册方式有3种，分别是通过Run()方法注册中间件、通过Use()方法注册中间件、通过Map()方法注册中间件。</pre>\",\"options\":\"[\\\"Configure()\\\", \\\"Run()\\\", \\\"Use()\\\", \\\"Map()\\\"]\",\"optionTransferList\":[\"A、Configure()\",\"B、Run()\",\"C、Use()\",\"D、Map()\"],\"id\":\"2c93869d790dcfce017a665241ea0e67\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的动手实践\",\"questionContent\":\"<pre>下列选项中，哪些方法可以注册中间件。（）</pre>\",\"answerTransferList\":[\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪些方法可以注册中间件。（）\",\"difficulty\":\"A\",\"answer\":\"[\\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"Configure()\",\"Run()\",\"Use()\",\"Map()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>通过Run()方法注册中间件时，该方法会直接返回一个Response响应，此时后续的中间件将不会被执行。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665241ee0e68\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的动手实践\",\"questionContent\":\"<pre>在程序中调用通过【】方法注册的中间件时，程序后面的其他中间件将不会被执行。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中调用通过【】方法注册的中间件时，程序后面的其他中间件将不会被执行。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Run()\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665241f20e69\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的动手实践\",\"questionContent\":\"<pre>Use()方法也可以不对请求做任何处理，直接将请求交给下一个中间件。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Use()方法也可以不对请求做任何处理，直接将请求交给下一个中间件。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>UseExceptionHandler是异常处理中间件，当应用在生产环境中运行时，捕获UseHsts中间件中引发的异常。</pre>\",\"options\":\"[\\\"UseHsts\\\", \\\"UseExceptionHandler\\\", \\\"UseHttpsRedirection\\\", \\\"UseStaticFiles\\\"]\",\"optionTransferList\":[\"A、UseHsts\",\"B、UseExceptionHandler\",\"C、UseHttpsRedirection\",\"D、UseStaticFiles\"],\"id\":\"2c93869d790dcfce017a665241f60e6a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的拓展学习\",\"questionContent\":\"<pre>下列选项中，哪个中间件是异常处理中间件，当应用在生产环境中运行时，捕获UseHsts中间件中引发的异常。（）</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个中间件是异常处理中间件，当应用在生产环境中运行时，捕获UseHsts中间件中引发的异常。（）\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"UseHsts\",\"UseExceptionHandler\",\"UseHttpsRedirection\",\"UseStaticFiles\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>UseRouting是路由中间件，用于路由的请求。</pre>\",\"options\":\"[\\\"UseRouting\\\", \\\"UseExceptionHandler\\\", \\\"UseHttpsRedirection\\\", \\\"UseStaticFiles\\\"]\",\"optionTransferList\":[\"A、UseRouting\",\"B、UseExceptionHandler\",\"C、UseHttpsRedirection\",\"D、UseStaticFiles\"],\"id\":\"2c93869d790dcfce017a665241fa0e6b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的拓展学习\",\"questionContent\":\"<pre>下列选项中，哪个中间件是路由中间件，用于路由的请求。（）</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个中间件是路由中间件，用于路由的请求。（）\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"UseRouting\",\"UseExceptionHandler\",\"UseHttpsRedirection\",\"UseStaticFiles\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>UseAuthorization是授权中间件，用于授权用户访问安全资源。</pre>\",\"options\":\"[\\\"UseRouting\\\", \\\"UseExceptionHandler\\\", \\\"UseAuthorization\\\", \\\"UseAuthentication\\\"]\",\"optionTransferList\":[\"A、UseRouting\",\"B、UseExceptionHandler\",\"C、UseAuthorization\",\"D、UseAuthentication\"],\"id\":\"2c93869d790dcfce017a665241fe0e6c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的拓展学习\",\"questionContent\":\"<pre>下列选项中，哪个中间件用于授权用户访问安全资源。（）</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个中间件用于授权用户访问安全资源。（）\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"UseRouting\",\"UseExceptionHandler\",\"UseAuthorization\",\"UseAuthentication\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>UseEndpoints是终结点路由中间件，用于将Razor Pages终结点添加到请求管道。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242020e6d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的拓展学习\",\"questionContent\":\"<pre>【】是终结点路由中间件，用于将Razor Pages终结点添加到请求管道。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是终结点路由中间件，用于将Razor Pages终结点添加到请求管道。\",\"difficulty\":\"B\",\"answer\":\"[\\\"UseEndpoints\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>UseAuthentication是身份验证中间件，尝试对用户进行身份验证，然后才会允许用户访问安全资源。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242060e6e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的拓展学习\",\"questionContent\":\"<pre>【】是身份验证中间件，尝试对用户进行身份验证，然后才会允许用户访问安全资源。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是身份验证中间件，尝试对用户进行身份验证，然后才会允许用户访问安全资源。\",\"difficulty\":\"B\",\"answer\":\"[\\\"UseAuthentication\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652420a0e6f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"注册中间件的拓展学习\",\"questionContent\":\"<pre>身份验证中间件在授权中间件前进行注册。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"身份验证中间件在授权中间件前进行注册。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>路由的匹配顺序是按照路由定义的顺序从上至下进行匹配的，遵循的原则是先配置，先生效。</pre>\",\"options\":\"[\\\"路由的作用就是将应用接收到的请求转发到对应的控制器中去处理。\\\", \\\"路由就是从请求的URL地址中提取信息，然后根据这些信息进行匹配与映射控制器中的方法。\\\", \\\"路由是基于URL的一个中间件框架。\\\", \\\"路由遵循的原则是后配置，先生效\\\"]\",\"optionTransferList\":[\"A、路由的作用就是将应用接收到的请求转发到对应的控制器中去处理。\",\"B、路由就是从请求的URL地址中提取信息，然后根据这些信息进行匹配与映射控制器中的方法。\",\"C、路由是基于URL的一个中间件框架。\",\"D、路由遵循的原则是后配置，先生效\"],\"id\":\"2c93869d790dcfce017a6652420e0e70\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>下列关于路由的描述错误的是。（）</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于路由的描述错误的是。（）\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"路由的作用就是将应用接收到的请求转发到对应的控制器中去处理。\",\"路由就是从请求的URL地址中提取信息，然后根据这些信息进行匹配与映射控制器中的方法。\",\"路由是基于URL的一个中间件框架。\",\"路由遵循的原则是后配置，先生效\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\"],\"answerTransfer\":null,\"solution\":\"<pre>路由分为两种映射模式，分别是传统路由（使用路由表）Conventional routing与特性路由Attribute routing。</pre>\",\"options\":\"[\\\"传统路由\\\", \\\"特性路由\\\", \\\"路由\\\", \\\"路由模式\\\"]\",\"optionTransferList\":[\"A、传统路由\",\"B、特性路由\",\"C、路由\",\"D、路由模式\"],\"id\":\"2c93869d790dcfce017a665242120e71\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>下列选项中，哪个是路由的映射模式（）。</pre>\",\"answerTransferList\":[\"A\",\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个是路由的映射模式（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"传统路由\",\"特性路由\",\"路由\",\"路由模式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>1.传统路由需要配置参数\\n2.传统路由中的参数name表示路由名称，该名称不可与其他路由名称重复。\\n3.传统路由中的参数pattern表示路由模板</pre>\",\"options\":\"[\\\"程序在Configure()方法中默认创建的路由被称为传统路由。\\\", \\\"传统路由不需要配置参数。\\\", \\\"传统路由中的参数names表示路由名称，该名称不可与其他路由名称重复。\\\", \\\"传统路由中的参数pattern表示路由约束。\\\"]\",\"optionTransferList\":[\"A、程序在Configure()方法中默认创建的路由被称为传统路由。\",\"B、传统路由不需要配置参数。\",\"C、传统路由中的参数names表示路由名称，该名称不可与其他路由名称重复。\",\"D、传统路由中的参数pattern表示路由约束。\"],\"id\":\"2c93869d790dcfce017a665242160e72\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>下列关于传统路由的描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于传统路由的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"程序在Configure()方法中默认创建的路由被称为传统路由。\",\"传统路由不需要配置参数。\",\"传统路由中的参数names表示路由名称，该名称不可与其他路由名称重复。\",\"传统路由中的参数pattern表示路由约束。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在程序中调用UseMvc()方法可以启用路由</pre>\",\"options\":\"[\\\"UseRouting()\\\", \\\"UseMvc()\\\", \\\"Index()\\\", \\\"UseRoutings()\\\"]\",\"optionTransferList\":[\"A、UseRouting()\",\"B、UseMvc()\",\"C、Index()\",\"D、UseRoutings()\"],\"id\":\"2c93869d790dcfce017a6652421a0e73\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）方法用于启用路由。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法用于启用路由。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"UseRouting()\",\"UseMvc()\",\"Index()\",\"UseRoutings()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>特性路由是指将RouteAttribute或自定义继承自RouteAttribute的特性类标记在控制器或方法上，同时指定路由URL的字符串，从而实现路由的映射。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652421d0e74\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>【】是指将RouteAttribute或自定义继承自RouteAttribute的特性类标记在控制器或方法上。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是指将RouteAttribute或自定义继承自RouteAttribute的特性类标记在控制器或方法上。\",\"difficulty\":\"B\",\"answer\":\"[\\\"特性路由\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242210e75\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>路由分为两种映射模式，分别是传统路由（使用路由表）Conventional routing与特性路由Attribute routing。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"路由分为两种映射模式，分别是传统路由（使用路由表）Conventional routing与特性路由Attribute routing。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>传统路由规则中的controller的值可以设置为需要访问的控制器名称。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242250e76\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>传统路由规则中的controller的值可以设置为不需要访问的控制器名称。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"传统路由规则中的controller的值可以设置为不需要访问的控制器名称。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242290e77\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>请简述MVC中路由的用途。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述MVC中路由的用途。\",\"difficulty\":\"D\",\"answer\":\"<pre>MVC中的路由主要有两种用途，具体如下：\\n1. 匹配传入的HTTP请求，并把这些请求映射到控制器的操作。需要注意的是，这个请求不匹配服务器文件系统中的文件。\\n2.构造传出的URL，用于响应控制器操作。\\n需要注意的是，路由的匹配顺序是按照路由定义的顺序从上至下进行匹配的，遵循的原则是先配置，先生效。</pre>\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652422d0e78\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>请简述如何配置特性路由。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述如何配置特性路由。\",\"difficulty\":\"D\",\"answer\":\"<pre>特性路由是指将RouteAttribute或自定义继承自RouteAttribute的特性类标记在控制器或方法上，同时指定路由URL的字符串，从而实现路由的映射。\\n我们可以在HomeController控制器和Index()方法中使用Attribute特性配置路由，具体示例代码如下所示。\\n  [Route(&quot;&quot;)]\\n  public class HomeController\\n  {\\n       [Route(&quot;&quot;)]\\n       public string Index()\\n     {\\n          return &quot;index&quot;;\\n     }\\n  }</pre>\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242310e79\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的知识讲解\",\"questionContent\":\"<pre>请简述如何启用路由。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述如何启用路由。\",\"difficulty\":\"D\",\"answer\":\"<pre>如果想要启用路由，则需要在Startup.cs文件的Configure()方法中调用UseRouting()方法注册路由中间件，同时调用UseMvc()方法配置启用路由，具体代码如下所示。\\npublic void Configure(IApplicationBuilder app, IWebHostEnvironment env)\\n{\\n    ......\\n    app.UseRouting();//注册路由中间件\\n    //在MVC项目中，一般调用UseMvc()方法配置启用路由\\n    app.UseMvc(route =&gt;\\n    {\\n      route.MapRoute(&quot;default&quot;, &quot;{controller=Home}/{action=Index}/{id?}&quot;);\\n    });\\n    ......\\n}</pre>\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>在程序中调用MapControllerRoute()方法配置传统路由。</pre>\",\"options\":\"[\\\"MapControllerRoute()\\\", \\\"UseMvc()\\\", \\\"Index()\\\", \\\"UseRoutings()\\\"]\",\"optionTransferList\":[\"A、MapControllerRoute()\",\"B、UseMvc()\",\"C、Index()\",\"D、UseRoutings()\"],\"id\":\"2c93869d790dcfce017a665242350e7a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的动手实践\",\"questionContent\":\"<pre>下列选项中，（）方法用于配置传统路由。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法用于配置传统路由。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"MapControllerRoute()\",\"UseMvc()\",\"Index()\",\"UseRoutings()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>选项中正确配置特性路由的是选项D，[Route(&quot;home&quot;)]</pre>\",\"options\":\"[\\\"[home]\\\", \\\"[Route()]\\\", \\\"Route(&quot;home&quot;)\\\", \\\"[Route(&quot;home&quot;)]\\\"]\",\"optionTransferList\":[\"A、[home]\",\"B、[Route()]\",\"C、Route(&quot;home&quot;)\",\"D、[Route(&quot;home&quot;)]\"],\"id\":\"2c93869d790dcfce017a665242390e7b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的动手实践\",\"questionContent\":\"<pre>如果需要在HomeController上配置特性路由，则以下配置特性路由的方式正确的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"如果需要在HomeController上配置特性路由，则以下配置特性路由的方式正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"[home]\",\"[Route()]\",\"Route(&quot;home&quot;)\",\"[Route(&quot;home&quot;)]\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在程序中配置传统路由需要调用MapRoute()/MapControllerRoute()方法。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652423d0e7c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的动手实践\",\"questionContent\":\"<pre>在程序中配置传统路由需要调用【】方法。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中配置传统路由需要调用【】方法。\",\"difficulty\":\"B\",\"answer\":\"[\\\"MapRoute()/MapControllerRoute()\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242410e7d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的动手实践\",\"questionContent\":\"<pre>在项目中配置了特性路由，默认的传统路由配置就不会起作用了。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在项目中配置了特性路由，默认的传统路由配置就不会起作用了。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>app.UseEndpoints()是获取到UseRouting()方法找到的Endpoint去执行请求的最终处理。</pre>\",\"options\":\"[\\\"用于根据当前请求找到终结点。\\\", \\\"用于获取到UseRouting()方法找到的Endpoint去执行请求的最终处理。\\\", \\\"根据当前请求找到最终处理。\\\", \\\"用于找到终结点。\\\"]\",\"optionTransferList\":[\"A、用于根据当前请求找到终结点。\",\"B、用于获取到UseRouting()方法找到的Endpoint去执行请求的最终处理。\",\"C、根据当前请求找到最终处理。\",\"D、用于找到终结点。\"],\"id\":\"2c93869d790dcfce017a665242450e7e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的拓展学习\",\"questionContent\":\"<pre>下列关于app.UseEndpoints()方法的描述正确的是（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于app.UseEndpoints()方法的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"用于根据当前请求找到终结点。\",\"用于获取到UseRouting()方法找到的Endpoint去执行请求的最终处理。\",\"根据当前请求找到最终处理。\",\"用于找到终结点。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>定义委托类型的关键字是delegate。</pre>\",\"options\":\"[\\\"delegates\\\", \\\"gate\\\", \\\"delegate\\\", \\\"dele\\\"]\",\"optionTransferList\":[\"A、delegates\",\"B、gate\",\"C、delegate\",\"D、dele\"],\"id\":\"2c93869d790dcfce017a665242490e7f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）是定义委托类型的关键字。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是定义委托类型的关键字。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"delegates\",\"gate\",\"delegate\",\"dele\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>app.UseRouting()是根据当前请求找到终结点（Endpoint）</pre>\",\"options\":\"[\\\"UseRoutings()\\\", \\\"UseEndpoints()\\\", \\\"Endpoints()\\\", \\\"UseRouting()\\\"]\",\"optionTransferList\":[\"A、UseRoutings()\",\"B、UseEndpoints()\",\"C、Endpoints()\",\"D、UseRouting()\"],\"id\":\"2c93869d790dcfce017a6652424e0e80\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）方法是根据当前请求找到终结点（Endpoint）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法是根据当前请求找到终结点（Endpoint）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"UseRoutings()\",\"UseEndpoints()\",\"Endpoints()\",\"UseRouting()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>app.UseEndpoints()是获取到UseRouting()方法找到的Endpoint去执行请求的最终处理。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242520e81\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的拓展学习\",\"questionContent\":\"<pre>【】方法是获取到UseRouting()方法找到的Endpoint去执行请求的最终处理。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】方法是获取到UseRouting()方法找到的Endpoint去执行请求的最终处理。\",\"difficulty\":\"B\",\"answer\":\"[\\\"UseEndpoints()\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242560e82\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的拓展学习\",\"questionContent\":\"<pre>定义委托类型的关键字是delegate。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"定义委托类型的关键字是delegate。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652425a0e83\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"配置路由的拓展学习\",\"questionContent\":\"<pre>请简述ASP.NET Core3.0中app.UseRouting()与app.UseEndpoints()的区别。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述ASP.NET Core3.0中app.UseRouting()与app.UseEndpoints()的区别。\",\"difficulty\":\"D\",\"answer\":\"<pre>ASP.NET Core3.0中app.UseRouting()与app.UseEndpoints()的区别如下：\\napp.UseRouting()是根据当前请求找到终结点（Endpoint），app.UseEndpoints()是获取到UseRouting()方法找到的Endpoint去执行请求的最终处理，在这两个方法执行之间可以添加一些需要的中间件去做其他的处理，而且添加的中间件也可以获取到UseRouting()方法获取到的Endpoint，终结点路由的目的也是如此，让后续的中间件可以访问本次请求对应的终结点，此处的终结点可以理解为最终要执行的那个方法（Action）。</pre>\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>当我们需要针对一些包含xxx.aspx或静态文件（如index.html）的URL时，我们不能使用默认的MVC路由来处理请求，需要提供一个特定的路由对URL进行匹配与处理，该路由被称为自定义路由。</pre>\",\"options\":\"[\\\"MVC项目中的默认路由就是自定义路由\\\", \\\"自定义路由是定义一个特定的路由对URL进行匹配与处理\\\", \\\"自定义路由是使用默认路由来处理请求\\\", \\\"自定义路由不会对URL进行匹配与处理\\\"]\",\"optionTransferList\":[\"A、MVC项目中的默认路由就是自定义路由\",\"B、自定义路由是定义一个特定的路由对URL进行匹配与处理\",\"C、自定义路由是使用默认路由来处理请求\",\"D、自定义路由不会对URL进行匹配与处理\"],\"id\":\"2c93869d790dcfce017a6652425e0e84\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的知识讲解\",\"questionContent\":\"<pre>下列关于自定义路由的说法正确的是（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于自定义路由的说法正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"MVC项目中的默认路由就是自定义路由\",\"自定义路由是定义一个特定的路由对URL进行匹配与处理\",\"自定义路由是使用默认路由来处理请求\",\"自定义路由不会对URL进行匹配与处理\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>自定义路由的约束需要实现IRouteConstraint接口，然后重载Match()方法。</pre>\",\"options\":\"[\\\"Route\\\", \\\"IRoute\\\", \\\"Constraint\\\", \\\"IRouteConstraint\\\"]\",\"optionTransferList\":[\"A、Route\",\"B、IRoute\",\"C、Constraint\",\"D、IRouteConstraint\"],\"id\":\"2c93869d790dcfce017a665242620e85\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的知识讲解\",\"questionContent\":\"<pre>自定义路由的约束需要实现下列哪个接口（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"自定义路由的约束需要实现下列哪个接口（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"Route\",\"IRoute\",\"Constraint\",\"IRouteConstraint\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>我们不使用程序中默认的MVC路由来处理请求，而是提供一个特定的路由对URL进行匹配与处理，该路由被称为自定义路由。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a665242660e86\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的知识讲解\",\"questionContent\":\"<pre>我们不使用程序中默认的MVC路由来处理请求，而是提供一个特定的路由对URL进行匹配与处理，该路由被称为【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"我们不使用程序中默认的MVC路由来处理请求，而是提供一个特定的路由对URL进行匹配与处理，该路由被称为【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"自定义路由\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652426a0e87\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的知识讲解\",\"questionContent\":\"<pre>自定义路由约束需要实现IRouteConstraint接口，然后重载Match()方法。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"自定义路由约束需要实现IRouteConstraint接口，然后重载Match()方法。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>MapRoute()方法中的第1个参数default表示路由的名称，第2个参数表示路由的模板，在路由模板中，controller映射项目中的HomeController控制器，action映射项目中的HomeController控制器中的Index()方法，id映射的是action方法中需要传递的参数。</pre>\",\"options\":\"[\\\"参数default表示路由的名称\\\", \\\"controller映射项目中的HomeController控制器\\\", \\\"action映射项目中HomeController控制器中的Index()方法\\\", \\\"id映射Main()方法中传递的参数\\\"]\",\"optionTransferList\":[\"A、参数default表示路由的名称\",\"B、controller映射项目中的HomeController控制器\",\"C、action映射项目中HomeController控制器中的Index()方法\",\"D、id映射Main()方法中传递的参数\"],\"id\":\"2c93869d790dcfce017a6652426e0e88\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的动手实践\",\"questionContent\":\"<pre>下列关于MapRoute(&quot;default&quot;,&quot;{controller=Home}/{action=Index}/{id?}&quot;);方法中的参数描述错误的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于MapRoute(\\\"default\\\",\\\"{controller=Home}/{action=Index}/{id?}\\\");方法中的参数描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"参数default表示路由的名称\",\"controller映射项目中的HomeController控制器\",\"action映射项目中HomeController控制器中的Index()方法\",\"id映射Main()方法中传递的参数\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>通过UseMvc()方法配置自定义路由，在该方法中通过Lambda表达式设置自定义路由。</pre>\",\"options\":\"[\\\"UseMvc()\\\", \\\"MapRoute()\\\", \\\"UseRouting()\\\", \\\"AddMvc()\\\"]\",\"optionTransferList\":[\"A、UseMvc()\",\"B、MapRoute()\",\"C、UseRouting()\",\"D、AddMvc()\"],\"id\":\"2c93869d790dcfce017a665242720e89\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的动手实践\",\"questionContent\":\"<pre>下列（）方法中可以通过Lambda表达式配置自定义路由。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列（）方法中可以通过Lambda表达式配置自定义路由。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"UseMvc()\",\"MapRoute()\",\"UseRouting()\",\"AddMvc()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>通过UseMvc()方法配置自定义路由，在该方法中通过Lambda表达式设置自定义路由，在该表达式中调用MapRoute()方法配置自定义路由模板。</pre>\",\"options\":\"[\\\"UseMvc()\\\", \\\"MapRoute()\\\", \\\"UseRouting()\\\", \\\"AddMvc()\\\"]\",\"optionTransferList\":[\"A、UseMvc()\",\"B、MapRoute()\",\"C、UseRouting()\",\"D、AddMvc()\"],\"id\":\"2c93869d790dcfce017a665242760e8a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的动手实践\",\"questionContent\":\"<pre>下列选项中，（）方法用于配置自定义路由模板。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法用于配置自定义路由模板。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"UseMvc()\",\"MapRoute()\",\"UseRouting()\",\"AddMvc()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>通过UseMvc()方法配置自定义路由，在该方法中通过Lambda表达式设置自定义路由。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652427a0e8b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的动手实践\",\"questionContent\":\"<pre>在程序中的【】方法中可以通过Lambda表达式配置自定义路由。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中的【】方法中可以通过Lambda表达式配置自定义路由。\",\"difficulty\":\"B\",\"answer\":\"[\\\"UseMvc()\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>id映射的是Index()方法中需要传递的参数。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652427e0e8c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的动手实践\",\"questionContent\":\"<pre>MapRoute(&quot;default&quot;,&quot;{controller=Home}/{action=Index}/{id?}&quot;);方法中的id映射的是Home()方法中传递的参数。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"MapRoute(\\\"default\\\",\\\"{controller=Home}/{action=Index}/{id?}\\\");方法中的id映射的是Home()方法中传递的参数。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>约束的是GetUserById()方法中传递的参数id为int类型的数据。此处只定义了一个约束，也就是传递的id为int类型。</pre>\",\"options\":\"[\\\"此段代码中不止一个约束\\\", \\\"约束的不是GetUserById()方法中传递的参数id\\\", \\\"约束GetUserById()方法中传递的参数id为int类型的数据\\\", \\\"未添加任何约束\\\"]\",\"optionTransferList\":[\"A、此段代码中不止一个约束\",\"B、约束的不是GetUserById()方法中传递的参数id\",\"C、约束GetUserById()方法中传递的参数id为int类型的数据\",\"D、未添加任何约束\"],\"id\":\"2c93869d790dcfce017a665242820e8d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的拓展学习\",\"questionContent\":\"<pre>下列关于特性路由中添加约束，以下方代码为例\\n[Route(&quot;users/{id:int}&quot;)]\\npublic User GetUserById(int id) { }\\n对这段代码描述正确的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于特性路由中添加约束，以下方代码为例\\n[Route(\\\"users/{id:int}\\\")]\\npublic User GetUserById(int id) { }\\n对这段代码描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"此段代码中不止一个约束\",\"约束的不是GetUserById()方法中传递的参数id\",\"约束GetUserById()方法中传递的参数id为int类型的数据\",\"未添加任何约束\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>约束了GetUserById()方法中传递的参数id为int类型的数据，并且该数据的最小值为1，此处给参数id设置了2个约束，一个是int类型的数据，一个是最小值为1的数据。</pre>\",\"options\":\"[\\\"约束GetUserById()方法中传递的参数id为int类型，并且最小值为1\\\", \\\"约束的不是GetUserById()方法中传递的参数id，该id的最大值是1\\\", \\\"此段代码中只有一个约束\\\", \\\"未添加任何约束\\\"]\",\"optionTransferList\":[\"A、约束GetUserById()方法中传递的参数id为int类型，并且最小值为1\",\"B、约束的不是GetUserById()方法中传递的参数id，该id的最大值是1\",\"C、此段代码中只有一个约束\",\"D、未添加任何约束\"],\"id\":\"2c93869d790dcfce017a665242860e8e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的拓展学习\",\"questionContent\":\"<pre>下列关于组合约束的使用，以下方代码为例\\n[Route(&quot;users/{id:int:min(1)}&quot;)]\\npublic User GetUserById(int id) { }\\n对这段代码描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于组合约束的使用，以下方代码为例\\n[Route(\\\"users/{id:int:min(1)}\\\")]\\npublic User GetUserById(int id) { }\\n对这段代码描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":[\"约束GetUserById()方法中传递的参数id为int类型，并且最小值为1\",\"约束的不是GetUserById()方法中传递的参数id，该id的最大值是1\",\"此段代码中只有一个约束\",\"未添加任何约束\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>通过定义路由模板可以在URL上传递变量，同时可以给变量提供默认值、可选值以及约束。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652428a0e8f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的拓展学习\",\"questionContent\":\"<pre>通过定义【】可以在URL上传递变量，同时可以给变量提供默认值、可选值以及约束。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"通过定义【】可以在URL上传递变量，同时可以给变量提供默认值、可选值以及约束。\",\"difficulty\":\"B\",\"answer\":\"[\\\"路由模板\\\"]\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6652428e0e90\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"自定义路由的拓展学习\",\"questionContent\":\"<pre>自定义路由约束的使用方法是在特性路由上添加指定的约束名。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"自定义路由约束的使用方法是在特性路由上添加指定的约束名。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:54\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>MVC模式实现了显示模块与功能模块的分离，提高了程序的可维护性、可移植性、可扩展性和可重用性，降低了程序的开发难度。</pre>\",\"options\":\"[\\\"MVC模式被命名为模型-视图-控制器（Model-View-Controller）。\\\", \\\"MVC模式实现了显示模块与功能模块的分离。\\\", \\\"MVC模式提升了程序的开发难度。\\\", \\\"MVC模式将Web应用程序大致分割为三个组件（三层），分别是模型、视图和控制器。\\\"]\",\"optionTransferList\":[\"A、MVC模式被命名为模型-视图-控制器（Model-View-Controller）。\",\"B、MVC模式实现了显示模块与功能模块的分离。\",\"C、MVC模式提升了程序的开发难度。\",\"D、MVC模式将Web应用程序大致分割为三个组件（三层），分别是模型、视图和控制器。\"],\"id\":\"2c93869d790dcfce017a66518bb60e36\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>下列关于MVC模式的说法错误的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于MVC模式的说法错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"MVC模式被命名为模型-视图-控制器（Model-View-Controller）。\",\"MVC模式实现了显示模块与功能模块的分离。\",\"MVC模式提升了程序的开发难度。\",\"MVC模式将Web应用程序大致分割为三个组件（三层），分别是模型、视图和控制器。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>MVC模式的优势有以下三点：\\n（1）各司其职，互不干涉\\n（2）有利于分工\\n（3）有利于组件重用</pre>\",\"options\":\"[\\\"各司其职，互不干涉。\\\", \\\"各个层级的代码会相互影响。\\\", \\\"有利于分工。\\\", \\\"有利于组件重用。\\\"]\",\"optionTransferList\":[\"A、各司其职，互不干涉。\",\"B、各个层级的代码会相互影响。\",\"C、有利于分工。\",\"D、有利于组件重用。\"],\"id\":\"2c93869d790dcfce017a66518bbb0e37\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>下列关于MVC模式的优势说法错误的是（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于MVC模式的优势说法错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"各司其职，互不干涉。\",\"各个层级的代码会相互影响。\",\"有利于分工。\",\"有利于组件重用。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>MVC模式的不足体现在以下几个方面：\\n（1） 增加程序结构的复杂性\\n（2） 视图与控制器过于紧密连接\\n（3） 视图对模型数据的低效率访问\\n（4） 高级界面工具或构造器不支持MVC模式</pre>\",\"options\":\"[\\\"增加程序结构的复杂性。\\\", \\\"视图与控制器不紧密连接。\\\", \\\" 视图对模型数据的高效率访问。\\\", \\\"高级界面工具或构造器支持MVC模式。\\\"]\",\"optionTransferList\":[\"A、增加程序结构的复杂性。\",\"B、视图与控制器不紧密连接。\",\"C、 视图对模型数据的高效率访问。\",\"D、高级界面工具或构造器支持MVC模式。\"],\"id\":\"2c93869d790dcfce017a66518bbf0e38\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>下列关于MVC模式的不足之处说法正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于MVC模式的不足之处说法正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"增加程序结构的复杂性。\",\"视图与控制器不紧密连接。\",\" 视图对模型数据的高效率访问。\",\"高级界面工具或构造器支持MVC模式。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>视图是用户接口层组件，主要用于用户界面的呈现，包括输入与输出。</pre>\",\"options\":\"[\\\"模型\\\", \\\"控制器\\\", \\\" 视图\\\", \\\"模式\\\"]\",\"optionTransferList\":[\"A、模型\",\"B、控制器\",\"C、 视图\",\"D、模式\"],\"id\":\"2c93869d790dcfce017a66518bc40e39\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是用户接口层组件，主要用于呈现用户界面，包括界面的输入与输出。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是用户接口层组件，主要用于呈现用户界面，包括界面的输入与输出。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"模型\",\"控制器\",\" 视图\",\"模式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>控制器是处理用户交互的组件，主要负责转发请求、对请求进行处理，并将数据从Model中获取并传给指定的View。</pre>\",\"options\":\"[\\\"模型\\\", \\\"控制器\\\", \\\" 视图\\\", \\\"模式\\\"]\",\"optionTransferList\":[\"A、模型\",\"B、控制器\",\"C、 视图\",\"D、模式\"],\"id\":\"2c93869d790dcfce017a66518bc80e3a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是处理用户交互的组件，主要负责转发请求、对请求进行处理。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是处理用户交互的组件，主要负责转发请求、对请求进行处理。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"模型\",\"控制器\",\" 视图\",\"模式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>MVC模式的不足体现在以下几个方面：\\n（1） 增加程序结构的复杂性\\n（2） 视图与控制器过于紧密连接\\n（3） 视图对模型数据的低效率访问\\n（4） 高级界面工具或构造器不支持MVC模式</pre>\",\"options\":\"[\\\"增加程序结构的复杂性\\\", \\\"视图与控制器过于紧密连接\\\", \\\"视图对模型数据的低效率访问\\\", \\\"高级界面工具或构造器不支持MVC模式\\\"]\",\"optionTransferList\":[\"A、增加程序结构的复杂性\",\"B、视图与控制器过于紧密连接\",\"C、视图对模型数据的低效率访问\",\"D、高级界面工具或构造器不支持MVC模式\"],\"id\":\"2c93869d790dcfce017a66518bcd0e3b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>下列选项中，哪些内容是MVC模式的缺点（）。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪些内容是MVC模式的缺点（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"增加程序结构的复杂性\",\"视图与控制器过于紧密连接\",\"视图对模型数据的低效率访问\",\"高级界面工具或构造器不支持MVC模式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>MVC模式将Web应用程序大致分割为三个组件（三层），分别是模型（Model）、视图（View）和控制器（Controller）。</pre>\",\"options\":\"[\\\"模型\\\", \\\"视图\\\", \\\"设计\\\", \\\"控制器\\\"]\",\"optionTransferList\":[\"A、模型\",\"B、视图\",\"C、设计\",\"D、控制器\"],\"id\":\"2c93869d790dcfce017a66518bd10e3c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>MVC模式将Web应用程序分割为三层，这三层包括下列哪些选项（）。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"MVC模式将Web应用程序分割为三层，这三层包括下列哪些选项（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"模型\",\"视图\",\"设计\",\"控制器\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\"],\"answerTransfer\":null,\"solution\":\"<pre>MVC模式的优势有以下三点：\\n（1）各司其职，互不干涉\\n（2）有利于分工\\n（3）有利于组件重用</pre>\",\"options\":\"[\\\"各司其职，互不干涉\\\", \\\"有利于分工\\\", \\\"有利于组件重用\\\", \\\"增加程序结构的复杂性\\\"]\",\"optionTransferList\":[\"A、各司其职，互不干涉\",\"B、有利于分工\",\"C、有利于组件重用\",\"D、增加程序结构的复杂性\"],\"id\":\"2c93869d790dcfce017a66518bd60e3d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>下列选项中，哪些是MVC模式的优点内容（）。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪些是MVC模式的优点内容（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"各司其职，互不干涉\",\"有利于分工\",\"有利于组件重用\",\"增加程序结构的复杂性\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>MVC模式强大而简洁，尤其适合应用在Web应用程序中，它将Web应用程序大致分割为三个组件（三层），分别是模型（Model）、视图（View）和控制器（Controller）。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518bda0e3e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>MVC模式将Web应用程序大致分割为三个组件（三层），分别是模型、视图和【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"MVC模式将Web应用程序大致分割为三个组件（三层），分别是模型、视图和【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"控制器\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>模型是存储或处理数据的组件，主要用于实现业务逻辑层对实体类对应的数据库进行操作。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518bde0e3f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>【】是存储或处理数据的组件，主要用于实现业务逻辑层对实体类对应的数据库进行操作。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是存储或处理数据的组件，主要用于实现业务逻辑层对实体类对应的数据库进行操作。\",\"difficulty\":\"B\",\"answer\":\"[\\\"模型\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>控制器是处理用户交互的组件，主要负责转发请求、对请求进行处理，并将数据从Model中获取并传给指定的View。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518be20e40\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>【】是处理用户交互的组件，主要负责转发请求、对请求进行处理。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是处理用户交互的组件，主要负责转发请求、对请求进行处理。\",\"difficulty\":\"B\",\"answer\":\"[\\\"控制器\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>视图是用户接口层组件，主要用于用户界面的呈现，包括输入与输出。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518be60e41\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>【】是用户接口层组件，主要用于用户界面的呈现，包括输入与输出。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是用户接口层组件，主要用于用户界面的呈现，包括输入与输出。\",\"difficulty\":\"B\",\"answer\":\"[\\\"视图\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>MVC模式的优势之一是分层后更有利于组件的重用，如控制层可独立成一个能用的组件，视图层也可做成通用的操作界面。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518beb0e42\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>MVC模式的不足之处是分层后不利于组件的重用。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"MVC模式的不足之处是分层后不利于组件的重用。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518bef0e43\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>模型是存储或处理数据的组件，主要用于实现业务逻辑层对实体类对应的数据库进行操作。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"模型是存储或处理数据的组件，主要用于实现业务逻辑层对实体类对应的数据库进行操作。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>视图是用户接口层组件，主要用于用户界面的呈现，包括输入与输出。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518bf30e44\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>控制器是用户接口层组件，主要用于用户界面的呈现，包括输入与输出。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"控制器是用户接口层组件，主要用于用户界面的呈现，包括输入与输出。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518bf70e45\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>请简述MVC模式中三个组件的主要功能。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述MVC模式中三个组件的主要功能。\",\"difficulty\":\"D\",\"answer\":\"<pre>MVC模式强大而简洁，尤其适合应用在Web应用程序中，它将Web应用程序大致分割为三个组件（三层），分别是模型（Model）、视图（View）和控制器（Controller），这三个组件的主要功能如下所示。\\n1. 模型（简写为M）：模型是存储或处理数据的组件，主要用于实现业务逻辑层对实体类对应的数据库进行操作。\\n2. 视图（简写为V）：视图是用户接口层组件，主要用于用户界面的呈现，包括输入与输出。\\n3. 控制器（简写为C）：控制器是处理用户交互的组件，主要负责转发请求、对请求进行处理，并将数据从Model中获取并传给指定的View。</pre>\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518bfb0e46\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>请简述MVC模式的优点。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述MVC模式的优点。\",\"difficulty\":\"D\",\"answer\":\"<pre>MVC模式的优势有以下三点：\\n（1）各司其职，互不干涉\\n在MVC模式中，模型层、视图层和控制器层，这三个层各司其职，互不干涉。如果哪一层的需求发生了变化，只需要更改相应层中的代码即可，不会影响其他层的代码。\\n（2）有利于分工\\n在MVC模式中，由于是按三个层把程序分开，因此通过该模式可以更好地实现开发中的分工。比如，网页设计人员可以对视图层进行开发，对业务熟悉的开发人员可开发业务层，也就是模型层，其他开发人员可开发控制层。\\n（3）有利于组件重用\\n分层后更有利于组件的重用，如控制层可独立成一个能用的组件，视图层也可做成通用的操作界面。</pre>\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518bff0e47\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>请简述MVC模式的缺点。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述MVC模式的缺点。\",\"difficulty\":\"D\",\"answer\":\"<pre>MVC模式的不足体现在以下几个方面：\\n（1） 增加程序结构的复杂性\\n对于比较简单的界面，如果严格遵守MVC模式，使模型、视图、控制器相互分离，会增加程序结构的复杂性，并可能产生过多的更新操作，降低程序的运行效率。\\n（2） 视图与控制器过于紧密连接\\n视图与控制器虽然是相互分离的，但是它们之间的联系是比较紧密的，如果没有控制器的存在，视图的应用是很有限的，反之亦然，这样就妨碍了它们的独立重用。\\n（3） 视图对模型数据的低效率访问\\n依据模型操作接口的不同，视图可能需要多次调用才能获得足够的显示数据，对未变化数据进行频繁的不必要访问，也将损害程序的操作性能。\\n（4） 高级界面工具或构造器不支持MVC模式\\n目前一些高级的界面工具或构造器不支持MVC模式，改造这些工具以适应MVC模式的代价比较高，从而造成MVC模式的使用较困难。</pre>\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c030e48\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的知识讲解\",\"questionContent\":\"<pre>请简述MVC模式的几个重要规则。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述MVC模式的几个重要规则。\",\"difficulty\":\"D\",\"answer\":\"<pre>MVC模式有以下几个重要规则：\\n（1） 虽然控制器的名字是以Controller结束，但是在URL中不需要写出&ldquo;Controller&rdquo;字符串。\\n（2） 所有Controller默认都存放在名为&ldquo;Controllers&rdquo;的文件夹中，所有视图放在名为&ldquo;Views&rdquo;的文件夹中。\\n（3） 每个Controller都有一个与其同名的视图文件夹，每个视图文件名与对应的Controller中的Action方法同名。</pre>\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>MVC模式有以下几个重要规则：\\n（1） 虽然控制器的名字是以Controller结束，但是在URL中不需要写出&ldquo;Controller&rdquo;字符串。\\n（2） 所有Controller默认都存放在名为&ldquo;Controllers&rdquo;的文件夹中，所有视图放在名为&ldquo;Views&rdquo;的文件夹中。\\n（3） 每个Controller都有一个与其同名的视图文件夹，每个视图文件名与对应的Controller中的Action方法同名。</pre>\",\"options\":\"[\\\"每个Controller都有多个与其同名的视图文件夹。\\\", \\\"所有视图放在名为&ldquo;Views&rdquo;的文件夹中。\\\", \\\"虽然控制器的名字是以Controller结束，但是在URL中不需要写出&ldquo;Controller&rdquo;字符串。\\\", \\\"所有Controller默认都存放在名为&ldquo;Controllers&rdquo;的文件夹中。\\\"]\",\"optionTransferList\":[\"A、每个Controller都有多个与其同名的视图文件夹。\",\"B、所有视图放在名为&ldquo;Views&rdquo;的文件夹中。\",\"C、虽然控制器的名字是以Controller结束，但是在URL中不需要写出&ldquo;Controller&rdquo;字符串。\",\"D、所有Controller默认都存放在名为&ldquo;Controllers&rdquo;的文件夹中。\"],\"id\":\"2c93869d790dcfce017a66518c070e49\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的拓展学习\",\"questionContent\":\"<pre>MVC模式的规则包含以下哪几个选项（）。</pre>\",\"answerTransferList\":[\"B\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"MVC模式的规则包含以下哪几个选项（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"1\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"每个Controller都有多个与其同名的视图文件夹。\",\"所有视图放在名为&ldquo;Views&rdquo;的文件夹中。\",\"虽然控制器的名字是以Controller结束，但是在URL中不需要写出&ldquo;Controller&rdquo;字符串。\",\"所有Controller默认都存放在名为&ldquo;Controllers&rdquo;的文件夹中。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>所有控制器（Controller）文件默认都存放在名为&ldquo;Controllers&rdquo;的文件夹中。</pre>\",\"options\":\"[\\\"Controller\\\", \\\"Controllers\\\", \\\"Views\\\", \\\"View\\\"]\",\"optionTransferList\":[\"A、Controller\",\"B、Controllers\",\"C、Views\",\"D、View\"],\"id\":\"2c93869d790dcfce017a66518c0b0e4a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的拓展学习\",\"questionContent\":\"<pre>下列选项中，哪个文件夹用于存放控制器文件（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个文件夹用于存放控制器文件（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"Controller\",\"Controllers\",\"Views\",\"View\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>所有视图文件存放在名为&ldquo;Views&rdquo;的文件夹中。</pre>\",\"options\":\"[\\\"Controller\\\", \\\"Controllers\\\", \\\"Views\\\", \\\"View\\\"]\",\"optionTransferList\":[\"A、Controller\",\"B、Controllers\",\"C、Views\",\"D、View\"],\"id\":\"2c93869d790dcfce017a66518c0f0e4b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的拓展学习\",\"questionContent\":\"<pre>下列选项中，哪个文件夹用于存放视图（View）文件（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个文件夹用于存放视图（View）文件（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"Controller\",\"Controllers\",\"Views\",\"View\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>所有Controller默认都存放在名为&ldquo;Controllers&rdquo;的文件夹中，所有视图放在名为&ldquo;Views&rdquo;的文件夹中。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c130e4c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的拓展学习\",\"questionContent\":\"<pre>所有控制器（Controller）默认都存放在名为Controllers的文件夹中，所有视图放在名为【】的文件夹中。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"所有控制器（Controller）默认都存放在名为Controllers的文件夹中，所有视图放在名为【】的文件夹中。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Views\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c170e4d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的拓展学习\",\"questionContent\":\"<pre>每个Controller都有一个与其同名的视图文件夹，每个视图文件名与对应的Controller中的Action方法同名。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"每个Controller都有一个与其同名的视图文件夹，每个视图文件名与对应的Controller中的Action方法同名。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c1b0e4e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"认识MVC模式的拓展学习\",\"questionContent\":\"<pre>所有控制器（Controller）文件默认都存放在名为&ldquo;Controllers&rdquo;的文件夹中，所有视图文件都存放在名为&ldquo;Views&rdquo;的文件夹中。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"所有控制器（Controller）文件默认都存放在名为“Controllers”的文件夹中，所有视图文件都存放在名为“Views”的文件夹中。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>Routing是指用于识别URL的规则，当客户端发送请求时根据该规则来识别请求的数据，将请求传递给对应的Controller中的Action方法，在该方法中执行相应的操作。</pre>\",\"options\":\"[\\\"View\\\", \\\"Routing\\\", \\\"Routings\\\", \\\"Controller\\\"]\",\"optionTransferList\":[\"A、View\",\"B、Routing\",\"C、Routings\",\"D、Controller\"],\"id\":\"2c93869d790dcfce017a66518c1f0e4f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的知识讲解\",\"questionContent\":\"<pre>下列选项中，（）是指用于识别URL的规则。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是指用于识别URL的规则。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"View\",\"Routing\",\"Routings\",\"Controller\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>当控制器中的Action方法无法从请求地址中解析出来时，程序会默认执行控制器中的Index()方法，控制器默认为HomeController。</pre>\",\"options\":\"[\\\"Index()\\\", \\\"Main()\\\", \\\"add()\\\", \\\"Default()\\\"]\",\"optionTransferList\":[\"A、Index()\",\"B、Main()\",\"C、add()\",\"D、Default()\"],\"id\":\"2c93869d790dcfce017a66518c230e50\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的知识讲解\",\"questionContent\":\"<pre>当控制器中的Action方法无法从请求地址中解析出来时，程序默认会执行以下（）方法。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当控制器中的Action方法无法从请求地址中解析出来时，程序默认会执行以下（）方法。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"Index()\",\"Main()\",\"add()\",\"Default()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>程序中的Startup.cs文件中定义路由的识别规则。</pre>\",\"options\":\"[\\\"Main.cs\\\", \\\"Startup.cs\\\", \\\"Program.cs\\\", \\\"Map.cs\\\"]\",\"optionTransferList\":[\"A、Main.cs\",\"B、Startup.cs\",\"C、Program.cs\",\"D、Map.cs\"],\"id\":\"2c93869d790dcfce017a66518c280e51\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的知识讲解\",\"questionContent\":\"<pre>下列选项中，哪个文件可以定义路由的识别规则。（）</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个文件可以定义路由的识别规则。（）\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"Main.cs\",\"Startup.cs\",\"Program.cs\",\"Map.cs\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>当控制器中的Action方法无法从请求地址中解析出来时，程序会默认执行控制器中的Index()方法，控制器默认为HomeController。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c2c0e52\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的知识讲解\",\"questionContent\":\"<pre>当控制器中的Action方法无法从请求地址中解析出来时，程序默认会执行Main()方法。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"当控制器中的Action方法无法从请求地址中解析出来时，程序默认会执行Main()方法。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在Startup.cs文件的ConfigureServices()方法中注册MVC模式的服务。</pre>\",\"options\":\"[\\\"Index()\\\", \\\"ConfigureServices()\\\", \\\"add()\\\", \\\"Default()\\\"]\",\"optionTransferList\":[\"A、Index()\",\"B、ConfigureServices()\",\"C、add()\",\"D、Default()\"],\"id\":\"2c93869d790dcfce017a66518c300e53\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的动手实践\",\"questionContent\":\"<pre>下列选项中，可以在哪个方法中注册MVC模式的服务。（）</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，可以在哪个方法中注册MVC模式的服务。（）\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"Index()\",\"ConfigureServices()\",\"add()\",\"Default()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>程序可以调用AddMvc()方法注册MVC模式的服务。</pre>\",\"options\":\"[\\\"Index()\\\", \\\"ConfigureServices()\\\", \\\"add()\\\", \\\"AddMvc()\\\"]\",\"optionTransferList\":[\"A、Index()\",\"B、ConfigureServices()\",\"C、add()\",\"D、AddMvc()\"],\"id\":\"2c93869d790dcfce017a66518c340e54\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的动手实践\",\"questionContent\":\"<pre>程序可以调用以下哪个方法来注册MVC模式的服务。（）</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"程序可以调用以下哪个方法来注册MVC模式的服务。（）\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"Index()\",\"ConfigureServices()\",\"add()\",\"AddMvc()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>在项目的Models文件夹中存放实体数据模型。</pre>\",\"options\":\"[\\\"Model\\\", \\\"Models\\\", \\\"View\\\", \\\"Controllers\\\"]\",\"optionTransferList\":[\"A、Model\",\"B、Models\",\"C、View\",\"D、Controllers\"],\"id\":\"2c93869d790dcfce017a66518c380e55\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的动手实践\",\"questionContent\":\"<pre>下列选项中，哪个文件夹用于存放创建的实体数据模型。（）</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个文件夹用于存放创建的实体数据模型。（）\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"Model\",\"Models\",\"View\",\"Controllers\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>程序可以调用AddMvc()方法注册MVC模式的服务。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c3c0e56\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的动手实践\",\"questionContent\":\"<pre>在程序中，调用服务的【】方法可以注册MVC模式的服务。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在程序中，调用服务的【】方法可以注册MVC模式的服务。\",\"difficulty\":\"B\",\"answer\":\"[\\\"AddMvc()\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c400e57\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的动手实践\",\"questionContent\":\"<pre>项目中的Models文件夹用于存放创建的实体数据模型。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"项目中的Models文件夹用于存放创建的实体数据模型。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>每个Controller可以包含多个Action，每一个Action都是一个方法，方法的返回值\\n是一个ActionResult的实例。</pre>\",\"options\":\"[\\\"Controller\\\", \\\"View\\\", \\\"ActionResult\\\", \\\"Result\\\"]\",\"optionTransferList\":[\"A、Controller\",\"B、View\",\"C、ActionResult\",\"D、Result\"],\"id\":\"2c93869d790dcfce017a66518c440e58\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的拓展学习\",\"questionContent\":\"<pre>Action的返回值是以下哪个类的实例。（）</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Action的返回值是以下哪个类的实例。（）\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"Controller\",\"View\",\"ActionResult\",\"Result\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>在Razor页面中引用命名空间时使用@using。</pre>\",\"options\":\"[\\\"@using\\\", \\\"@model\\\", \\\"@models\\\", \\\"@usings\\\"]\",\"optionTransferList\":[\"A、@using\",\"B、@model\",\"C、@models\",\"D、@usings\"],\"id\":\"2c93869d790dcfce017a66518c490e59\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）可以在Razor页面中引用命名空间。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）可以在Razor页面中引用命名空间。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"@using\",\"@model\",\"@models\",\"@usings\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>模板引擎页面的后缀名为.cshtml。</pre>\",\"options\":\"[\\\".html\\\", \\\".cs\\\", \\\".java\\\", \\\".cshtml\\\"]\",\"optionTransferList\":[\"A、.html\",\"B、.cs\",\"C、.java\",\"D、.cshtml\"],\"id\":\"2c93869d790dcfce017a66518c4d0e5a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）是模板引擎页面的后缀名。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是模板引擎页面的后缀名。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\".html\",\".cs\",\".java\",\".cshtml\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>在Razor页面的最上方通过@model语法可以设定一组View页面的强类型数据模\\n型。</pre>\",\"options\":\"[\\\"@using\\\", \\\"@models\\\", \\\"@model\\\", \\\"@usings\\\"]\",\"optionTransferList\":[\"A、@using\",\"B、@models\",\"C、@model\",\"D、@usings\"],\"id\":\"2c93869d790dcfce017a66518c510e5b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的拓展学习\",\"questionContent\":\"<pre>在Razor页面中，可以通过以下（）语法设定一组View页面的强类型数据模型。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在Razor页面中，可以通过以下（）语法设定一组View页面的强类型数据模型。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":[\"@using\",\"@models\",\"@model\",\"@usings\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在Razor页面中引用命名空间时使用@using。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c550e5c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的拓展学习\",\"questionContent\":\"<pre>在Razor页面中引用命名空间时使用【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在Razor页面中引用命名空间时使用【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"@using\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>使用Razor语法的模板引擎页面的后缀名为.cshtml</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c590e5d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的拓展学习\",\"questionContent\":\"<pre>使用Razor语法的模板引擎页面的后缀名为【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"使用Razor语法的模板引擎页面的后缀名为【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\".cshtml\\\"]\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c5e0e5e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的拓展学习\",\"questionContent\":\"<pre>一个Controller可以包含多个Action，每一个Action都是一个方法，方法的返回值是一个ActionResult类的实例。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"一个Controller可以包含多个Action，每一个Action都是一个方法，方法的返回值是一个ActionResult类的实例。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a66518c620e5f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建MVC项目的拓展学习\",\"questionContent\":\"<pre>Controller负责获取Model数据，并将数据传递给View对象，通知View对象进行显示。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"Controller负责获取Model数据，并将数据传递给View对象，通知View对象进行显示。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:24:09\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>URL也被称为网址，一个URL包含了Web服务器的主机名、端口号、资源名以及所使用的网络协议。</pre>\",\"options\":\"[\\\"主机名\\\", \\\"端口号\\\", \\\"网络\\\", \\\"资源名\\\"]\",\"optionTransferList\":[\"A、主机名\",\"B、端口号\",\"C、网络\",\"D、资源名\"],\"id\":\"2c93869d790dcfce017a6650d0e80e07\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的知识讲解\",\"questionContent\":\"<pre>下列选项中，哪些信息是包含在URL中的。（）</pre>\",\"answerTransferList\":[\"A\",\"B\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪些信息是包含在URL中的。（）\",\"difficulty\":\"B\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"主机名\",\"端口号\",\"网络\",\"资源名\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>静态网页是指网页内容不会变化，这里的变化是指网页与服务器不会发生数据交互。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d0ed0e08\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的知识讲解\",\"questionContent\":\"<pre>静态网页是指网页内容不会变化，这里的变化是指网页与【】不会发生数据交互。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"静态网页是指网页内容不会变化，这里的变化是指网页与【】不会发生数据交互。\",\"difficulty\":\"B\",\"answer\":\"[\\\"服务器\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d0f60e0a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的知识讲解\",\"questionContent\":\"<pre>URL也被称为网址，一个URL包含了Web服务器的主机名、端口号、资源名以及所使用的网络协议。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"URL也被称为网址，一个URL包含了Web服务器的主机名、端口号、资源名以及所使用的网络协议。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d0fa0e0b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的知识讲解\",\"questionContent\":\"<pre>请简述B/S架构和C/S架构的区别。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述B/S架构和C/S架构的区别。\",\"difficulty\":\"D\",\"answer\":\"<pre>架构也可以理解为结构，大部分项目开发都可以分为B/S架构或C/S架构，这里我们学习的ASP.NET开发Web项目就属于B/S架构，它们的具体区别如下：\\n（1） C/S架构是Client/Server的简写，也就是客户端/服务器端的交互，例如：QQ。\\n（2） B/S架构是Browser/Server的简写，也就是浏览器/服务器端的交互，例如：网页QQ。</pre>\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d0ff0e0c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的知识讲解\",\"questionContent\":\"<pre>请简述静态网页与动态网页的区别。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述静态网页与动态网页的区别。\",\"difficulty\":\"D\",\"answer\":\"<pre>Web项目一般都包含静态网页和动态网页，如果网站的数据需要经常更新，则需要使用动态网页，如新闻、股票等类型的网站，而一些企业宣传网站等一般都是静态网页，它们的具体区别如下所示：\\n（1）静态网页是指网页内容不会变化，这里的变化是指与服务器不会发生数据交互。\\n（2）动态网页是指网页的内容会发生改变，会与服务器发生数据交互。</pre>\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>ASP.NET Core项目创建成功后，程序的入口文件为Program.cs。</pre>\",\"options\":\"[\\\"Program.cs\\\", \\\" Startup.cs\\\", \\\"launchSettings.json\\\", \\\"namespace\\\"]\",\"optionTransferList\":[\"A、Program.cs\",\"B、 Startup.cs\",\"C、launchSettings.json\",\"D、namespace\"],\"id\":\"2c93869d790dcfce017a6650d1030e0d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的动手实践\",\"questionContent\":\"<pre>下列选项中，哪个是ASP.NET Core项目的入口文件（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个是ASP.NET Core项目的入口文件（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"Program.cs\",\" Startup.cs\",\"launchSettings.json\",\"namespace\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>ASP.NET Core项目创建成功后，程序的配置文件为launchSettings.json。</pre>\",\"options\":\"[\\\"Program.cs\\\", \\\" Startup.cs\\\", \\\"launchSettings.json\\\", \\\"namespace\\\"]\",\"optionTransferList\":[\"A、Program.cs\",\"B、 Startup.cs\",\"C、launchSettings.json\",\"D、namespace\"],\"id\":\"2c93869d790dcfce017a6650d1070e0e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的动手实践\",\"questionContent\":\"<pre>下列选项中，哪个是ASP.NET Core项目的配置文件（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个是ASP.NET Core项目的配置文件（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"Program.cs\",\" Startup.cs\",\"launchSettings.json\",\"namespace\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>Startup.cs文件中包含Configure()方法</pre>\",\"options\":\"[\\\"Startup.cs文件中包含了添加服务的方法ConfigureServices()\\\", \\\"Startup.cs文件是项目的启动文件\\\", \\\"Startup.cs文件中包含Configure()方法\\\", \\\"Startup.cs文件中包含Configures()方法\\\"]\",\"optionTransferList\":[\"A、Startup.cs文件中包含了添加服务的方法ConfigureServices()\",\"B、Startup.cs文件是项目的启动文件\",\"C、Startup.cs文件中包含Configure()方法\",\"D、Startup.cs文件中包含Configures()方法\"],\"id\":\"2c93869d790dcfce017a6650d10c0e0f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的动手实践\",\"questionContent\":\"<pre>下列选项中，关于Startup.cs文件的描述错误的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，关于Startup.cs文件的描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"Startup.cs文件中包含了添加服务的方法ConfigureServices()\",\"Startup.cs文件是项目的启动文件\",\"Startup.cs文件中包含Configure()方法\",\"Startup.cs文件中包含Configures()方法\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"1\",\"2\"],\"answerTransfer\":null,\"solution\":\"<pre>ASP.NET Core项目创建成功后，程序中的所有代码必须写在定义命名空间的{}内。</pre>\",\"options\":\"[\\\"Program.cs文件中的using关键字用于引用命名空间\\\", \\\" Program.cs文件中的namespace关键字用于定义命名空间\\\", \\\"Program.cs文件中的Main()方法是项目的入口方法\\\", \\\"所有代码必须写在using关键字后面\\\"]\",\"optionTransferList\":[\"A、Program.cs文件中的using关键字用于引用命名空间\",\"B、 Program.cs文件中的namespace关键字用于定义命名空间\",\"C、Program.cs文件中的Main()方法是项目的入口方法\",\"D、所有代码必须写在using关键字后面\"],\"id\":\"2c93869d790dcfce017a6650d1100e10\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的动手实践\",\"questionContent\":\"<pre>下列选项中，关于Program.cs文件中的内容描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\",\"B\",\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，关于Program.cs文件中的内容描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"1\\\", \\\"2\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"Program.cs文件中的using关键字用于引用命名空间\",\" Program.cs文件中的namespace关键字用于定义命名空间\",\"Program.cs文件中的Main()方法是项目的入口方法\",\"所有代码必须写在using关键字后面\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>ASP.NET Core项目创建成功后，程序的入口文件为Program.cs。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1140e11\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的动手实践\",\"questionContent\":\"<pre>ASP.NET Core项目创建成功后，程序的入口文件为【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ASP.NET Core项目创建成功后，程序的入口文件为【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"Program.cs\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>解决方案与项目的关系如同文件夹与文件的关系，一个解决方案下可以包含多个项目</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1190e12\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的动手实践\",\"questionContent\":\"<pre>解决方案与项目的关系如同文件夹与文件的关系，一个解决方案下只能包含一个项目。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"解决方案与项目的关系如同文件夹与文件的关系，一个解决方案下只能包含一个项目。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d11d0e13\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的动手实践\",\"questionContent\":\"<pre>ASP.NET Core项目创建成功后，程序的配置文件为launchSettings.json。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"ASP.NET Core项目创建成功后，程序的配置文件为launchSettings.json。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>浏览器与Web服务器之间的数据交互需要遵守一些规范，HTTP协议就是其中的一种规范，它是HTTP-Hypertext Transfer Protocol的缩写，称为超文本传输协议。HTTP协议是由W3C组织推出的，它专门用于定义浏览器与Web服务器之间交换数据的格式。</pre>\",\"options\":\"[\\\"HTTP协议不是一种规范\\\", \\\" HTTP是HTTP-Hypertext Transfer Protocols的缩写\\\", \\\"HTTP协议称为超文本传输协议\\\", \\\"HTTP协议用于定义Web服务器之间交换数据的格式\\\"]\",\"optionTransferList\":[\"A、HTTP协议不是一种规范\",\"B、 HTTP是HTTP-Hypertext Transfer Protocols的缩写\",\"C、HTTP协议称为超文本传输协议\",\"D、HTTP协议用于定义Web服务器之间交换数据的格式\"],\"id\":\"2c93869d790dcfce017a6650d1220e14\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的拓展学习\",\"questionContent\":\"<pre>下列选项中，关于HTTP协议的描述正确的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，关于HTTP协议的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"HTTP协议不是一种规范\",\" HTTP是HTTP-Hypertext Transfer Protocols的缩写\",\"HTTP协议称为超文本传输协议\",\"HTTP协议用于定义Web服务器之间交换数据的格式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>ASP.NET应用程序执行分为三个步骤，分别是用户发送请求、服务器处理请求、响应请求。</pre>\",\"options\":\"[\\\"用户发送请求\\\", \\\" 服务器处理请求\\\", \\\"服务器响应请求\\\", \\\"客户端处理请求\\\"]\",\"optionTransferList\":[\"A、用户发送请求\",\"B、 服务器处理请求\",\"C、服务器响应请求\",\"D、客户端处理请求\"],\"id\":\"2c93869d790dcfce017a6650d1260e15\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）不属于ASP.NET应用程序执行的步骤。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）不属于ASP.NET应用程序执行的步骤。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"用户发送请求\",\" 服务器处理请求\",\"服务器响应请求\",\"客户端处理请求\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>浏览器首先会与Web服务器建立TCP连接，然后浏览器向Web服务器发出HTTP请求，Web服务器收到HTTP请求后会做出处理，并将处理结果作为HTTP响应发送给浏览器，浏览器收到HTTP响应后关闭TCP连接，整个交互过程结束。</pre>\",\"options\":\"[\\\"Web服务器发出HTTP请求\\\", \\\" 浏览器会与Web服务器建立TCP连接\\\", \\\"浏览器向Web服务器发出HTTP请求\\\", \\\"浏览器收到HTTP响应后，TCP连接会关闭\\\"]\",\"optionTransferList\":[\"A、Web服务器发出HTTP请求\",\"B、 浏览器会与Web服务器建立TCP连接\",\"C、浏览器向Web服务器发出HTTP请求\",\"D、浏览器收到HTTP响应后，TCP连接会关闭\"],\"id\":\"2c93869d790dcfce017a6650d12a0e16\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的拓展学习\",\"questionContent\":\"<pre>下列关于浏览器与Web服务器之间实现通信过程的说法错误的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于浏览器与Web服务器之间实现通信过程的说法错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"Web服务器发出HTTP请求\",\" 浏览器会与Web服务器建立TCP连接\",\"浏览器向Web服务器发出HTTP请求\",\"浏览器收到HTTP响应后，TCP连接会关闭\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>HTTP协议称为超文本传输协议。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d12f0e17\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的拓展学习\",\"questionContent\":\"<pre>HTTP是HTTP-Hypertext Transfer Protocol的缩写，HTTP协议称为【】。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"HTTP是HTTP-Hypertext Transfer Protocol的缩写，HTTP协议称为【】。\",\"difficulty\":\"B\",\"answer\":\"[\\\"超文本传输协议\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1330e18\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"创建ASP.NET Core项目的拓展学习\",\"questionContent\":\"<pre>HTTP协议是由W3C组织推出的，它专门用于定义浏览器与Web服务器之间交换数据的格式。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"HTTP协议是由W3C组织推出的，它专门用于定义浏览器与Web服务器之间交换数据的格式。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>发布网站通常都需要使用到数据库，所以常见服务器结构如下所示：\\n（1） 主机+Windows Server+IIS+SQLServer\\n（2） 主机+Linux+Apache+MySql</pre>\",\"options\":\"[\\\"主机+Windows Server+IIS+SQLServer\\\", \\\"主机+Linux\\\", \\\"主机+Linux+Apache\\\", \\\"主机+Windows\\\"]\",\"optionTransferList\":[\"A、主机+Windows Server+IIS+SQLServer\",\"B、主机+Linux\",\"C、主机+Linux+Apache\",\"D、主机+Windows\"],\"id\":\"2c93869d790dcfce017a6650d1380e19\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"安装与配置IIS的知识讲解\",\"questionContent\":\"<pre>下列选项中，关于常见的服务器结构正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，关于常见的服务器结构正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"主机+Windows Server+IIS+SQLServer\",\"主机+Linux\",\"主机+Linux+Apache\",\"主机+Windows\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>IIS是微软提供的一个服务器软件，它内置在Windows操作系统中。</pre>\",\"options\":\"[\\\"Linux\\\", \\\"Windows\\\", \\\"OS\\\", \\\"Mac\\\"]\",\"optionTransferList\":[\"A、Linux\",\"B、Windows\",\"C、OS\",\"D、Mac\"],\"id\":\"2c93869d790dcfce017a6650d13c0e1a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"安装与配置IIS的知识讲解\",\"questionContent\":\"<pre>IIS服务器软件内置在以下哪个操作系统中（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"IIS服务器软件内置在以下哪个操作系统中（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"Linux\",\"Windows\",\"OS\",\"Mac\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>IIS是微软提供的一个服务器软件，它内置在Windows操作系统中。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1400e1b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"安装与配置IIS的知识讲解\",\"questionContent\":\"<pre>【】是微软提供的一个服务器软件，它内置在Windows操作系统中。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是微软提供的一个服务器软件，它内置在Windows操作系统中。\",\"difficulty\":\"B\",\"answer\":\"[\\\"IIS\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>在实际环境中服务器由硬件主机、操作系统、服务器发布软件组成，而发布网站通常都需要使用到数据库。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1440e1c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"安装与配置IIS的知识讲解\",\"questionContent\":\"<pre>在实际环境中服务器由硬件主机、操作系统、数据库、服务器发布软件组成。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在实际环境中服务器由硬件主机、操作系统、数据库、服务器发布软件组成。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>localhost含义是指&ldquo;本地主机&rdquo;，用于测试网络回路接口，对应的IP地址为&ldquo;127.0.0.1&rdquo;。</pre>\",\"options\":\"[\\\"电脑屏幕\\\", \\\"本地主机\\\", \\\"主机\\\", \\\"Windows\\\"]\",\"optionTransferList\":[\"A、电脑屏幕\",\"B、本地主机\",\"C、主机\",\"D、Windows\"],\"id\":\"2c93869d790dcfce017a6650d1490e1d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"安装与配置IIS的动手实践\",\"questionContent\":\"<pre>下列选项中，关于localhost含义的说法正确的是（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，关于localhost含义的说法正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"电脑屏幕\",\"本地主机\",\"主机\",\"Windows\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>在浏览器的地址栏中输入&ldquo;http://localhost/&rdquo;并按下&ldquo;Enter&rdquo;键。如果浏览器页面中显示&ldquo;IIS7&rdquo;的图，则说明IIS安装成功。</pre>\",\"options\":\"[\\\"http://hosts/\\\", \\\"http://host/\\\", \\\"http://localhost/\\\", \\\"http://local/\\\"]\",\"optionTransferList\":[\"A、http://hosts/\",\"B、http://host/\",\"C、http://localhost/\",\"D、http://local/\"],\"id\":\"2c93869d790dcfce017a6650d14d0e1e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"安装与配置IIS的动手实践\",\"questionContent\":\"<pre>在浏览器的地址栏中输入以下哪个地址可以验证IIS是否安装成功（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"在浏览器的地址栏中输入以下哪个地址可以验证IIS是否安装成功（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"http://hosts/\",\"http://host/\",\"http://localhost/\",\"http://local/\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>localhost含义是指&ldquo;本地主机&rdquo;，用于测试网络回路接口，对应的IP地址为&ldquo;127.0.0.1&rdquo;。</pre>\",\"options\":\"[\\\"127.0.0.5\\\", \\\"127.0.0.3\\\", \\\"127.0.0.2\\\", \\\"127.0.0.1\\\"]\",\"optionTransferList\":[\"A、127.0.0.5\",\"B、127.0.0.3\",\"C、127.0.0.2\",\"D、127.0.0.1\"],\"id\":\"2c93869d790dcfce017a6650d1510e1f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"安装与配置IIS的动手实践\",\"questionContent\":\"<pre>下列选项中，关于localhost对应的IP地址的说法正确的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，关于localhost对应的IP地址的说法正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"127.0.0.5\",\"127.0.0.3\",\"127.0.0.2\",\"127.0.0.1\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>localhost含义是指&ldquo;本地主机&rdquo;，用于测试网络回路接口。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1550e20\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"安装与配置IIS的动手实践\",\"questionContent\":\"<pre>【】含义是指&ldquo;本地主机&rdquo;，用于测试网络回路接口。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】含义是指“本地主机”，用于测试网络回路接口。\",\"difficulty\":\"B\",\"answer\":\"[\\\"localhost\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1590e21\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"安装与配置IIS的拓展学习\",\"questionContent\":\"<pre>请简述通过IIS服务器发布Web项目的操作流程。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述通过IIS服务器发布Web项目的操作流程。\",\"difficulty\":\"D\",\"answer\":\"<pre>通过IIS发布Web项目以及配置参数的操作流程：\\n1)将当前Web项目目录添加到虚拟目录中。\\n2)将当前项目目录添加到应用程序池并配置好参数。\\n3)启动页面进行浏览。</pre>\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>常用的HTML标签的写法。\\n（1）标题标签：&lt;h1&gt;、&lt;h2&gt;、&lt;h3&gt;、&lt;h4&gt;\\n（2）输入框标签：&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt;\\n（3）表格标签：&lt;table&gt;、&lt;tr&gt;、&lt;td&gt;</pre>\",\"options\":\"[\\\"&lt;h1&gt;\\\", \\\"&lt;table&gt;\\\", \\\"&lt;tds&gt;\\\", \\\"&lt;tr&gt;\\\"]\",\"optionTransferList\":[\"A、&lt;h1&gt;\",\"B、&lt;table&gt;\",\"C、&lt;tds&gt;\",\"D、&lt;tr&gt;\"],\"id\":\"2c93869d790dcfce017a6650d15e0e22\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的知识讲解\",\"questionContent\":\"<pre>下列选项中，关于常用的HTML标签的写法错误的是（）。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，关于常用的HTML标签的写法错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"&lt;h1&gt;\",\"&lt;table&gt;\",\"&lt;tds&gt;\",\"&lt;tr&gt;\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>CSS样式可以用来改变页面的显示颜色、位置以及布局等效果，如果把网页当做一张白纸，HTML则可以理解为画素描，CSS可以理解为填充颜色。CSS常见功能用于控制HTML标签的颜色、间距、位置、字体等效果。</pre>\",\"options\":\"[\\\"CSS样式可以用来改变页面的显示颜色、位置以及布局等效果\\\", \\\"如果把网页当做一张白纸，CSS可以理解为为白纸填充颜色\\\", \\\"CSS常见功能用于控制HTML页面的颜色、间距、位置、字体等效果\\\", \\\"CSS样式不能改变网页的任何信息\\\"]\",\"optionTransferList\":[\"A、CSS样式可以用来改变页面的显示颜色、位置以及布局等效果\",\"B、如果把网页当做一张白纸，CSS可以理解为为白纸填充颜色\",\"C、CSS常见功能用于控制HTML页面的颜色、间距、位置、字体等效果\",\"D、CSS样式不能改变网页的任何信息\"],\"id\":\"2c93869d790dcfce017a6650d1620e23\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的知识讲解\",\"questionContent\":\"<pre>下列选项中，关于CSS的描述错误的是（）。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，关于CSS的描述错误的是（）。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"CSS样式可以用来改变页面的显示颜色、位置以及布局等效果\",\"如果把网页当做一张白纸，CSS可以理解为为白纸填充颜色\",\"CSS常见功能用于控制HTML页面的颜色、间距、位置、字体等效果\",\"CSS样式不能改变网页的任何信息\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>JavaScript是一种可以与网页进行简单交互的脚本语言，一般浏览器端与服务器进行交互都需要通过发送请求到服务器来进行处理，并将处理后的结果返回给客户端浏览器。</pre>\",\"options\":\"[\\\"HTML\\\", \\\"JavaScript\\\", \\\"CSS\\\", \\\"Java\\\"]\",\"optionTransferList\":[\"A、HTML\",\"B、JavaScript\",\"C、CSS\",\"D、Java\"],\"id\":\"2c93869d790dcfce017a6650d1670e24\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的知识讲解\",\"questionContent\":\"<pre>下列选项中，哪个语言是一种可以与网页进行简单交互的脚本语言（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，哪个语言是一种可以与网页进行简单交互的脚本语言（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"HTML\",\"JavaScript\",\"CSS\",\"Java\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>常用的表格标签：&lt;table&gt;、&lt;tr&gt;、&lt;td&gt;</pre>\",\"options\":\"[\\\"&lt;tr&gt;\\\", \\\"&lt;h1&gt;\\\", \\\"&lt;h2&gt;\\\", \\\"&lt;td&gt;\\\"]\",\"optionTransferList\":[\"A、&lt;tr&gt;\",\"B、&lt;h1&gt;\",\"C、&lt;h2&gt;\",\"D、&lt;td&gt;\"],\"id\":\"2c93869d790dcfce017a6650d16b0e25\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的知识讲解\",\"questionContent\":\"<pre>下列选项中，属于表格标签的是（）。</pre>\",\"answerTransferList\":[\"A\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，属于表格标签的是（）。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"&lt;tr&gt;\",\"&lt;h1&gt;\",\"&lt;h2&gt;\",\"&lt;td&gt;\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>JavaScript是一种可以与网页进行简单交互的脚本语言。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1700e26\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的知识讲解\",\"questionContent\":\"<pre>【】是一种可以与网页进行简单交互的脚本语言。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是一种可以与网页进行简单交互的脚本语言。\",\"difficulty\":\"B\",\"answer\":\"[\\\"JavaScript\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>CSS样式可以用来改变页面的显示颜色、位置以及布局等效果。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1740e27\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的知识讲解\",\"questionContent\":\"<pre>【】样式可以用来改变页面的显示颜色、位置以及布局等效果。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】样式可以用来改变页面的显示颜色、位置以及布局等效果。\",\"difficulty\":\"B\",\"answer\":\"[\\\"CSS\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>如果把网页当做一张白纸，HTML则可以理解为画素描，CSS可以理解为填充颜色。CSS常见功能用于控制HTML标签的颜色、间距、位置、字体等效果。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1780e28\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的知识讲解\",\"questionContent\":\"<pre>CSS常见功能用于控制HTML标签的颜色、间距、位置、字体等效果。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"CSS常见功能用于控制HTML标签的颜色、间距、位置、字体等效果。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d17d0e29\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的知识讲解\",\"questionContent\":\"<pre>请简述什么是CSS样式。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述什么是CSS样式。\",\"difficulty\":\"D\",\"answer\":\"<pre>CSS样式可以用来改变页面的显示颜色、位置以及布局等效果，如果把网页当做一张白纸，HTML则可以理解为画素描，CSS可以理解为填充颜色。CSS常见功能用于控制HTML标签的颜色、间距、位置、字体等效果，CSS示例代码如下所示：\\nbody {\\n    background-color: #218b57;  //背景颜色\\n    text-align: center;        //文字对齐方式\\n    font-weight: bold;         //文字加粗\\n}</pre>\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>标签&lt;h1&gt;用于显示一级标题</pre>\",\"options\":\"[\\\"标签&lt;h1&gt;用于显示一级标题\\\", \\\"标签&lt;h1&gt;用于显示二级标题\\\", \\\"标签&lt;h1&gt;用于显示三级标题\\\", \\\"标签&lt;h1&gt;用于显示四级标题\\\"]\",\"optionTransferList\":[\"A、标签&lt;h1&gt;用于显示一级标题\",\"B、标签&lt;h1&gt;用于显示二级标题\",\"C、标签&lt;h1&gt;用于显示三级标题\",\"D、标签&lt;h1&gt;用于显示四级标题\"],\"id\":\"2c93869d790dcfce017a6650d1810e2a\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的动手实践\",\"questionContent\":\"<pre>下列关于标签&lt;h1&gt;的描述正确的是（）。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于标签的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"标签&lt;h1&gt;用于显示一级标题\",\"标签&lt;h1&gt;用于显示二级标题\",\"标签&lt;h1&gt;用于显示三级标题\",\"标签&lt;h1&gt;用于显示四级标题\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"3\"],\"answerTransfer\":\"D\",\"solution\":\"<pre>alert()方法用于弹出提示框</pre>\",\"options\":\"[\\\"write()\\\", \\\"getElementById()\\\", \\\"onclick()\\\", \\\"alert()\\\"]\",\"optionTransferList\":[\"A、write()\",\"B、getElementById()\",\"C、onclick()\",\"D、alert()\"],\"id\":\"2c93869d790dcfce017a6650d1850e2b\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的动手实践\",\"questionContent\":\"<pre>下列选项中，（）方法用于弹出提示框。</pre>\",\"answerTransferList\":[\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）方法用于弹出提示框。\",\"difficulty\":\"A\",\"answer\":\"3\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"write()\",\"getElementById()\",\"onclick()\",\"alert()\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\",\"2\",\"3\"],\"answerTransfer\":null,\"solution\":\"<pre>CSS样式常见的有3种，分别是内联样式、内嵌样式以及链入样式。</pre>\",\"options\":\"[\\\"内联样式\\\", \\\"外联样式\\\", \\\"链入样式\\\", \\\"内嵌样式\\\"]\",\"optionTransferList\":[\"A、内联样式\",\"B、外联样式\",\"C、链入样式\",\"D、内嵌样式\"],\"id\":\"2c93869d790dcfce017a6650d18a0e2c\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）是CSS的常见样式。</pre>\",\"answerTransferList\":[\"A\",\"C\",\"D\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是CSS的常见样式。\",\"difficulty\":\"A\",\"answer\":\"[\\\"0\\\", \\\"2\\\", \\\"3\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"内联样式\",\"外联样式\",\"链入样式\",\"内嵌样式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"1\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"1\"],\"answerTransfer\":\"B\",\"solution\":\"<pre>内嵌样式是指将CSS样式单独放入&lt;head&gt;标签中，通过使用&lt;style&gt;标签来标识样式效果。</pre>\",\"options\":\"[\\\"内嵌样式是指将CSS样式写入到HTML标签内部。\\\", \\\"内嵌样式是指将CSS样式单独放入&lt;head&gt;标签中，通过使用&lt;style&gt;标签来标识样式效果。\\\", \\\"是指内嵌样式是指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件。\\\", \\\"内嵌样式只能控制当前标签的样式效果。\\\"]\",\"optionTransferList\":[\"A、内嵌样式是指将CSS样式写入到HTML标签内部。\",\"B、内嵌样式是指将CSS样式单独放入&lt;head&gt;标签中，通过使用&lt;style&gt;标签来标识样式效果。\",\"C、是指内嵌样式是指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件。\",\"D、内嵌样式只能控制当前标签的样式效果。\"],\"id\":\"2c93869d790dcfce017a6650d18f0e2d\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>下列关于内嵌样式的描述正确的是（）。</pre>\",\"answerTransferList\":[\"B\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列关于内嵌样式的描述正确的是（）。\",\"difficulty\":\"A\",\"answer\":\"1\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"内嵌样式是指将CSS样式写入到HTML标签内部。\",\"内嵌样式是指将CSS样式单独放入&lt;head&gt;标签中，通过使用&lt;style&gt;标签来标识样式效果。\",\"是指内嵌样式是指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件。\",\"内嵌样式只能控制当前标签的样式效果。\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"0\"],\"answerTransfer\":\"A\",\"solution\":\"<pre>内联样式是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果。</pre>\",\"options\":\"[\\\"内联样式\\\", \\\"外联样式\\\", \\\"链入样式\\\", \\\"内嵌样式\\\"]\",\"optionTransferList\":[\"A、内联样式\",\"B、外联样式\",\"C、链入样式\",\"D、内嵌样式\"],\"id\":\"2c93869d790dcfce017a6650d1930e2e\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果。</pre>\",\"answerTransferList\":[\"A\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果。\",\"difficulty\":\"A\",\"answer\":\"0\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"内联样式\",\"外联样式\",\"链入样式\",\"内嵌样式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":[\"2\"],\"answerTransfer\":\"C\",\"solution\":\"<pre>链入样式是指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件，这样就可以将HTML代码与CSS代码分离开来，使得页面变得简洁、代码编写变得灵活。</pre>\",\"options\":\"[\\\"内联样式\\\", \\\"外联样式\\\", \\\"链入样式\\\", \\\"内嵌样式\\\"]\",\"optionTransferList\":[\"A、内联样式\",\"B、外联样式\",\"C、链入样式\",\"D、内嵌样式\"],\"id\":\"2c93869d790dcfce017a6650d1970e2f\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>下列选项中，（）指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件。</pre>\",\"answerTransferList\":[\"C\"],\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"下列选项中，（）指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件。\",\"difficulty\":\"A\",\"answer\":\"2\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":[\"内联样式\",\"外联样式\",\"链入样式\",\"内嵌样式\"],\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"0\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>内联样式是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d19b0e30\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>【】是指将CSS样式写入到HTML标签内部。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是指将CSS样式写入到HTML标签内部。\",\"difficulty\":\"B\",\"answer\":\"[\\\"内联样式\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>链入样式是指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件，这样就可以将HTML代码与CSS代码分离开来，使得页面变得简洁、代码编写变得灵活。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1a00e31\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>【】是指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"【】是指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件。\",\"difficulty\":\"B\",\"answer\":\"[\\\"链入样式\\\"]\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"3\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>如果把网页当做一张白纸，HTML则可以理解为画素描，CSS可以理解为填充颜色。CSS常见功能用于控制HTML标签的颜色、间距、位置、字体等效果。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1a40e32\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>内嵌样式是指将CSS样式单独放入&lt;head&gt;标签中，通过使用&lt;style&gt;标签来标识样式效果。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"内嵌样式是指将CSS样式单独放入标签中，通过使用标签来标识样式效果。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>链入样式是指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件，这样就可以将HTML代码与CSS代码分离开来，使得页面变得简洁、代码编写变得灵活。\\n内联样式是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果。</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1a90e33\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>链入样式是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"链入样式是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果。\",\"difficulty\":\"A\",\"answer\":\"错\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1ad0e34\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>内联样式是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"内联样式是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果。\",\"difficulty\":\"A\",\"answer\":\"对\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"2\"},{\"questionLib\":null,\"origin\":1,\"editTime\":null,\"answerList\":null,\"answerTransfer\":null,\"solution\":\"<pre>无</pre>\",\"options\":null,\"optionTransferList\":null,\"id\":\"2c93869d790dcfce017a6650d1b10e35\",\"lang\":null,\"originQuestionId\":null,\"courseId\":null,\"pointText\":\"网页入门的拓展学习\",\"questionContent\":\"<pre>请简述常见的3种CSS样式。</pre>\",\"answerTransferList\":null,\"isUpdateError\":null,\"questionNo\":null,\"isDelete\":null,\"createPerson\":null,\"active\":1,\"questionContentText\":\"请简述常见的3种CSS样式。\",\"difficulty\":\"D\",\"answer\":\"<pre>CSS样式常见的有3种，分别是内联样式、内嵌样式以及链入样式，具体如下所示：\\n（1） 内联样式\\n内联样式是指将CSS样式写入到HTML标签内部，该种写法只能控制当前标签的样式效果，具体示例代码如下：\\n&lt;h1 style=&quot;font-size:20px; color:red;&quot;&gt;内联样式写法&lt;/h1&gt;\\n（2） 内嵌样式\\n内嵌样式是指将CSS样式单独放入&lt;head&gt;标签中，通过使用&lt;style&gt;标签来标识样式效果，具体示例代码如下：\\n&lt;style type=&quot;text/css&quot;&gt;\\n     body {\\n          background-color: red;\\n     }\\n&lt;/style&gt;\\n（3） 链入样式\\n链入样式是指将CSS样式单独放到一个文件中，然后在页面代码中引用该文件，这样就可以将HTML代码与CSS代码分离开来，使得页面变得简洁、代码编写变得灵活，具体示例代码如下：\\n&lt;head&gt;\\n     &lt;link href=&quot;css文件路径&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; /&gt;\\n&lt;/head&gt;\\n添加CSS样式文件引用的方式是，直接在项目中找到需要引用的CSS文件，并将该文件拖拽到需要添加样式引用的页面。</pre>\",\"createTime\":\"2021-07-02 16:23:20\",\"optionsList\":null,\"ask\":null,\"optionsPicture\":null,\"questionNum\":null,\"questionType\":\"4\"}],\"maxLimit\":null,\"searchCount\":true,\"orders\":[],\"countId\":null},\"success\":true,\"message\":null}";
            JObject obj = JObject.Parse(strjson);
            StringBuilder sb = new StringBuilder();
            int num = obj["data"]["records"].Count();

            sb.Append("<table style=\"border:1px solid black\">");
            sb.Append("<thead>");
            sb.Append("<tr>");
            sb.Append("<td style=\"width:60px; \">题型</td>");
            sb.Append("<td style=\"width:60px; \">标题</td>");            
            sb.Append("<td style=\"width:400px; \">题干</td>");         
            sb.Append("<td style=\"width:300px; \">答案</td>");
            sb.Append("<td style=\"width:90px; \">选项A</td>");
            sb.Append("<td style=\"width:90px; \">选项B</td>");
            sb.Append("<td style=\"width:90px; \">选项C</td>");
            sb.Append("<td style=\"width:90px; \">选项D</td>");
            sb.Append("<td style=\"width:90px; \">本题解析</td>");
            sb.Append("<td style=\"width:90px; \">难度</td>");

            sb.Append("</tr>");
            sb.Append("</thead>");
           
            for (int i = 0; i < num; i++)
            {
                string strType = obj["data"]["records"][i]["questionType"].ToString();
                string strA = "";
                string strB = "";
                string strC = "";
                string strD = "";
                string strAn = "";
                sb.Append("<tr>");
                //string strtitle = (i + 1) + "." + obj["data"]["records"][i]["questionContent"].ToString();
                //sb.Append("<td>" + (i + 1) + "</td>");
                
                string[] stringSeparators = new string[] { "," };
                switch (strType)
                {
                    case "0"://单选
                        sb.Append("<td>1</td>");
                        sb.Append("<td>单选题</td>");
                        sb.Append("<td  style=\"width:400px; \">" + obj["data"]["records"][i]["questionContent"].ToString() + "</td>");
                        string[] strtemp = obj["data"]["records"][i]["optionTransferList"].ToString().Split(stringSeparators, StringSplitOptions.None);
                        string[] stringSeparators1 = new string[] { "\"" };
                        strA = strtemp[0].Split(stringSeparators1, StringSplitOptions.None)[1];
                        strB = strtemp[1].Split(stringSeparators1, StringSplitOptions.None)[1];
                        strC = strtemp[2].Split(stringSeparators1, StringSplitOptions.None)[1];
                        strD = strtemp[3].Split(stringSeparators1, StringSplitOptions.None)[1];
                        strAn = obj["data"]["records"][i]["answer"].ToString();
                        sb.Append("<td>" + strAn + "</td>");
                        sb.Append("<td>" + strA + "</td>");
                        sb.Append("<td>" + strB + "</td>");
                        sb.Append("<td>" + strC + "</td>");
                        sb.Append("<td>" + strD + "</td>");
                        sb.Append("<td>" + obj["data"]["records"][i]["solution"] + "</td>");
                        sb.Append("<td>" + obj["data"]["records"][i]["difficulty"] + "</td>");
                        
                        break;
                    case "2"://判断
                        sb.Append("<td>3</td>");
                        sb.Append("<td>判断题</td>");
                        sb.Append("<td  style=\"width:400px; \">" + obj["data"]["records"][i]["questionContent"].ToString() + "</td>");
                        strA = "对";
                        strB = "错";
                        strAn = obj["data"]["records"][i]["answer"].ToString();
                        sb.Append("<td>" + strA + "<br />");
                        sb.Append(strB + "</td>");
                        sb.Append("<td>" + strAn + "</td>");
                        break;
                    case "1"://多选   
                        sb.Append("<td>2</td>");
                        sb.Append("<td>多选题</td>");
                        sb.Append("<td  style=\"width:400px; \">" + obj["data"]["records"][i]["questionContent"].ToString() + "</td>");
                        string[] strtemp1 = obj["data"]["records"][i]["optionTransferList"].ToString().Split(stringSeparators, StringSplitOptions.None);
                        string[] stringSeparators2 = new string[] { "\"" };
                        strA = strtemp1[0].Split(stringSeparators2, StringSplitOptions.None)[1];
                        strB = strtemp1[1].Split(stringSeparators2, StringSplitOptions.None)[1];
                        strC = strtemp1[2].Split(stringSeparators2, StringSplitOptions.None)[1];
                        strD = strtemp1[3].Split(stringSeparators2, StringSplitOptions.None)[1];
                        strAn = obj["data"]["records"][i]["answer"].ToString();
                        sb.Append("<td>" + strA + "<br />");
                        sb.Append(strB + "<br />");
                        sb.Append(strC + "<br />");
                        sb.Append(strD + "</td>");
                        sb.Append("<td>" + strAn + "</td>");
                        break;
                    case "3"://填空
                        sb.Append("<td>4</td>");
                        sb.Append("<td>填空题</td>");
                        sb.Append("<td  style=\"width:400px; \">" + obj["data"]["records"][i]["questionContent"].ToString() + "</td>");
                        strAn = obj["data"]["records"][i]["answer"].ToString();
                        string[] stringSeparators3 = new string[] { "\"" };
                        strAn = strAn.Split(stringSeparators3, StringSplitOptions.None)[1];
                        sb.Append("<td> </td>");
                        sb.Append("<td>" + strAn + "</td>");
                        break;
                    case "4"://简答
                        sb.Append("<td>6</td>");
                        sb.Append("<td>简答题</td>");
                        sb.Append("<td  style=\"width:400px; \">" + obj["data"]["records"][i]["questionContent"].ToString() + "</td>");
                        strAn = obj["data"]["records"][i]["answer"].ToString();
                        sb.Append("<td> </td>");
                        sb.Append("<td>" + strAn + "</td>");
                        break;
                    default:
                        break;
                }
            }
            sb.Append("</ table >");
            mydiv.InnerHtml = sb.ToString();
        }

    }
}